/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
import { CompleteFormRepresentation } from '../model/completeFormRepresentation';
import { FormDefinitionRepresentation } from '../model/formDefinitionRepresentation';
import { FormValueRepresentation } from '../model/formValueRepresentation';
import { ProcessInstanceVariableRepresentation } from '../model/processInstanceVariableRepresentation';
import { SaveFormRepresentation } from '../model/saveFormRepresentation';
import { BaseApi } from './base.api';
/**
* Taskforms service.
* @module TaskformsApi
*/
export declare class TaskFormsApi extends BaseApi {
    /**
    * Complete a task form
    *
    *
    *
    * @param taskId taskId
    * @param completeTaskFormRepresentation completeTaskFormRepresentation
    * @return Promise<{}>
    */
    completeTaskForm(taskId: string, completeTaskFormRepresentation: CompleteFormRepresentation): Promise<any>;
    /**
        * Get task variables
        *
        *
        *
        * @param taskId taskId
        * @return Promise<ProcessInstanceVariableRepresentation>
        */
    getProcessInstanceVariables(taskId: string): Promise<ProcessInstanceVariableRepresentation>;
    /**
     * Retrieve Column Field Values
     * Specific case to retrieve information on a specific column
     * @param {String} taskId taskId
     * @param {String} field field
     * @param {String} column column
     */
    getRestFieldColumnValues(taskId: string, field: string, column: string): Promise<any>;
    /**
        * Retrieve populated field values
        *
        * Form field values that are populated through a REST backend, can be retrieved via this service
        *
        * @param taskId taskId
        * @param field field
        * @return Promise<FormValueRepresentation []>
        */
    getRestFieldValues(taskId: string, field: string): Promise<FormValueRepresentation[]>;
    /**
        * Get a task form
        *
        *
        *
        * @param taskId taskId
        * @return Promise<FormDefinitionRepresentation>
        */
    getTaskForm(taskId: string): Promise<FormDefinitionRepresentation>;
    /**
        * Save a task form
        *
        *
        *
        * @param taskId taskId
        * @param saveTaskFormRepresentation saveTaskFormRepresentation
        * @return Promise<{}>
        */
    saveTaskForm(taskId: string, saveTaskFormRepresentation: SaveFormRepresentation): Promise<any>;
    /**
     * Retrieve Task Form Variables
     * @param {String} taskId taskId
     */
    getTaskFormVariables(taskId: string): Promise<any>;
}

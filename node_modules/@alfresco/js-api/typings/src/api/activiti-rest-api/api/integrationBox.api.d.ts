/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
import { ResultListDataRepresentationBoxContent } from '../model/resultListDataRepresentationBoxContent';
import { UserAccountCredentialsRepresentation } from '../model/userAccountCredentialsRepresentation';
import { BaseApi } from './base.api';
/**
* Integrationbox service.
* @module IntegrationboxApi
*/
export declare class IntegrationBoxApi extends BaseApi {
    /**
    * Box Authorization
    *
    * Returns Box OAuth HTML Page
    *
    * @return Promise<{}>
    */
    confirmAuthorisation(): Promise<any>;
    /**
        * Add Box account
        *
        *
        *
        * @param userId userId
        * @param credentials credentials
        * @return Promise<{}>
        */
    createRepositoryAccount(userId: number, credentials: UserAccountCredentialsRepresentation): Promise<any>;
    /**
        * Delete account information
        *
        *
        *
        * @param userId userId
        * @return Promise<{}>
        */
    deleteRepositoryAccount(userId: number): Promise<any>;
    /**
        * Get status information
        *
        *
        *
        * @return Promise<boolean>
        */
    getBoxPluginStatus(): Promise<boolean>;
    /**
        * List file and folders
        *
        *
        *
        * @param opts Optional parameters
        * @param opts.filter filter
        * @param opts.parent parent
        * @return Promise<ResultListDataRepresentationBoxContent>
        */
    getFiles(opts?: any): Promise<ResultListDataRepresentationBoxContent>;
    /**
        * Get account information
        *
        *
        *
        * @param userId userId
        * @return Promise<{}>
        */
    getRepositoryAccount(userId: number): Promise<any>;
    /**
        * Update account information
        *
        *
        *
        * @param userId userId
        * @param credentials credentials
        * @return Promise<{}>
        */
    updateRepositoryAccount(userId: number, credentials: UserAccountCredentialsRepresentation): Promise<any>;
}

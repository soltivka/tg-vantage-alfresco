/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
import { AlfrescoApiClient } from '../alfrescoApiClient';
import { AlfrescoApiConfig } from '../alfrescoApiConfig';
import { Authentication } from './authentication';
import { Storage } from '../storage';
export declare class ProcessAuth extends AlfrescoApiClient {
    ticket: string;
    storage: Storage;
    authentications: Authentication;
    constructor(config: AlfrescoApiConfig);
    setConfig(config: AlfrescoApiConfig): void;
    changeHost(): void;
    changeCsrfConfig(disableCsrf: boolean): void;
    saveUsername(username: string): void;
    /**
     * login Activiti API
     * @param  username:   // Username to login
     * @param  password:   // Password to login
     *
     * @returns A promise that returns {new authentication ticket} if resolved and {error} if rejected.
     * */
    login(username: string, password: string): Promise<any>;
    /**
     * logout Alfresco API
     *
     * @returns {Promise} A promise that returns {new authentication ticket} if resolved and {error} if rejected.
     * */
    logout(): Promise<any>;
    /**
     * Set the current Ticket
     *
     * @param  Ticket
     * */
    setTicket(ticket: string): void;
    invalidateSession(): void;
    /**
     * Get the current Ticket
     * */
    getTicket(): string;
    /**
     * If the client is logged in return true
     */
    isLoggedIn(): boolean;
    /**
     * return the Authentication
     * */
    getAuthentication(): any;
}

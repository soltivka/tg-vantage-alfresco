/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
import { AlfrescoApi } from '../../../../alfrescoApi';
import { ResultListDataRepresentationAlfrescoNetworkRepresenation } from '../../../../api/activiti-rest-api/model/resultListDataRepresentationAlfrescoNetworkRepresenation';
import { ResultListDataRepresentationAlfrescoSiteRepresenation } from '../../../../api/activiti-rest-api/model/resultListDataRepresentationAlfrescoSiteRepresenation';
import { ResultListDataRepresentationAlfrescoContentRepresentation } from '../../../../api/activiti-rest-api/model/resultListDataRepresentationAlfrescoContentRepresentation';
import { ResultListDataRepresentationAlfrescoEndpointRepresentation } from '../../../../api/activiti-rest-api/model/resultListDataRepresentationAlfrescoEndpointRepresentation';
/**
 * @deprecated 3.0.0
 */
export declare class AlfrescoApiActiviti {
    private integrationAlfrescoCloudApi;
    private IntegrationAlfrescoOnPremiseApi;
    init(alfrescoApi?: AlfrescoApi): void;
    confirmAuthorisation(code: string): Promise<any>;
    getAllNetworks(): Promise<ResultListDataRepresentationAlfrescoNetworkRepresenation>;
    getAllSites(networkId: string): Promise<ResultListDataRepresentationAlfrescoSiteRepresenation>;
    getAllSitesByRepositoryId(repositoryId: string): Promise<ResultListDataRepresentationAlfrescoSiteRepresenation>;
    getContentInFolder(networkId: string, folderId: string): Promise<ResultListDataRepresentationAlfrescoContentRepresentation>;
    getContentInFolderByRepositoryId(repositoryId: string, folderId: string): Promise<ResultListDataRepresentationAlfrescoContentRepresentation>;
    getContentInSite(networkId: string, siteId: string): Promise<ResultListDataRepresentationAlfrescoContentRepresentation>;
    getContentInSiteByRepositoryId(repositoryId: string, siteId: string): Promise<ResultListDataRepresentationAlfrescoContentRepresentation>;
    getRepositories(opts?: any): Promise<ResultListDataRepresentationAlfrescoEndpointRepresentation>;
}

{"version":3,"file":"sharedlinksApi.js","sourceRoot":"","sources":["sharedlinksApi.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;AAEF,OAAO,EAAE,cAAc,IAAI,iBAAiB,EAAE,MAAM,sDAAsD,CAAC;AAY3G,MAAM,OAAO,cAAc;IAIhB,IAAI,CAAC,WAAyB;QACjC,IAAI,CAAC,cAAc,GAAG,IAAI,iBAAiB,CAAC,WAAW,CAAC,CAAC;IAC7D,CAAC;IAWD,aAAa,CAAC,cAAoC,EAAE,IAAU;QAC1D,OAAO,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;IACtE,CAAC;IAOD,gBAAgB,CAAC,QAAgB;QAC7B,OAAO,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IAC1D,CAAC;IAQD,eAAe,CAAC,QAAgB,EAAE,mBAAyC;QACvE,OAAO,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,QAAQ,EAAO,mBAAmB,CAAC,CAAC;IACnF,CAAC;IAaD,eAAe,CAAC,IAAU;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IACrD,CAAC;IAWD,aAAa,CAAC,QAAgB,EAAE,IAAU;QACtC,OAAO,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC7D,CAAC;IAUD,oBAAoB,CAAC,QAAgB,EAAE,IAAU;QAC7C,OAAO,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;IAWD,6BAA6B,CAAC,QAAgB,EAAE,WAAmB,EAAE,IAAU;QAC3E,OAAO,IAAI,CAAC,cAAc,CAAC,6BAA6B,CAAC,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;IAC1F,CAAC;IAQD,uBAAuB,CAAC,QAAgB;QACpC,OAAO,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC;IAClE,CAAC;IAQD,sBAAsB,CAAC,QAAgB,EAAE,WAAmB;QACxD,OAAO,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;IAC7E,CAAC;CACJ","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { SharedlinksApi as NewSharedlinksApi } from '../../../../api/content-rest-api/api/sharedlinks.api';\nimport { AlfrescoApi } from '../../../../alfrescoApi';\nimport { SharedLinkEntry } from '../../../../api/content-rest-api/model/sharedLinkEntry';\nimport { SharedLinkBodyCreate } from '../../../../api/content-rest-api/model/sharedLinkBodyCreate';\nimport { SharedLinkBodyEmail } from '../../../../api/content-rest-api/model/sharedLinkBodyEmail';\nimport { SharedLinkPaging } from '../../../../api/content-rest-api/model/sharedLinkPaging';\nimport { RenditionPaging } from '../../../../api/content-rest-api/model/renditionPaging';\nimport { RenditionEntry } from '../../../../api/content-rest-api/model/renditionEntry';\n\n/**\n * @deprecated 3.0.0\n */\nexport class SharedlinksApi {\n\n    private sharedlinksApi: NewSharedlinksApi;\n\n    public init(alfrescoApi?: AlfrescoApi) {\n        this.sharedlinksApi = new NewSharedlinksApi(alfrescoApi);\n    }\n\n    /**\n     * Create a shared link to a file\n     * Create shared link to specified file identified by **nodeId** in request body.\n     * @param {module:model/SharedLinkBody} sharedLinkBody The nodeId to create a shared link for.\n     * @param {Object} opts Optional parameters\n     * @param {string[]} opts.include Returns additional information about the shared link, the following optional fields can be requested:\\n* allowableOperations\\n\n     * @param {string[]} opts.fields A list of field names.\\n\\nYou can use this parameter to restrict the fields\\nreturned within a response if, for example, you want to save on overall bandwidth.\\n\\nThe list applies to a returned individual\\nentity or entries within a collection.\\n\\nIf the API method also supports the **include**\\nparameter, then the fields specified in the **include**\\nparameter are returned in addition to those specified in the **fields** parameter.\\n\n     * data is of type: {module:model/NodeSharedLinkEntry}\n     */\n    addSharedLink(sharedLinkBody: SharedLinkBodyCreate, opts?: any): Promise<SharedLinkEntry> {\n        return this.sharedlinksApi.createSharedLink(sharedLinkBody, opts);\n    }\n\n    /**\n     * Deletes a shared link\n     * Deletes the shared link with identifier **sharedId**.\n     * @param {String} sharedId The identifier of a shared link to a file.\n     */\n    deleteSharedLink(sharedId: string): Promise<any> {\n        return this.sharedlinksApi.deleteSharedLink(sharedId);\n    }\n\n    /**\n     * Email shared link\n     * Sends email with app-specific url including identifier **sharedId**.\\n\\nThe client and recipientEmails properties are mandatory in the request body. For example, to email a shared link with minimum info:\\n&#x60;&#x60;&#x60;JSON\\n{\\n    \\&quot;client\\&quot;: \\&quot;myClient\\&quot;,\\n    \\&quot;recipientEmails\\&quot;: [\\&quot;john.doe@acme.com\\&quot;, joe.bloggs@acme.com]\\n}\\n&#x60;&#x60;&#x60;\\nA plain text message property can be optionally provided in the request body to customise the sent email.\\nAlso, a locale property can be optionally provided in the request body to send the emails in a particular language.\\nFor example, to email a shared link with a messages and a locale:\\n&#x60;&#x60;&#x60;JSON\\n{\\n    \\&quot;client\\&quot;: \\&quot;myClient\\&quot;,\\n    \\&quot;recipientEmails\\&quot;: [\\&quot;john.doe@acme.com\\&quot;, joe.bloggs@acme.com],\\n    \\&quot;message\\&quot;: \\&quot;myMessage\\&quot;,\\n    \\&quot;locale\\&quot;:\\&quot;en-GB\\&quot;\\n}\\n&#x60;&#x60;&#x60;\\n**Note:** The client must be registered before you can send a shared link email. See [server documentation]\\n\n     * @param {String} sharedId The identifier of a shared link to a file.\n     * @param {module:model/EmailSharedLinkBody} emailSharedLinkBody The shared link email to send.\n     */\n    emailSharedLink(sharedId: string, emailSharedLinkBody:  SharedLinkBodyEmail): Promise<any> {\n        return this.sharedlinksApi.emailSharedLink(sharedId, <any>emailSharedLinkBody);\n    }\n\n    /**\n     * Find shared links\n     * Find (search for) links that current user has read permission on source node.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.where Optionally filter the list by \\&quot;sharedByUser\\&quot; userid of person who shared the link (can also use -me-)\\n*   where&#x3D;(sharedByUser&#x3D;&#39;jbloggs&#39;)\\n*   where&#x3D;(sharedByUser&#x3D;&#39;-me-&#39;)\n     * @param {Integer} opts.skipCount The number of entities that exist in the collection before those included in this list.\n     * @param {Integer} opts.maxItems The maximum number of items to return in the list.\n     * @param {string[]} opts.include Returns additional information about the shared link, the following optional fields can be requested:\\n* allowableOperations\\n\n     * @param {string[]} opts.fields A list of field names.\\n\\nYou can use this parameter to restrict the fields\\nreturned within a response if, for example, you want to save on overall bandwidth.\\n\\nThe list applies to a returned individual\\nentity or entries within a collection.\\n\\nIf the API method also supports the **include**\\nparameter, then the fields specified in the **include**\\nparameter are returned in addition to those specified in the **fields** parameter.\\n\n     * data is of type: {module:model/NodeSharedLinkPaging}\n     */\n    findSharedLinks(opts?: any): Promise<SharedLinkPaging> {\n        return this.sharedlinksApi.listSharedLinks(opts);\n    }\n\n    /**\n     * Get a shared link\n     * Returns minimal information for the file with shared link identifier **sharedId**.\\n\\n**Note:** No authentication is required to call this endpoint.\\n\n     * @param {String} sharedId The identifier of a shared link to a file.\n     * @param {Object} opts Optional parameters\n     * @param {string[]} opts.include Returns additional information about the shared link, the following optional fields can be requested:\\n* allowableOperations\\n\n     * @param {string[]} opts.fields A list of field names.\\n\\nYou can use this parameter to restrict the fields\\nreturned within a response if, for example, you want to save on overall bandwidth.\\n\\nThe list applies to a returned individual\\nentity or entries within a collection.\\n\\nIf the API method also supports the **include**\\nparameter, then the fields specified in the **include**\\nparameter are returned in addition to those specified in the **fields** parameter.\\n\n     * data is of type: {module:model/NodeSharedLinkEntry}\n     */\n    getSharedLink(sharedId: string, opts?: any): Promise<SharedLinkEntry> {\n        return this.sharedlinksApi.getSharedLink(sharedId, opts);\n    }\n\n    /**\n     * Get file content\n     * Returns the content of the file with shared link identifier **sharedId**.\\n\\n**Note:** No authentication is required to call this endpoint.\\n\n     * @param {String} sharedId The identifier of a shared link to a file.\n     * @param {Object} opts Optional parameters\n     * @param {Boolean} opts.attachment **true** enables a web browser to download the file as an attachment.\\n**false** means a web browser may preview the file in a new tab or window, but not\\ndownload the file.\\n\\nYou can only set this parameter to **false** if the content type of the file is in the supported list;\\nfor example, certain image files and PDF files.\\n\\nIf the content type is not supported for preview, then a value of **false**  is ignored, and\\nthe attachment will be returned in the response.\\n (default to true)\n     * @param {Date} opts.ifModifiedSince Only returns the content if it has been modified since the date provided.\\nUse the date format defined by HTTP. For example, &#x60;Wed, 09 Mar 2016 16:56:34 GMT&#x60;.\\n\n     */\n    getSharedLinkContent(sharedId: string, opts?: any): Promise<any> {\n        return this.sharedlinksApi.getSharedLinkContent(sharedId, opts);\n    }\n\n    /**\n     * Get shared link rendition content\n     * Returns the rendition content for file with shared link identifier **sharedId**.\\n\\n**Note:** No authentication is required to call this endpoint.\\n\n     * @param {String} sharedId The identifier of a shared link to a file.\n     * @param {String} renditionId The name of a thumbnail rendition, for example *doclib*, or *pdf*.\n     * @param {Object} opts Optional parameters\n     * @param {Boolean} opts.attachment **true** enables a web browser to download the file as an attachment.\\n**false** means a web browser may preview the file in a new tab or window, but not\\ndownload the file.\\n\\nYou can only set this parameter to **false** if the content type of the file is in the supported list;\\nfor example, certain image files and PDF files.\\n\\nIf the content type is not supported for preview, then a value of **false**  is ignored, and\\nthe attachment will be returned in the response.\\n (default to true)\n     * @param {Date} opts.ifModifiedSince Only returns the content if it has been modified since the date provided.\\nUse the date format defined by HTTP. For example, &#x60;Wed, 09 Mar 2016 16:56:34 GMT&#x60;.\\n\n     */\n    getSharedLinkRenditionContent(sharedId: string, renditionId: string, opts?: any): Promise<any> {\n        return this.sharedlinksApi.getSharedLinkRenditionContent(sharedId, renditionId, opts);\n    }\n\n    /**\n     * List information for created renditions\n     * Returns the rendition information for the file with shared link identifier **sharedId**.\\n\\nThis will only return rendition information, including the rendition id, for each rendition\\nwhere the rendition status is CREATED (ie. available\\u00A0to view/download).\\n\\n**Note:** No authentication is required to call this endpoint.      \\n\n     * @param {String} sharedId The identifier of a shared link to a file.\n     * data is of type: {module:model/RenditionPaging}\n     */\n    getSharedLinkRenditions(sharedId: string): Promise<RenditionPaging> {\n        return this.sharedlinksApi.listSharedLinkRenditions(sharedId);\n    }\n\n    /**\n     * Gets rendition information for the file with shared link identifier sharedId.\n     * @param {String} sharedId The identifier of a shared link to a file.\n     * @param {String} renditionId The name of a thumbnail rendition, for example *doclib*, or *pdf*.\n     * data is of type: {module:model/RenditionEntry}\n     */\n    getSharedLinkRendition(sharedId: string, renditionId: string): Promise<RenditionEntry> {\n        return this.sharedlinksApi.getSharedLinkRendition(sharedId, renditionId);\n    }\n}\n"]}
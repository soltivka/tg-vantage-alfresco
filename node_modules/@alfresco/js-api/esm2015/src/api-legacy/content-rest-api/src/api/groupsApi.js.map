{"version":3,"file":"groupsApi.js","sourceRoot":"","sources":["groupsApi.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;AAGF,OAAO,EAAE,SAAS,IAAI,YAAY,EAAE,MAAM,iDAAiD,CAAC;AAY5F,MAAM,OAAO,SAAS;IAIX,IAAI,CAAC,WAAyB;QACjC,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,CAAC,WAAW,CAAC,CAAC;IACnD,CAAC;IAWD,WAAW,CAAC,SAA0B,EAAE,IAAU;QAC9C,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;IAcD,SAAS,CAAC,IAAU;QAChB,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;IAQD,WAAW,CAAC,OAAe,EAAE,IAAU;QACnC,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACrD,CAAC;IAWD,QAAQ,CAAC,OAAe,EAAE,IAAU;QAChC,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC;IAYD,WAAW,CAAC,OAAe,EAAE,SAA0B,EAAE,IAAU;QAC/D,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IAChE,CAAC;IAcD,eAAe,CAAC,OAAe,EAAE,IAAU;QACvC,OAAO,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAC9D,CAAC;IAWD,cAAc,CAAC,OAAe,EAAE,eAA0C,EAAE,IAAU;QAClF,OAAO,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,OAAO,EAAE,eAAe,EAAE,IAAI,CAAC,CAAC;IAChF,CAAC;IAQD,iBAAiB,CAAC,OAAe,EAAE,aAAqB;QACpD,OAAO,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;IACxE,CAAC;CAEJ","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { AlfrescoApi } from '../../../../alfrescoApi';\nimport { GroupsApi as NewGroupsApi } from '../../../../api/content-rest-api/api/groups.api';\nimport { GroupEntry } from '../../../../api/content-rest-api/model/groupEntry';\nimport { GroupPaging } from '../../../../api/content-rest-api/model/groupPaging';\nimport { GroupMemberPaging } from '../../../../api/content-rest-api/model/groupMemberPaging';\nimport { GroupMembershipBodyCreate } from '../../../../api/content-rest-api/model/groupMembershipBodyCreate';\nimport { GroupMemberEntry } from '../../../../api/content-rest-api/model/groupMemberEntry';\nimport { GroupBodyUpdate } from '../../../../api/content-rest-api/model/groupBodyUpdate';\nimport { GroupBodyCreate } from '../../../../api/content-rest-api/model/groupBodyCreate';\n\n/**\n * @deprecated 3.0.0\n */\nexport class GroupsApi {\n\n    private groupsApi: NewGroupsApi;\n\n    public init(alfrescoApi?: AlfrescoApi) {\n        this.groupsApi = new NewGroupsApi(alfrescoApi);\n    }\n\n    /**\n     * Create a new group\n     * @param {module:model/GroupBody} GroupBody The new group\n     * @param {Object} opts Optional parameters\n     * @param {string[]} opts.include Use the relations parameter to include one or more related entities in a single response.\n     * @param {string[]} opts.fields A list of field names.\\n\\nYou can use this parameter to restrict the fields\\nreturned within a response if, for example, you want to save on overall bandwidth.\\n\\nThe list applies to a returned individual\\nentity or entries within a collection.\\n\\nIf the API method also supports the **include**\\nparameter, then the fields specified in the **include**\\nparameter are returned in addition to those specified in the **fields** parameter.\\n\n     * data is of type: {module:model/GroupsEntry}\n     */\n\n    createGroup(groupBody: GroupBodyCreate, opts?: any): Promise<GroupEntry> {\n        return this.groupsApi.createGroup(groupBody, opts);\n    }\n\n    /**\n     * Get groups\n     * Returns a list of groups in this repository. You can sort the list if groups using the **orderBy** parameter.\\n**orderBy** specifies the name of one or more\\ncomma separated properties.\\nFor each property you can optionally specify the order direction.\\nBoth of the these **orderBy** examples retrieve sites ordered by ascending name:\\n\\n&#x60;&#x60;&#x60;\\nname\\nname ASC\\n&#x60;&#x60;&#x60;\\n\\nYou can use the **relations** parameter to include one or more related\\nentities in a single response and so reduce network traffic.\\n\\nThe entity types in Alfresco are organized in a tree structure.\\nThe **sites** entity has two children, **containers** and **members**.\\nThe following relations parameter returns all the container and member\\nobjects related to each site:\\n\\n&#x60;&#x60;&#x60;\\ncontainers,members\\n&#x60;&#x60;&#x60;\\n\n     * @param {Object} opts Optional parameters\n     * @param {Integer} opts.skipCount The number of entities that exist in the collection before those included in this list.\n     * @param {Integer} opts.maxItems The maximum number of items to return in the list.\n     * @param {String} opts.orderBy A string to control the order of the entities returned.\n     * @param {String} opts.where A string to restrict the returned objects by using a predicate.\n     * @param {string[]} opts.include Use the relations parameter to include one or more related entities in a single response.\n     * @param {string[]} opts.fields A list of field names.\\n\\nYou can use this parameter to restrict the fields\\nreturned within a response if, for example, you want to save on overall bandwidth.\\n\\nThe list applies to a returned individual\\nentity or entries within a collection.\\n\\nIf the API method also supports the **include**\\nparameter, then the fields specified in the **include**\\nparameter are returned in addition to those specified in the **fields** parameter.\\n\n     * data is of type: {module:model/GroupsPaging}\n     */\n    getGroups(opts?: any): Promise<GroupPaging> {\n        return this.groupsApi.listGroups(opts);\n    }\n\n    /**\n     * Delete a group\n     * Deletes the site with **groupId**.\n     * @param {String} groupId The identifier of a site.\n     * @param {Boolean} opts.cascade If true then the delete will be applied in cascade to sub-groups.\n     */\n    deleteGroup(groupId: string, opts?: any): Promise<any> {\n        return this.groupsApi.deleteGroup(groupId, opts);\n    }\n\n    /**\n     * Get a group\n     * Returns information for site **groupId**.\\n\\nYou can use the **relations** parameter to include one or more related\\nentities in a single response and so reduce network traffic.\\n\\nThe entity types in Alfresco are organized in a tree structure.\\nThe **sites** entity has two children, **containers** and **members**.\\nThe following relations parameter returns all the container and member\\nobjects related to the site **siteId**:\\n\\n&#x60;&#x60;&#x60;\\ncontainers,members\\n&#x60;&#x60;&#x60;\\n\n     * @param {String} groupId The identifier of a site.\n     * @param {Object} opts Optional parameters\n     * @param {string[]} opts.include Returns additional information about the group. The following optional fields can be requested: parentIds, zones\n     * @param {string[]} opts.fields A list of field names.You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.The list applies to a returned individual entity or entries within a collection.If the API method also supports the include parameter, then the fields specified in the include parameter are returned in addition to those specified in the fields parameter.\n     * data is of type: {module:model/GroupsEntry}\n     */\n    getGroup(groupId: string, opts?: any): Promise<GroupEntry> {\n        return this.groupsApi.getGroup(groupId, opts);\n    }\n\n    /**\n     * Update a site member\n     * Update details (displayName) for group groupId. You must have admin rights to update a group.\n     * @param {String} groupId The identifier of a site.\n     * @param {module:model/GroupBody} groupBody only the displayName change attribute is allowed.\n     * @param {Object} opts Optional parameters\n     * @param {string[]} opts.include Returns additional information about the group. The following optional fields can be requested: parentIds, zones\n     * @param {string[]} opts.fields A list of field names.You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.The list applies to a returned individual entity or entries within a collection.If the API method also supports the include parameter, then the fields specified in the include parameter are returned in addition to those specified in the fields parameter.\n     * data is of type: {module:model/GroupsEntry}\n     */\n    updateGroup(groupId: string, groupBody: GroupBodyUpdate, opts?: any): Promise<GroupEntry> {\n        return this.groupsApi.updateGroup(groupId, groupBody, opts);\n    }\n\n    /**\n     * Get group members\n     * Returns a list of members for group **groupId**.\n     * @param {String} groupId The identifier of a site.\n     * @param {Object} opts Optional parameters\n     * @param {Integer} opts.skipCount The number of entities that exist in the collection before those included in this list.\n     * @param {Integer} opts.maxItems The maximum number of items to return in the list.\n     * @param {String} opts.orderBy A string to control the order of the entities returned.\n     * @param {String} opts.where A string to restrict the returned objects by using a predicate.\n     * @param {string[]} opts.fields A list of field names.\\n\\nYou can use this parameter to restrict the fields\\nreturned within a response if, for example, you want to save on overall bandwidth.\\n\\nThe list applies to a returned individual\\nentity or entries within a collection.\\n\\nIf the API method also supports the **include**\\nparameter, then the fields specified in the **include**\\nparameter are returned in addition to those specified in the **fields** parameter.\\n\n     * data is of type: {module:model/GroupMemberPaging}\n     */\n    getGroupMembers(groupId: string, opts?: any): Promise<GroupMemberPaging> {\n        return this.groupsApi.listGroupMemberships(groupId, opts);\n    }\n\n    /**\n     * Add a group member\n     * Create a group membership (for an existing person or group) within a group groupId.\n     * @param {String} groupId The identifier of a site.\n     * @param {module:model/GroupMember} GroupMember The persons new role\n     * @param {Object} opts Optional parameters\n     * @param {string[]} opts.fields A list of field names.\\n\\nYou can use this parameter to restrict the fields\\nreturned within a response if, for example, you want to save on overall bandwidth.\\n\\nThe list applies to a returned individual\\nentity or entries within a collection.\\n\\nIf the API method also supports the **include**\\nparameter, then the fields specified in the **include**\\nparameter are returned in addition to those specified in the **fields** parameter.\\n\n     * data is of type: {module:model/GroupMemberEntry}\n     */\n    addGroupMember(groupId: string, groupMemberBody: GroupMembershipBodyCreate, opts?: any): Promise<GroupMemberEntry> {\n        return this.groupsApi.createGroupMembership(groupId, groupMemberBody, opts);\n    }\n\n    /**\n     * Delete a group membership\n     * Deletes the membership **groupMemberId** from group **groupId**\n     * @param {String} groupId The identifier of a group.\n     * @param {String} groupMemberId The identifier of a group membership.\n     */\n    deleteGroupMember(groupId: string, groupMemberId: string): Promise<any> {\n        return this.groupsApi.deleteGroupMembership(groupId, groupMemberId);\n    }\n\n}\n"]}
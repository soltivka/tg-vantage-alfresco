{"version":3,"file":"TaskApi.js","sourceRoot":"","sources":["TaskApi.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { AlfrescoApi } from '../../../../alfrescoApi';\nimport { TaskActionsApi } from '../../../../api/activiti-rest-api/api/taskActions.api';\nimport { TaskRepresentation } from '../../../../api/activiti-rest-api/model/taskRepresentation';\nimport { AssigneeIdentifierRepresentation } from '../../../../api/activiti-rest-api/model/assigneeIdentifierRepresentation';\nimport { FormIdentifierRepresentation } from '../../../../api/activiti-rest-api/model/formIdentifierRepresentation';\nimport { ActivitiCommentsApi } from '../../../../api/activiti-rest-api/api/comments.api';\nimport { CommentRepresentation } from '../../../../api/activiti-rest-api/model/commentRepresentation';\nimport { ChecklistsApi } from '../../../../api/activiti-rest-api/api/checklists.api';\nimport { TaskFormsApi } from '../../../../api/activiti-rest-api/api/taskForms.api';\nimport { CompleteFormRepresentation } from '../../../../api/activiti-rest-api/model/completeFormRepresentation';\nimport { TasksApi } from '../../../../api/activiti-rest-api/api/tasks.api';\nimport { ContentApi } from '../../../../api/activiti-rest-api/api/content.api';\nimport { RelatedContentRepresentation } from '../../../../api/activiti-rest-api/model/relatedContentRepresentation';\nimport { TaskFilterRequestRepresentation } from '../../../../api/activiti-rest-api/model/taskFilterRequestRepresentation';\nimport { ResultListDataRepresentationTaskRepresentation } from '../../../../api/activiti-rest-api/model/resultListDataRepresentationTaskRepresentation';\nimport { TaskAuditInfoRepresentation } from '../../../../api/activiti-rest-api/model/taskAuditInfoRepresentation';\nimport { ResultListDataRepresentationRelatedContentRepresentation } from '../../../../api/activiti-rest-api/model/resultListDataRepresentationRelatedContentRepresentation';\nimport { ResultListDataRepresentationCommentRepresentation } from '../../../../api/activiti-rest-api/model/resultListDataRepresentationCommentRepresentation';\nimport { FormDefinitionRepresentation } from '../../../../api/activiti-rest-api/model/formDefinitionRepresentation';\nimport { UserIdentifierRepresentation } from '../../../../api/activiti-rest-api/model/userIdentifierRepresentation';\nimport { TaskQueryRepresentation } from '../../../../api/activiti-rest-api/model/taskQueryRepresentation';\nimport { ChecklistOrderRepresentation } from '../../../../api/activiti-rest-api/model/checklistOrderRepresentation';\nimport { SaveFormRepresentation } from '../../../../api/activiti-rest-api/model/saveFormRepresentation';\nimport { TaskUpdateRepresentation } from '../../../../api/activiti-rest-api/model/taskUpdateRepresentation';\nimport { FormValueRepresentation } from '../../../../api/activiti-rest-api/model/formValueRepresentation';\n\n/**\n * @deprecated 3.0.0\n */\nexport class TaskApi {\n\n    private taskactionsApi: TaskActionsApi;\n    private activitiCommentsApi: ActivitiCommentsApi;\n    private checklistsApi: ChecklistsApi;\n    private taskFormsApi: TaskFormsApi;\n    private tasksApi: TasksApi;\n    private contentApi: ContentApi;\n\n    public init(alfrescoApi?: AlfrescoApi) {\n        this.taskactionsApi = new TaskActionsApi(alfrescoApi);\n        this.activitiCommentsApi = new ActivitiCommentsApi(alfrescoApi);\n        this.checklistsApi = new ChecklistsApi(alfrescoApi);\n        this.taskFormsApi = new TaskFormsApi(alfrescoApi);\n        this.tasksApi = new TasksApi(alfrescoApi);\n        this.contentApi = new ContentApi(alfrescoApi);\n    }\n\n    addSubtask(taskId: string, taskRepresentation: TaskRepresentation): Promise<TaskRepresentation> {\n        return this.checklistsApi.addSubtask(taskId, taskRepresentation);\n    }\n\n    addTaskComment(commentRequest: CommentRepresentation, taskId: string): Promise<CommentRepresentation> {\n        return this.activitiCommentsApi.addTaskComment(commentRequest, taskId);\n    }\n\n    assignTask(taskId: string, userIdentifier: AssigneeIdentifierRepresentation): Promise<TaskRepresentation> {\n        return this.taskactionsApi.assignTask(taskId, userIdentifier);\n    }\n\n    attachForm(taskId: string, formIdentifier: FormIdentifierRepresentation): Promise<any> {\n        return this.taskactionsApi.attachForm(taskId, formIdentifier);\n    }\n\n    claimTask(taskId: string): Promise<any> {\n        return this.taskactionsApi.claimTask(taskId);\n    }\n\n    completeTaskForm(taskId: string, completeTaskFormRepresentation: CompleteFormRepresentation): Promise<any> {\n        return this.taskFormsApi.completeTaskForm(taskId, completeTaskFormRepresentation);\n    }\n\n    completeTask(taskId: string): Promise<any> {\n       return this.taskactionsApi.completeTask(taskId);\n    }\n\n    createNewTask(taskRepresentation: TaskRepresentation): Promise<TaskRepresentation> {\n        return this.tasksApi.createNewTask(taskRepresentation);\n    }\n\n    createRelatedContentOnTask(taskId: string, relatedContent: RelatedContentRepresentation, opts?: any): Promise<RelatedContentRepresentation> {\n        return this.contentApi.createRelatedContentOnTask(taskId, relatedContent, opts);\n    }\n\n    deleteTask(taskId: string): Promise<any> {\n        return this.tasksApi.deleteTask(taskId);\n    }\n\n    filterTasks(tasksFilter: TaskFilterRequestRepresentation): Promise<ResultListDataRepresentationTaskRepresentation> {\n        return this.tasksApi.filterTasks(tasksFilter);\n    }\n\n    getChecklist(taskId: string): Promise<ResultListDataRepresentationTaskRepresentation> {\n        return this.checklistsApi.getChecklist(taskId);\n    }\n\n    getTaskAuditLog(taskId: string): Promise<TaskAuditInfoRepresentation> {\n        return this.tasksApi.getTaskAuditLog(taskId);\n    }\n\n    getTaskAuditJson(taskId: string): Promise<TaskAuditInfoRepresentation> {\n        return this.tasksApi.getTaskAuditLog(taskId);\n    }\n\n    getTaskAuditPdf(taskId: string) {\n        return this.tasksApi.getTaskAuditPdf(taskId);\n    }\n\n    getRelatedContentForTask(taskId: string, opts?: any): Promise<ResultListDataRepresentationRelatedContentRepresentation> {\n        return this.contentApi.getRelatedContentForTask(taskId, opts);\n    }\n\n    getRestFieldValuesColumn(taskId: string, field: string, column: string): Promise<any> {\n        return this.taskFormsApi.getRestFieldColumnValues(taskId, field, column);\n    }\n\n    getRestFieldValues(taskId: string, field: string): Promise<FormValueRepresentation []> {\n        return this.taskFormsApi.getRestFieldValues(taskId, field);\n    }\n\n    getTaskComments(taskId: string, opts?: any): Promise<ResultListDataRepresentationCommentRepresentation> {\n        return this.activitiCommentsApi.getTaskComments(taskId, opts);\n    }\n\n    getTaskForm(taskId: string): Promise<FormDefinitionRepresentation> {\n        return this.taskFormsApi.getTaskForm(taskId);\n    }\n\n    getTask(taskId: string): Promise<TaskRepresentation> {\n        return this.tasksApi.getTask(taskId);\n    }\n\n    involveUser(taskId: string, userIdentifier: UserIdentifierRepresentation): Promise<any> {\n        return this.taskactionsApi.involveUser(taskId, userIdentifier);\n    }\n\n    listTasks(tasksQuery: TaskQueryRepresentation): Promise<ResultListDataRepresentationTaskRepresentation> {\n        return this.tasksApi.listTasks(tasksQuery);\n    }\n\n    orderChecklist(taskId: string, orderRepresentation: ChecklistOrderRepresentation): Promise<any> {\n        return this.checklistsApi.orderChecklist(taskId, orderRepresentation);\n    }\n\n    removeForm(taskId: string): Promise<any> {\n        return this.taskactionsApi.removeForm(taskId);\n    }\n\n    removeInvolvedUser(taskId: string, groupId: string): Promise<any> {\n        return this.taskactionsApi.removeInvolvedUser(taskId, groupId);\n    }\n\n    saveTaskForm(taskId: string, saveTaskFormRepresentation: SaveFormRepresentation): Promise<any> {\n        return this.taskFormsApi.saveTaskForm(taskId, saveTaskFormRepresentation);\n    }\n\n    unclaimTask(taskId: string): Promise<any> {\n        return this.taskactionsApi.unclaimTask(taskId);\n    }\n\n    updateTask(taskId: string, updated: TaskUpdateRepresentation): Promise<TaskRepresentation> {\n        return this.tasksApi.updateTask(taskId, updated);\n    }\n}\n"]}
/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
import { TaskActionsApi } from '../../../../api/activiti-rest-api/api/taskActions.api';
import { ActivitiCommentsApi } from '../../../../api/activiti-rest-api/api/comments.api';
import { ChecklistsApi } from '../../../../api/activiti-rest-api/api/checklists.api';
import { TaskFormsApi } from '../../../../api/activiti-rest-api/api/taskForms.api';
import { TasksApi } from '../../../../api/activiti-rest-api/api/tasks.api';
import { ContentApi } from '../../../../api/activiti-rest-api/api/content.api';
export class TaskApi {
    init(alfrescoApi) {
        this.taskactionsApi = new TaskActionsApi(alfrescoApi);
        this.activitiCommentsApi = new ActivitiCommentsApi(alfrescoApi);
        this.checklistsApi = new ChecklistsApi(alfrescoApi);
        this.taskFormsApi = new TaskFormsApi(alfrescoApi);
        this.tasksApi = new TasksApi(alfrescoApi);
        this.contentApi = new ContentApi(alfrescoApi);
    }
    addSubtask(taskId, taskRepresentation) {
        return this.checklistsApi.addSubtask(taskId, taskRepresentation);
    }
    addTaskComment(commentRequest, taskId) {
        return this.activitiCommentsApi.addTaskComment(commentRequest, taskId);
    }
    assignTask(taskId, userIdentifier) {
        return this.taskactionsApi.assignTask(taskId, userIdentifier);
    }
    attachForm(taskId, formIdentifier) {
        return this.taskactionsApi.attachForm(taskId, formIdentifier);
    }
    claimTask(taskId) {
        return this.taskactionsApi.claimTask(taskId);
    }
    completeTaskForm(taskId, completeTaskFormRepresentation) {
        return this.taskFormsApi.completeTaskForm(taskId, completeTaskFormRepresentation);
    }
    completeTask(taskId) {
        return this.taskactionsApi.completeTask(taskId);
    }
    createNewTask(taskRepresentation) {
        return this.tasksApi.createNewTask(taskRepresentation);
    }
    createRelatedContentOnTask(taskId, relatedContent, opts) {
        return this.contentApi.createRelatedContentOnTask(taskId, relatedContent, opts);
    }
    deleteTask(taskId) {
        return this.tasksApi.deleteTask(taskId);
    }
    filterTasks(tasksFilter) {
        return this.tasksApi.filterTasks(tasksFilter);
    }
    getChecklist(taskId) {
        return this.checklistsApi.getChecklist(taskId);
    }
    getTaskAuditLog(taskId) {
        return this.tasksApi.getTaskAuditLog(taskId);
    }
    getTaskAuditJson(taskId) {
        return this.tasksApi.getTaskAuditLog(taskId);
    }
    getTaskAuditPdf(taskId) {
        return this.tasksApi.getTaskAuditPdf(taskId);
    }
    getRelatedContentForTask(taskId, opts) {
        return this.contentApi.getRelatedContentForTask(taskId, opts);
    }
    getRestFieldValuesColumn(taskId, field, column) {
        return this.taskFormsApi.getRestFieldColumnValues(taskId, field, column);
    }
    getRestFieldValues(taskId, field) {
        return this.taskFormsApi.getRestFieldValues(taskId, field);
    }
    getTaskComments(taskId, opts) {
        return this.activitiCommentsApi.getTaskComments(taskId, opts);
    }
    getTaskForm(taskId) {
        return this.taskFormsApi.getTaskForm(taskId);
    }
    getTask(taskId) {
        return this.tasksApi.getTask(taskId);
    }
    involveUser(taskId, userIdentifier) {
        return this.taskactionsApi.involveUser(taskId, userIdentifier);
    }
    listTasks(tasksQuery) {
        return this.tasksApi.listTasks(tasksQuery);
    }
    orderChecklist(taskId, orderRepresentation) {
        return this.checklistsApi.orderChecklist(taskId, orderRepresentation);
    }
    removeForm(taskId) {
        return this.taskactionsApi.removeForm(taskId);
    }
    removeInvolvedUser(taskId, groupId) {
        return this.taskactionsApi.removeInvolvedUser(taskId, groupId);
    }
    saveTaskForm(taskId, saveTaskFormRepresentation) {
        return this.taskFormsApi.saveTaskForm(taskId, saveTaskFormRepresentation);
    }
    unclaimTask(taskId) {
        return this.taskactionsApi.unclaimTask(taskId);
    }
    updateTask(taskId, updated) {
        return this.tasksApi.updateTask(taskId, updated);
    }
}
//# sourceMappingURL=../../../../../../../src/api-legacy/activiti-rest-api/src/api/TaskApi.js.map
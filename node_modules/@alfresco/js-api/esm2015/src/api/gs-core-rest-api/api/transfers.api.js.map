{"version":3,"file":"transfers.api.js","sourceRoot":"","sources":["transfers.api.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;AAEF,OAAO,EAAE,yBAAyB,EAAE,MAAM,oCAAoC,CAAC;AAC/E,OAAO,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAC;AACvD,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AACrC,OAAO,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AAClE,OAAO,EAAE,iBAAiB,EAAE,MAAM,iBAAiB,CAAC;AAMpD,MAAM,OAAO,YAAa,SAAQ,OAAO;IAiCrC,WAAW,CAAC,UAAkB,EAAE,IAAU;QACtC,iBAAiB,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QAE5C,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAClB,IAAI,QAAQ,GAAG,IAAI,CAAC;QAEpB,IAAI,UAAU,GAAG;YACb,YAAY,EAAE,UAAU;SAC3B,CAAC;QAEF,IAAI,WAAW,GAAG;YACd,SAAS,EAAE,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,CAAC;YACvD,QAAQ,EAAE,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC;SACxD,CAAC;QAEF,IAAI,YAAY,GAAG,EAElB,CAAC;QACF,IAAI,UAAU,GAAG,EAChB,CAAC;QAEF,IAAI,YAAY,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAEnC,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,yBAAyB,EAAE,KAAK,EAChC,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAC3D,YAAY,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;IAuCD,qBAAqB,CAAC,UAAkB,EAAE,IAAU;QAChD,iBAAiB,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QAE5C,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAClB,IAAI,QAAQ,GAAG,IAAI,CAAC;QAEpB,IAAI,UAAU,GAAG;YACb,YAAY,EAAE,UAAU;SAC3B,CAAC;QAEF,IAAI,WAAW,GAAG;YACd,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC;YAC9B,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC;YAC5B,SAAS,EAAE,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,CAAC;YACvD,eAAe,EAAE,IAAI,CAAC,eAAe,CAAC;YACtC,QAAQ,EAAE,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC;SACxD,CAAC;QAEF,IAAI,YAAY,GAAG,EAElB,CAAC;QACF,IAAI,UAAU,GAAG,EAChB,CAAC;QAEF,IAAI,YAAY,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAEnC,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,kCAAkC,EAAE,KAAK,EACzC,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAC3D,YAAY,EAAE,OAAO,EAAE,yBAAyB,CAAC,CAAC;IAC1D,CAAC;CAEJ","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { TransferAssociationPaging } from '../model/transferAssociationPaging';\nimport { TransferEntry } from '../model/transferEntry';\nimport { BaseApi } from './base.api';\nimport { buildCollectionParam } from '../../../alfrescoApiClient';\nimport { throwIfNotDefined } from '../../../assert';\n\n/**\n* Transfers service.\n* @module TransfersApi\n*/\nexport class TransfersApi extends BaseApi {\n    /**\n    * Get a transfer\n    *\n    * Gets information for transfer **transferId**\n\nMandatory fields and the transfer's aspects and properties are returned by default.\n\nYou can use the **include** parameter (include=allowableOperations) to return additional information.\n\n    *\n    * @param transferId The identifier of a transfer.\n    * @param opts Optional parameters\n    * @param opts.include Returns additional information about the transfer folder. Any optional field from the response model can be requested. For example:\n* allowableOperations\n* transferPDFIndicator\n* transferLocation\n* transferAccessionIndicator\n\n    * @param opts.fields A list of field names.\n\nYou can use this parameter to restrict the fields\nreturned within a response if, for example, you want to save on overall bandwidth.\n\nThe list applies to a returned individual\nentity or entries within a collection.\n\nIf the API method also supports the **include**\nparameter, then the fields specified in the **include**\nparameter are returned in addition to those specified in the **fields** parameter.\n\n    * @return Promise<TransferEntry>\n    */\n    getTransfer(transferId: string, opts?: any): Promise<TransferEntry> {\n        throwIfNotDefined(transferId, 'transferId');\n\n        opts = opts || {};\n        let postBody = null;\n\n        let pathParams = {\n            'transferId': transferId\n        };\n\n        let queryParams = {\n            'include': buildCollectionParam(opts['include'], 'csv'),\n            'fields': buildCollectionParam(opts['fields'], 'csv')\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/transfers/{transferId}', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, TransferEntry);\n    }\n    /**\n        * List transfer's children\n        *\n        * Gets a list of transfer's children.\n\n    Minimal information for each child is returned by default.\n\n    You can use the **include** parameter (include=allowableOperations) to return additional information.\n\n        *\n        * @param transferId The identifier of a transfer.\n        * @param opts Optional parameters\n        * @param opts.skipCount The number of entities that exist in the collection before those included in this list.\n        * @param opts.maxItems The maximum number of items to return in the list.\n        * @param opts.include Returns additional information about the transfer's child. Any optional field from the response model can be requested. For example:\n    * allowableOperations\n    * aspectNames\n    * isClosed\n    * isRecord\n    * isRecordFolder\n    * path\n    * properties\n\n        * @param opts.includeSource Also include **source** (in addition to **entries**) with folder information on the specified parent **transferId**.\n        * @param opts.fields A list of field names.\n\n    You can use this parameter to restrict the fields\n    returned within a response if, for example, you want to save on overall bandwidth.\n\n    The list applies to a returned individual\n    entity or entries within a collection.\n\n    If the API method also supports the **include**\n    parameter, then the fields specified in the **include**\n    parameter are returned in addition to those specified in the **fields** parameter.\n\n        * @return Promise<TransferAssociationPaging>\n        */\n    listTransfersChildren(transferId: string, opts?: any): Promise<TransferAssociationPaging> {\n        throwIfNotDefined(transferId, 'transferId');\n\n        opts = opts || {};\n        let postBody = null;\n\n        let pathParams = {\n            'transferId': transferId\n        };\n\n        let queryParams = {\n            'skipCount': opts['skipCount'],\n            'maxItems': opts['maxItems'],\n            'include': buildCollectionParam(opts['include'], 'csv'),\n            'includeSource': opts['includeSource'],\n            'fields': buildCollectionParam(opts['fields'], 'csv')\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/transfers/{transferId}/children', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, TransferAssociationPaging);\n    }\n\n}\n"]}
{"version":3,"file":"resultSetContextSpellcheck.js","sourceRoot":"","sources":["resultSetContextSpellcheck.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;AAEF,MAAM,OAAO,0BAA0B;IAOnC,YAAY,KAAW;QAEnB,IAAI,KAAK,EAAE;YACP,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAC9B;IACL,CAAC;CAEJ;AACD,WAAiB,0BAA0B;IAE1B,mCAAQ,GAAG;QACpB,gBAAgB,EAAE,kBAA8B;QAChD,UAAU,EAAE,YAAwB;KACvC,CAAC;AACN,CAAC,EANgB,0BAA0B,KAA1B,0BAA0B,QAM1C","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nexport class ResultSetContextSpellcheck {\n    type?: ResultSetContextSpellcheck.TypeEnum | string;\n    /**\n     * A suggested alternative query\n     */\n    suggestion?: string[];\n\n    constructor(input?: any) {\n\n        if (input) {\n            Object.assign(this, input);\n        }\n    }\n\n}\nexport namespace ResultSetContextSpellcheck {\n    export type TypeEnum = 'searchInsteadFor' | 'didYouMean';\n    export const TypeEnum = {\n        SearchInsteadFor: 'searchInsteadFor' as TypeEnum,\n        DidYouMean: 'didYouMean' as TypeEnum\n    };\n}\n"]}
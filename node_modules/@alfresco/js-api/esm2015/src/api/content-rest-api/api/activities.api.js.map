{"version":3,"file":"activities.api.js","sourceRoot":"","sources":["activities.api.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;AAEF,OAAO,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AACzD,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AACrC,OAAO,EAAE,iBAAiB,EAAE,MAAM,iBAAiB,CAAC;AACpD,OAAO,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AAMlE,MAAM,OAAO,aAAc,SAAQ,OAAO;IAkCtC,uBAAuB,CAAC,QAAgB,EAAE,IAAU;QAEhD,iBAAiB,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAExC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAClB,MAAM,QAAQ,GAAS,IAAI,CAAC;QAE5B,MAAM,UAAU,GAAG;YACf,UAAU,EAAE,QAAQ;SACvB,CAAC;QAEF,MAAM,WAAW,GAAG;YAChB,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC;YAC9B,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC;YAC5B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC;YAClB,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC;YACxB,QAAQ,EAAE,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC;SACxD,CAAC;QAEF,MAAM,YAAY,GAAG,EAEpB,CAAC;QACF,MAAM,UAAU,GAAG,EAClB,CAAC;QAEF,MAAM,YAAY,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAC1C,MAAM,OAAO,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAErC,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,+BAA+B,EAAE,KAAK,EACtC,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAC3D,YAAY,EAAE,OAAO,EAAG,cAAc,CAAC,CAAC;IAChD,CAAC;CAEJ","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { ActivityPaging } from '../model/activityPaging';\nimport { BaseApi } from './base.api';\nimport { throwIfNotDefined } from '../../../assert';\nimport { buildCollectionParam } from '../../../alfrescoApiClient';\n\n/**\n* Activities service.\n* @module ActivitiesApi\n*/\nexport class ActivitiesApi extends BaseApi {\n    /**\n    * List activities\n    *\n    * Gets a list of activities for person **personId**.\n\nYou can use the -me- string in place of <personId> to specify the currently authenticated user.\n\n    *\n    * @param personId The identifier of a person.\n    * @param opts Optional parameters\n    * @param opts.skipCount The number of entities that exist in the collection before those included in this list.\nIf not supplied then the default value is 0.\n (default to 0)\n    * @param opts.maxItems The maximum number of items to return in the list.\nIf not supplied then the default value is 100.\n (default to 100)\n    * @param opts.who A filter to include the user's activities only me, other user's activities only others'\n\n    * @param opts.siteId Include only activity feed entries relating to this site.\n    * @param opts.fields A list of field names.\n\nYou can use this parameter to restrict the fields\nreturned within a response if, for example, you want to save on overall bandwidth.\n\nThe list applies to a returned individual\nentity or entries within a collection.\n\nIf the API method also supports the **include**\nparameter, then the fields specified in the **include**\nparameter are returned in addition to those specified in the **fields** parameter.\n\n    * @return Promise<ActivityPaging>\n    */\n    listActivitiesForPerson(personId: string, opts?: any): Promise<ActivityPaging> {\n\n        throwIfNotDefined(personId, 'personId');\n\n        opts = opts || {};\n        const postBody: null = null;\n\n        const pathParams = {\n            'personId': personId\n        };\n\n        const queryParams = {\n            'skipCount': opts['skipCount'],\n            'maxItems': opts['maxItems'],\n            'who': opts['who'],\n            'siteId': opts['siteId'],\n            'fields': buildCollectionParam(opts['fields'], 'csv')\n        };\n\n        const headerParams = {\n\n        };\n        const formParams = {\n        };\n\n        const contentTypes = ['application/json'];\n        const accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/people/{personId}/activities', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts , ActivityPaging);\n    }\n\n}\n"]}
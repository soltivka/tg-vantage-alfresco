{"version":3,"file":"actionDefinition.js","sourceRoot":"","sources":["actionDefinition.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;AAEF,OAAO,EAAE,yBAAyB,EAAE,MAAM,6BAA6B,CAAC;AAExE,MAAM,OAAO,gBAAgB;IA2BzB,YAAY,KAAW;QACnB,IAAI,KAAK,EAAE;YACP,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC3B,IAAI,KAAK,CAAC,oBAAoB,EAAE;gBAC5B,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE;oBACrE,OAAO,IAAI,yBAAyB,CAAC,IAAI,CAAC,CAAC;gBAC/C,CAAC,CAAC,CAAC;aACN;SACJ;IACL,CAAC;CAEJ","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { ActionParameterDefinition } from './actionParameterDefinition';\n\nexport class ActionDefinition {\n    /**\n     * Identifier of the action definition â€” used for example when executing an action\n     */\n    id: string;\n    /**\n     * name of the action definition, e.g. \\\"move\\\"\n     */\n    name?: string;\n    /**\n     * title of the action definition, e.g. \\\"Move\\\"\n     */\n    title?: string;\n    /**\n     * describes the action definition, e.g. \\\"This will move the matched item to another space.\\\"\n     */\n    description?: string;\n    /**\n     * QNames of the types this action applies to\n     */\n    applicableTypes: string[];\n    /**\n     * whether the basic action definition supports action tracking or not\n     */\n    trackStatus: boolean;\n    parameterDefinitions?: ActionParameterDefinition[];\n\n    constructor(input?: any) {\n        if (input) {\n            Object.assign(this, input);\n            if (input.parameterDefinitions) {\n                this.parameterDefinitions = input.parameterDefinitions.map((item: any) => {\n                    return new ActionParameterDefinition(item);\n                });\n            }\n        }\n    }\n\n}\n"]}
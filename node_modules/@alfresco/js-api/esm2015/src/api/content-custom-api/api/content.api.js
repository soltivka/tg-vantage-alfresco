/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
import { BaseApi } from './base.api';
export class ContentApi extends BaseApi {
    getDocumentThumbnailUrl(nodeId, attachment, ticket) {
        return this.apiClient.basePath + '/nodes/' + nodeId +
            '/renditions/doclib/content' +
            '?attachment=' + (attachment ? 'true' : 'false') +
            this.apiClient.getAlfTicket(ticket);
    }
    getDocumentPreviewUrl(nodeId, attachment, ticket) {
        return this.apiClient.basePath + '/nodes/' + nodeId +
            '/renditions/imgpreview/content' +
            '?attachment=' + (attachment ? 'true' : 'false') +
            this.apiClient.getAlfTicket(ticket);
    }
    getContentUrl(nodeId, attachment, ticket) {
        return this.apiClient.basePath + '/nodes/' + nodeId +
            '/content' +
            '?attachment=' + (attachment ? 'true' : 'false') +
            this.apiClient.getAlfTicket(ticket);
    }
    getRenditionUrl(nodeId, encoding, attachment, ticket) {
        return this.apiClient.basePath + '/nodes/' + nodeId +
            '/renditions/' + encoding + '/content' +
            '?attachment=' + (attachment ? 'true' : 'false') +
            this.apiClient.getAlfTicket(ticket);
    }
    getVersionRenditionUrl(nodeId, versionId, encoding, attachment, ticket) {
        return this.apiClient.basePath + '/nodes/' + nodeId + '/versions/' + versionId +
            '/renditions/' + encoding + '/content' +
            '?attachment=' + (attachment ? 'true' : 'false') +
            this.apiClient.getAlfTicket(ticket);
    }
    getVersionContentUrl(nodeId, versionId, attachment, ticket) {
        return this.apiClient.basePath + '/nodes/' + nodeId +
            '/versions/' + versionId + '/content' +
            '?attachment=' + (attachment ? 'true' : 'false') +
            this.apiClient.getAlfTicket(ticket);
    }
    getSharedLinkContentUrl(linkId, attachment) {
        return this.apiClient.basePath + '/shared-links/' + linkId +
            '/content' +
            '?attachment=' + (attachment ? 'true' : 'false');
    }
    getSharedLinkRenditionUrl(sharedId, renditionId, attachment) {
        return this.apiClient.basePath + '/shared-links/' + sharedId +
            '/renditions/' + renditionId + '/content' +
            '?attachment=' + (attachment ? 'true' : 'false');
    }
}
//# sourceMappingURL=../../../../../../src/api/content-custom-api/api/content.api.js.map
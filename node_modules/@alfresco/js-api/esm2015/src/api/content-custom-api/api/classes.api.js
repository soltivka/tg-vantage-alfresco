/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
import { ClassDescription } from '../model/classDescription';
import { BaseApi } from './base.api';
export class ClassesApi extends BaseApi {
    constructor() {
        super(...arguments);
        this.path = '/api/classes';
    }
    getClass(className, opts) {
        opts = opts || {};
        if (className === undefined || className === null) {
            throw "Missing param 'className' in getClass";
        }
        let postBody = null;
        let pathParams = {
            'className': className
        };
        let queryParams = {};
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClientPrivate.callApi(this.path + '/{className}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, ClassDescription, this.apiClientPrivate.config.contextRoot + '/s');
    }
    getSubclasses(className, opts) {
        opts = opts || {};
        if (className === undefined || className === null) {
            throw "Missing param 'className'";
        }
        let postBody = null;
        let pathParams = {
            'className': className
        };
        let queryParams = {};
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClientPrivate.callApi(`${this.path}/{className}/subclasses`, 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, ClassDescription, this.apiClientPrivate.config.contextRoot + '/s');
    }
}
//# sourceMappingURL=../../../../../../src/api/content-custom-api/api/classes.api.js.map
{"version":3,"file":"webscript.api.js","sourceRoot":"","sources":["webscript.api.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;AAEF,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AAerC,MAAM,OAAO,YAAa,SAAQ,OAAO;IAAzC;;QAEI,kBAAa,GAAa,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;IA0C/D,CAAC;IA1BG,gBAAgB,CAAC,UAAkB,EAAE,UAAkB,EAAE,UAAgB,EAAE,WAAoB,EAAE,WAAoB,EAAE,QAAc;QACjI,WAAW,GAAG,WAAW,IAAI,UAAU,CAAC;QACxC,WAAW,GAAG,WAAW,IAAI,SAAS,CAAC;QACvC,QAAQ,GAAG,QAAQ,IAAI,IAAI,CAAC;QAE5B,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE;YAC9D,MAAM,iDAAiD,CAAC;SAC3D;QAED,IAAI,CAAC,UAAU,EAAE;YACb,MAAM,8CAA8C,CAAC;SACxD;QAED,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,UAAU,GAAG,EAAE,CAAC;QAEpB,IAAI,YAAY,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,CAAC,kBAAkB,EAAE,WAAW,CAAC,CAAC;QAEhD,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,UAAU,EAAE,UAAU,EAChD,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAC1D,YAAY,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,CAC3C,CAAC;IACN,CAAC;CACJ","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { BaseApi } from './base.api';\n\n/**\n * Tags service.\n * @module api/WebscriptApi\n * @version 0.1.0\n */\n\n/**\n * Constructs a new WebscriptApi.\n * @alias module:api/WebscriptApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use, default to {@link module:ApiClient#instance}\n * if unspecified.\n */\nexport class WebscriptApi extends BaseApi {\n\n    allowedMethod: string[] = ['GET', 'POST', 'PUT', 'DELETE'];\n\n    /**\n     * Call a get on a  Web Scripts see https://wiki.alfresco.com/wiki/Web_Scripts for more details about Web Scripts\n     * Url syntax definition : http[s]://<host>:<port>/[<contextPath>/]/<servicePath>[/<scriptPath>][?<scriptArgs>]\n     * example: http://localhost:8081/share/service/mytasks?priority=1\n     *\n     * @param {String} httpMethod  GET, POST, PUT and DELETE\n     * @param {String} scriptPath\n     * @param {Object} scriptArgs\n     * @param {String} contextRoot default value alfresco\n     * @param {String} servicePath default value service\n     * @param {String} postBody\n     *\n     * @returns {Promise} A promise that is resolved return the webScript data and {error} if rejected.\n     */\n    executeWebScript(httpMethod: string, scriptPath: string, scriptArgs?: any, contextRoot?: string, servicePath?: string, postBody?: any): Promise<any> {\n        contextRoot = contextRoot || 'alfresco';\n        servicePath = servicePath || 'service';\n        postBody = postBody || null;\n\n        if (!httpMethod || this.allowedMethod.indexOf(httpMethod) === -1) {\n            throw 'method allowed value  GET, POST, PUT and DELETE';\n        }\n\n        if (!scriptPath) {\n            throw 'Missing param scriptPath in executeWebScript';\n        }\n\n        let pathParams = {};\n        let headerParams = {};\n        let formParams = {};\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json', 'text/html'];\n\n        return this.apiClient.callApi(\n            '/' + servicePath + '/' + scriptPath, httpMethod,\n            pathParams, scriptArgs, headerParams, formParams, postBody,\n            contentTypes, accepts, null, contextRoot\n        );\n    }\n}\n"]}
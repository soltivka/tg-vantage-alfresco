{"version":3,"file":"historicProcessInstanceQueryRepresentation.js","sourceRoot":"","sources":["historicProcessInstanceQueryRepresentation.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;AAEF,OAAO,EAAE,YAAY,EAAE,MAAM,6CAA6C,CAAC;AAC3E,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAEhD,MAAM,OAAO,0CAA0C;IAyBnD,YAAY,KAAW;QAEnB,IAAI,KAAK,EAAE;YACP,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC3B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACnG,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACtG,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAChG,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACnG,IAAI,KAAK,CAAC,SAAS,EAAE;gBACjB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE;oBAC/C,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC;gBACnC,CAAC,CAAC,CAAC;aACN;SACJ;IACL,CAAC;CAEJ","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { DateAlfresco } from '../../content-custom-api/model/dateAlfresco';\nimport { QueryVariable } from './queryVariable';\n\nexport class HistoricProcessInstanceQueryRepresentation {\n    excludeSubprocesses?: boolean;\n    finished?: boolean;\n    finishedAfter?: Date;\n    finishedBefore?: Date;\n    includeProcessVariables?: boolean;\n    involvedUser?: string;\n    order?: string;\n    processBusinessKey?: string;\n    processDefinitionId?: string;\n    processDefinitionKey?: string;\n    processInstanceId?: string;\n    processInstanceIds?: string[];\n    size?: number;\n    sort?: string;\n    start?: number;\n    startedAfter?: Date;\n    startedBefore?: Date;\n    startedBy?: string;\n    superProcessInstanceId?: string;\n    tenantId?: string;\n    tenantIdLike?: string;\n    variables?: QueryVariable[];\n    withoutTenantId?: boolean;\n\n    constructor(input?: any) {\n\n        if (input) {\n            Object.assign(this, input);\n            this.finishedAfter = input.finishedAfter ? DateAlfresco.parseDate(input.finishedAfter) : undefined;\n            this.finishedBefore = input.finishedBefore ? DateAlfresco.parseDate(input.finishedBefore) : undefined;\n            this.startedAfter = input.startedAfter ? DateAlfresco.parseDate(input.startedAfter) : undefined;\n            this.startedBefore = input.startedBefore ? DateAlfresco.parseDate(input.startedBefore) : undefined;\n            if (input.variables) {\n                this.variables = input.variables.map((item: any) => {\n                    return new QueryVariable(item);\n                });\n            }\n        }\n    }\n\n}\n"]}
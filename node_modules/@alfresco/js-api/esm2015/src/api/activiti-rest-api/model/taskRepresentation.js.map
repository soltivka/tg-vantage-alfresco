{"version":3,"file":"taskRepresentation.js","sourceRoot":"","sources":["taskRepresentation.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;AAEF,OAAO,EAAE,YAAY,EAAE,MAAM,6CAA6C,CAAC;AAC3E,OAAO,EAAE,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;AACtE,OAAO,EAAE,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AACpE,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAE9C,MAAM,OAAO,kBAAkB;IAoC3B,YAAY,KAAW;QAEnB,IAAI,KAAK,EAAE;YACP,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,uBAAuB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACzF,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACjF,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACjF,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACjF,IAAI,KAAK,CAAC,cAAc,EAAE;gBACtB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE;oBACzD,OAAO,IAAI,wBAAwB,CAAC,IAAI,CAAC,CAAC;gBAC9C,CAAC,CAAC,CAAC;aACN;YACD,IAAI,KAAK,CAAC,cAAc,EAAE;gBACtB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE;oBACzD,OAAO,IAAI,uBAAuB,CAAC,IAAI,CAAC,CAAC;gBAC7C,CAAC,CAAC,CAAC;aACN;YACD,IAAI,KAAK,CAAC,SAAS,EAAE;gBACjB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE;oBAC/C,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;gBAClC,CAAC,CAAC,CAAC;aACN;SACJ;IACL,CAAC;IAED,WAAW;QACP,IAAI,QAAQ,GAAW,EAAE,CAAC;QAE1B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,SAAS,GAAW,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;YAC/E,IAAI,QAAQ,GAAW,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;YAC5E,QAAQ,GAAG,GAAG,SAAS,IAAI,QAAQ,EAAE,CAAC;SACzC;QAED,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED,WAAW;QACP,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;IAC1B,CAAC;CAEJ","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { DateAlfresco } from '../../content-custom-api/model/dateAlfresco';\nimport { LightGroupRepresentation } from './lightGroupRepresentation';\nimport { LightUserRepresentation } from './lightUserRepresentation';\nimport { RestVariable } from './restVariable';\n\nexport class TaskRepresentation {\n    adhocTaskCanBeReassigned?: boolean;\n    assignee?: LightUserRepresentation;\n    category?: string;\n    created?: Date;\n    description?: string;\n    dueDate?: Date;\n    duration?: number;\n    endDate?: Date;\n    executionId?: string;\n    formKey?: string;\n    id?: string;\n    initiatorCanCompleteTask?: boolean;\n    involvedGroups?: LightGroupRepresentation[];\n    involvedPeople?: LightUserRepresentation[];\n    managerOfCandidateGroup?: boolean;\n    memberOfCandidateGroup?: boolean;\n    memberOfCandidateUsers?: boolean;\n    name?: string;\n    parentTaskId?: string;\n    parentTaskName?: string;\n    priority?: number;\n    processDefinitionCategory?: string;\n    processDefinitionDeploymentId?: string;\n    processDefinitionDescription?: string;\n    processDefinitionId?: string;\n    processDefinitionKey?: string;\n    processDefinitionName?: string;\n    processDefinitionVersion?: number;\n    processInstanceId?: string;\n    processInstanceName?: string;\n    processInstanceStartUserId?: string;\n    taskDefinitionKey?: string;\n    variables?: RestVariable[];\n    parentName?: string;\n\n    constructor(input?: any) {\n\n        if (input) {\n            Object.assign(this, input);\n            this.assignee = input.assignee ? new LightUserRepresentation(input.assignee) : undefined;\n            this.created = input.created ? DateAlfresco.parseDate(input.created) : undefined;\n            this.dueDate = input.dueDate ? DateAlfresco.parseDate(input.dueDate) : undefined;\n            this.endDate = input.endDate ? DateAlfresco.parseDate(input.endDate) : undefined;\n            if (input.involvedGroups) {\n                this.involvedGroups = input.involvedGroups.map((item: any) => {\n                    return new LightGroupRepresentation(item);\n                });\n            }\n            if (input.involvedPeople) {\n                this.involvedPeople = input.involvedPeople.map((item: any) => {\n                    return new LightUserRepresentation(item);\n                });\n            }\n            if (input.variables) {\n                this.variables = input.variables.map((item: any) => {\n                    return new RestVariable(item);\n                });\n            }\n        }\n    }\n\n    getFullName(): string {\n        let fullName: string = '';\n\n        if (this.assignee) {\n            let firstName: string = this.assignee.firstName ? this.assignee.firstName : '';\n            let lastName: string = this.assignee.lastName ? this.assignee.lastName : '';\n            fullName = `${firstName} ${lastName}`;\n        }\n\n        return fullName.trim();\n    }\n\n    isCompleted(): boolean {\n        return !!this.endDate;\n    }\n\n}\n"]}
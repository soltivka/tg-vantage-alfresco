{"version":3,"file":"groupRepresentation.js","sourceRoot":"","sources":["groupRepresentation.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;AAEF,OAAO,EAAE,YAAY,EAAE,MAAM,6CAA6C,CAAC;AAC3E,OAAO,EAAE,6BAA6B,EAAE,MAAM,iCAAiC,CAAC;AAChF,OAAO,EAAE,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AAEpE,MAAM,OAAO,mBAAmB;IAe5B,YAAY,KAAW;QAEnB,IAAI,KAAK,EAAE;YACP,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC3B,IAAI,KAAK,CAAC,YAAY,EAAE;gBACpB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE;oBACrD,OAAO,IAAI,6BAA6B,CAAC,IAAI,CAAC,CAAC;gBACnD,CAAC,CAAC,CAAC;aACN;YACD,IAAI,KAAK,CAAC,MAAM,EAAE;gBACd,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE;oBACzC,OAAO,IAAI,mBAAmB,CAAC,IAAI,CAAC,CAAC;gBACzC,CAAC,CAAC,CAAC;aACN;YACD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAC/G,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,uBAAuB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACtF,IAAI,KAAK,CAAC,KAAK,EAAE;gBACb,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE;oBACvC,OAAO,IAAI,uBAAuB,CAAC,IAAI,CAAC,CAAC;gBAC7C,CAAC,CAAC,CAAC;aACN;SACJ;IACL,CAAC;CAEJ","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { DateAlfresco } from '../../content-custom-api/model/dateAlfresco';\nimport { GroupCapabilityRepresentation } from './groupCapabilityRepresentation';\nimport { UserRepresentationGroup } from './userRepresentationGroup';\n\nexport class GroupRepresentation {\n    capabilities?: GroupCapabilityRepresentation[];\n    externalId?: string;\n    groups?: any[];\n    id?: number;\n    lastSyncTimeStamp?: Date;\n    manager?: UserRepresentationGroup;\n    name?: string;\n    parentGroupId?: number;\n    status?: string;\n    tenantId?: number;\n    type?: number;\n    userCount?: number;\n    users?: UserRepresentationGroup[];\n\n    constructor(input?: any) {\n\n        if (input) {\n            Object.assign(this, input);\n            if (input.capabilities) {\n                this.capabilities = input.capabilities.map((item: any) => {\n                    return new GroupCapabilityRepresentation(item);\n                });\n            }\n            if (input.groups) {\n                this.groups = input.groups.map((item: any) => {\n                    return new GroupRepresentation(item);\n                });\n            }\n            this.lastSyncTimeStamp = input.lastSyncTimeStamp ? DateAlfresco.parseDate(input.lastSyncTimeStamp) : undefined;\n            this.manager = input.manager ? new UserRepresentationGroup(input.manager) : undefined;\n            if (input.users) {\n                this.users = input.users.map((item: any) => {\n                    return new UserRepresentationGroup(item);\n                });\n            }\n        }\n    }\n\n}\n"]}
{"version":3,"file":"appDefinition.js","sourceRoot":"","sources":["appDefinition.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;AAEF,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAC1D,OAAO,EAAE,iCAAiC,EAAE,MAAM,qCAAqC,CAAC;AAExF,MAAM,OAAO,aAAa;IAMtB,YAAY,KAAW;QAEnB,IAAI,KAAK,EAAE;YACP,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC3B,IAAI,KAAK,CAAC,MAAM,EAAE;gBACd,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE;oBACzC,OAAO,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC;gBACxC,CAAC,CAAC,CAAC;aACN;YACD,IAAI,KAAK,CAAC,mBAAmB,EAAE;gBAC3B,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE;oBACnE,OAAO,IAAI,iCAAiC,CAAC,IAAI,CAAC,CAAC;gBACvD,CAAC,CAAC,CAAC;aACN;SACJ;IACL,CAAC;CAEJ","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { AppModelDefinition } from './appModelDefinition';\nimport { PublishIdentityInfoRepresentation } from './publishIdentityInfoRepresentation';\n\nexport class AppDefinition {\n    icon?: string;\n    models?: AppModelDefinition[];\n    publishIdentityInfo?: PublishIdentityInfoRepresentation[];\n    theme?: string;\n\n    constructor(input?: any) {\n\n        if (input) {\n            Object.assign(this, input);\n            if (input.models) {\n                this.models = input.models.map((item: any) => {\n                    return new AppModelDefinition(item);\n                });\n            }\n            if (input.publishIdentityInfo) {\n                this.publishIdentityInfo = input.publishIdentityInfo.map((item: any) => {\n                    return new PublishIdentityInfoRepresentation(item);\n                });\n            }\n        }\n    }\n\n}\n"]}
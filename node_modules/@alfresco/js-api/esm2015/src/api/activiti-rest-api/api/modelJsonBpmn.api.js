/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
import { BaseApi } from './base.api';
export class ModelJsonBpmnApi extends BaseApi {
    getHistoricEditorDisplayJsonClient(processModelId, processModelHistoryId) {
        let postBody = null;
        if (processModelId === undefined || processModelId === null) {
            throw "Missing param 'processModelId' in getHistoricEditorDisplayJsonClient";
        }
        if (processModelHistoryId === undefined || processModelHistoryId === null) {
            throw "Missing param 'processModelHistoryId' in getHistoricEditorDisplayJsonClient";
        }
        let pathParams = {
            'processModelId': processModelId,
            'processModelHistoryId': processModelHistoryId
        };
        let queryParams = {};
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/app/rest/models/{processModelId}/history/{processModelHistoryId}/model-json', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    }
    getEditorDisplayJsonClient(processModelId) {
        let postBody = null;
        if (processModelId === undefined || processModelId === null) {
            throw "Missing param 'processModelId' in getEditorDisplayJsonClient";
        }
        let pathParams = {
            'processModelId': processModelId
        };
        let queryParams = {};
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/app/rest/models/{processModelId}/model-json', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    }
    getModelJSON(processDefinitionId) {
        let postBody = null;
        if (processDefinitionId === undefined || processDefinitionId === null) {
            throw "Missing param 'processDefinitionId' in getProcessDefinitionModel";
        }
        let pathParams = {
            'processDefinitionId': processDefinitionId
        };
        let queryParams = {};
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/app/rest/process-definitions/{processDefinitionId}/model-json', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    }
    getModelJSONForProcessDefinition(processInstanceId) {
        let postBody = null;
        if (processInstanceId === undefined || processInstanceId === null) {
            throw "Missing param 'processInstanceId' in getProcessInstancesModel";
        }
        let pathParams = {
            'processInstanceId': processInstanceId
        };
        let queryParams = {};
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/app/rest/process-instances/{processInstanceId}/model-json', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    }
}
//# sourceMappingURL=../../../../../../src/api/activiti-rest-api/api/modelJsonBpmn.api.js.map
{"version":3,"file":"systemProperties.api.js","sourceRoot":"","sources":["systemProperties.api.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { GlobalDateFormatRepresentation } from '../model/globalDateFormatRepresentation';\nimport { PasswordValidationConstraints } from '../model/passwordValidationConstraints';\nimport { SystemPropertiesRepresentation } from '../model/systemPropertiesRepresentation';\nimport { BaseApi } from './base.api';\nimport { throwIfNotDefined } from '../../../assert';\n\n/**\n* Systemproperties service.\n* @module SystempropertiesApi\n*/\nexport class SystemPropertiesApi extends BaseApi {\n    /**\n    * Get global date format\n    *\n    *\n    *\n    * @param tenantId tenantId\n    * @return Promise<GlobalDateFormatRepresentation>\n    */\n    getGlobalDateFormat(tenantId: number): Promise<GlobalDateFormatRepresentation> {\n        throwIfNotDefined(tenantId, 'tenantId');\n\n        let postBody = null;\n\n        let pathParams = {\n            'tenantId': tenantId\n        };\n\n        let queryParams = {\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/system/properties/global-date-format/{tenantId}', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, GlobalDateFormatRepresentation);\n    }\n    /**\n        * Get password validation constraints\n        *\n        *\n        *\n        * @param tenantId tenantId\n        * @return Promise<PasswordValidationConstraints>\n        */\n    getPasswordValidationConstraints(tenantId: number): Promise<PasswordValidationConstraints> {\n        throwIfNotDefined(tenantId, 'tenantId');\n\n        let postBody = null;\n\n        let pathParams = {\n            'tenantId': tenantId\n        };\n\n        let queryParams = {\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/system/properties/password-validation-constraints/{tenantId}', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, PasswordValidationConstraints);\n    }\n    /**\n        * Retrieve system properties\n        *\n        * Typical value is AllowInvolveByEmail\n        *\n        * @return Promise<SystemPropertiesRepresentation>\n        */\n    getProperties(): Promise<SystemPropertiesRepresentation> {\n\n        let postBody = null;\n\n        let pathParams = {\n\n        };\n\n        let queryParams = {\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/system/properties', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, SystemPropertiesRepresentation);\n    }\n    /**\n        * Get involved users who can edit forms\n        *\n        *\n        *\n        * @param tenantId tenantId\n        * @return Promise<boolean>\n        */\n    involvedUsersCanEditForms(tenantId: number): Promise<boolean> {\n        throwIfNotDefined(tenantId, 'tenantId');\n\n        let postBody = null;\n\n        let pathParams = {\n            'tenantId': tenantId\n        };\n\n        let queryParams = {\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/system/properties/involved-users-can-edit-forms/{tenantId}', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts);\n    }\n\n}\n"]}
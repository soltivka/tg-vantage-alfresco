{"version":3,"file":"iDMSync.api.js","sourceRoot":"","sources":["iDMSync.api.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;AAEF,OAAO,EAAE,0BAA0B,EAAE,MAAM,qCAAqC,CAAC;AACjF,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AACrC,OAAO,EAAE,iBAAiB,EAAE,MAAM,iBAAiB,CAAC;AAMpD,MAAM,OAAO,UAAW,SAAQ,OAAO;IASnC,UAAU,CAAC,cAAsB;QAC7B,iBAAiB,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC;QAEpD,IAAI,QAAQ,GAAG,IAAI,CAAC;QAEpB,IAAI,UAAU,GAAG;YACb,gBAAgB,EAAE,cAAc;SACnC,CAAC;QAEF,IAAI,WAAW,GAAG,EACjB,CAAC;QAEF,IAAI,YAAY,GAAG,EAElB,CAAC;QACF,IAAI,UAAU,GAAG,EAChB,CAAC;QAEF,IAAI,YAAY,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAEnC,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,+DAA+D,EAAE,KAAK,EACtE,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAC3D,YAAY,EAAE,OAAO,CAAC,CAAC;IAC/B,CAAC;IAaD,iBAAiB,CAAC,IAAU;QACxB,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAClB,IAAI,QAAQ,GAAG,IAAI,CAAC;QAEpB,IAAI,UAAU,GAAG,EAEhB,CAAC;QAEF,IAAI,WAAW,GAAG;YACd,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC;YAC5B,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC;YACpB,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC;YACtB,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC;SACvB,CAAC;QAEF,IAAI,YAAY,GAAG,EAElB,CAAC;QACF,IAAI,UAAU,GAAG,EAChB,CAAC;QAEF,IAAI,YAAY,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAEnC,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,sCAAsC,EAAE,KAAK,EAC7C,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAC3D,YAAY,EAAE,OAAO,EAAE,0BAA0B,CAAC,CAAC;IAC3D,CAAC;CAEJ","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { SyncLogEntryRepresentation } from '../model/syncLogEntryRepresentation';\nimport { BaseApi } from './base.api';\nimport { throwIfNotDefined } from '../../../assert';\n\n/**\n* Idmsync service.\n* @module IdmsyncApi\n*/\nexport class IDMSyncApi extends BaseApi {\n    /**\n    * Get log file for a sync log entry\n    *\n    *\n    *\n    * @param syncLogEntryId syncLogEntryId\n    * @return Promise<{}>\n    */\n    getLogFile(syncLogEntryId: number): Promise<any> {\n        throwIfNotDefined(syncLogEntryId, 'syncLogEntryId');\n\n        let postBody = null;\n\n        let pathParams = {\n            'syncLogEntryId': syncLogEntryId\n        };\n\n        let queryParams = {\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/idm-sync-log-entries/{syncLogEntryId}/logfile', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts);\n    }\n    /**\n        * List sync log entries\n        *\n        *\n        *\n        * @param opts Optional parameters\n        * @param opts.tenantId tenantId\n        * @param opts.page page\n        * @param opts.start start\n        * @param opts.size size\n        * @return Promise<SyncLogEntryRepresentation>\n        */\n    getSyncLogEntries(opts?: any): Promise<SyncLogEntryRepresentation> {\n        opts = opts || {};\n        let postBody = null;\n\n        let pathParams = {\n\n        };\n\n        let queryParams = {\n            'tenantId': opts['tenantId'],\n            'page': opts['page'],\n            'start': opts['start'],\n            'size': opts['size']\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/idm-sync-log-entries', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, SyncLogEntryRepresentation);\n    }\n\n}\n"]}
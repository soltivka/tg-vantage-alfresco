{"version":3,"file":"networksApi.js","sourceRoot":"","sources":["networksApi.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;EAeE;;;AAGF,oFAAkG;AAOlG,MAAa,WAAW;IAIb,IAAI,CAAC,WAAyB;QACjC,IAAI,CAAC,WAAW,GAAG,IAAI,0BAAc,CAAC,WAAW,CAAC,CAAC;IACvD,CAAC;IAUD,UAAU,CAAC,SAAiB,EAAE,IAAU;QACpC,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACxD,CAAC;IAWD,mBAAmB,CAAC,QAAgB,EAAE,SAAiB,EAAE,IAAU;QAC/D,OAAO,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IAC3E,CAAC;IAYD,qBAAqB,CAAC,QAAgB,EAAE,IAAU;QAC9C,OAAO,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAClE,CAAC;CACJ;AA9CD,kCA8CC","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { AlfrescoApi } from '../../../../alfrescoApi';\nimport { NetworksApi as NewNetworksApi } from '../../../../api/content-rest-api/api/networks.api';\nimport { PersonNetworkEntry } from '../../../../api/content-rest-api/model/personNetworkEntry';\nimport { PersonNetworkPaging } from '../../../../api/content-rest-api/model/personNetworkPaging';\n\n/**\n * @deprecated 3.0.0\n */\nexport class NetworksApi {\n\n    private networksApi: NewNetworksApi;\n\n    public init(alfrescoApi?: AlfrescoApi) {\n        this.networksApi = new NewNetworksApi(alfrescoApi);\n    }\n\n    /**\n     * Get a network\n     * Returns information for a network **networkId**.\n     * @param {String} networkId The identifier of a network.\n     * @param {Object} opts Optional parameters\n     * @param {string[]} opts.fields A list of field names.\\n\\nYou can use this parameter to restrict the fields\\nreturned within a response if, for example, you want to save on overall bandwidth.\\n\\nThe list applies to a returned individual\\nentity or entries within a collection.\\n\\nIf the API method also supports the **include**\\nparameter, then the fields specified in the **include**\\nparameter are returned in addition to those specified in the **fields** parameter.\\n\n     * data is of type: {module:model/PersonNetworkEntry}\n     */\n    getNetwork(networkId: string, opts?: any): Promise<PersonNetworkEntry> {\n        return this.networksApi.getNetwork(networkId, opts);\n    }\n\n    /**\n     * Get network information\n     * Gets network information on a single network specified by **networkId** for **personId**.  You can use the &#x60;-me-&#x60; string in place of &#x60;&lt;personId&gt;&#x60; to specify the currently authenticated user.\n     * @param {String} personId The identifier of a person.\n     * @param {String} networkId The identifier of a network.\n     * @param {Object} opts Optional parameters\n     * @param {string[]} opts.fields A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PersonNetworkEntry}\n     */\n    getNetworkForPerson(personId: string, networkId: string, opts?: any): Promise<PersonNetworkEntry> {\n        return this.networksApi.getNetworkForPerson(personId, networkId, opts);\n    }\n\n    /**\n     * List network membership\n     * Gets a list of network memberships for person **personId**.  You can use the &#x60;-me-&#x60; string in place of &#x60;&lt;personId&gt;&#x60; to specify the currently authenticated user.\n     * @param {String} personId The identifier of a person.\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.skipCount The number of entities that exist in the collection before those included in this list.\n     * @param {Number} opts.maxItems The maximum number of items to return in the list.\n     * @param {string[]} opts.fields A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PersonNetworkPaging}\n     */\n    listNetworksForPerson(personId: string, opts?: any): Promise<PersonNetworkPaging> {\n        return this.networksApi.listNetworksForPerson(personId, opts);\n    }\n}\n"]}
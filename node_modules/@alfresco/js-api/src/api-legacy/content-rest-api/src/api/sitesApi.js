"use strict";
/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.SitesApi = void 0;
const sites_api_1 = require("../../../../api/content-rest-api/api/sites.api");
class SitesApi {
    init(alfrescoApi) {
        this.sitesApi = new sites_api_1.SitesApi(alfrescoApi);
    }
    addSiteMember(siteId, siteMemberBody) {
        return this.sitesApi.createSiteMembership(siteId, siteMemberBody);
    }
    createSite(siteBody, opts) {
        return this.sitesApi.createSite(siteBody, opts);
    }
    updateSite(siteId, siteBody, opts) {
        return this.sitesApi.updateSite(siteId, siteBody, opts);
    }
    deleteSite(siteId, opts) {
        return this.sitesApi.deleteSite(siteId, opts);
    }
    getSite(siteId, opts) {
        return this.sitesApi.getSite(siteId, opts);
    }
    getSiteContainer(siteId, containerId, opts) {
        return this.sitesApi.getSiteContainer(siteId, containerId, opts);
    }
    getSiteContainers(siteId, opts) {
        return this.sitesApi.listSiteContainers(siteId, opts);
    }
    getSiteMember(siteId, personId, opts) {
        return this.sitesApi.getSiteMembership(siteId, personId, opts);
    }
    getSiteMembers(siteId, opts) {
        return this.sitesApi.listSiteMemberships(siteId, opts);
    }
    getSites(opts) {
        return this.sitesApi.listSites(opts);
    }
    removeSiteMember(siteId, personId) {
        return this.sitesApi.deleteSiteMembership(siteId, personId);
    }
    updateSiteMember(siteId, personId, siteMemberRoleBody) {
        return this.sitesApi.updateSiteMembership(siteId, personId, siteMemberRoleBody);
    }
}
exports.SitesApi = SitesApi;
//# sourceMappingURL=../../../../../../src/api-legacy/content-rest-api/src/api/sitesApi.js.map
{"version":3,"file":"alfrescoApi.js","sourceRoot":"","sources":["alfrescoApi.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport ee, { EmitterMethod, Emitter } from 'event-emitter';\nimport { ContentAuth } from './authentication/contentAuth';\nimport { ProcessAuth } from './authentication/processAuth';\nimport { Oauth2Auth } from './authentication/oauth2Auth';\nimport { ContentClient } from './contentClient';\nimport { ProcessClient } from './processClient';\nimport { Storage } from './storage';\nimport { AlfrescoApiConfig } from './alfrescoApiConfig';\nimport { Authentication } from './authentication/authentication';\n\nexport class AlfrescoApi implements Emitter {\n    storage: Storage;\n    config: AlfrescoApiConfig;\n    contentClient: ContentClient;\n    contentPrivateClient: ContentClient;\n    processClient: ProcessClient;\n    searchClient: ContentClient;\n    discoveryClient: ContentClient;\n    gsClient: ContentClient;\n    authClient: ContentClient;\n    oauth2Auth: Oauth2Auth;\n    processAuth: ProcessAuth;\n    contentAuth: ContentAuth;\n\n    on: EmitterMethod;\n    off: EmitterMethod;\n    once: EmitterMethod;\n\n    bufferEvents: string[] = [];\n\n    emit: (type: string, ...args: any[]) => void;\n\n    username: string;\n\n    constructor(config?: AlfrescoApiConfig) {\n        ee(this);\n\n        if (config) {\n            this.setConfig(config);\n        }\n    }\n\n    setConfig(config: AlfrescoApiConfig) {\n        if (!config) {\n            config = {};\n        }\n\n        this.storage = new Storage();\n        this.storage.setDomainPrefix(config.domainPrefix);\n\n        this.config = new AlfrescoApiConfig(config);\n\n        this.clientsFactory();\n\n        this.processClient = new ProcessClient(this.config);\n\n        this.errorListeners();\n        this.initAuth(config);\n\n        if(this.isLoggedIn()){\n            this.emitBuffer('logged-in');\n        }\n\n        return config;\n    }\n\n    private initAuth(config: AlfrescoApiConfig): void {\n        if (this.isOauthConfiguration()) {\n\n            if (!this.oauth2Auth) {\n                this.oauth2Auth = new Oauth2Auth(this.config, this);\n            } else {\n                this.oauth2Auth.setConfig(this.config, this);\n            }\n\n            this.oauth2Auth?.on('logged-in', () => {\n                this.emitBuffer('logged-in');\n            });\n\n            this.setAuthenticationClientECMBPM(this.oauth2Auth.getAuthentication(), this.oauth2Auth.getAuthentication());\n        } else {\n\n            if (!this.processAuth) {\n                this.processAuth = new ProcessAuth(this.config);\n            } else {\n                this.processAuth.setConfig(this.config);\n            }\n\n            this.processAuth?.on('logged-in', () => {\n                this.emitBuffer('logged-in');\n            });\n\n            if (!this.contentAuth) {\n                this.contentAuth = new ContentAuth(this.config, this);\n            } else {\n                this.contentAuth.setConfig(config);\n            }\n\n            this.contentAuth?.on('logged-in', () => {\n                this.emitBuffer('logged-in');\n            });\n\n            this.setAuthenticationClientECMBPM(this.contentAuth.getAuthentication(), this.processAuth.getAuthentication());\n        }\n\n    }\n\n    private clientsFactory() {\n        if (!this.contentPrivateClient) {\n            this.contentPrivateClient = new ContentClient(this.config, `/api/${this.config.tenant}/private/alfresco/versions/1`);\n        } else {\n            this.contentPrivateClient.setConfig(this.config, `/api/${this.config.tenant}/private/alfresco/versions/1`);\n        }\n\n        if (!this.contentClient) {\n            this.contentClient = new ContentClient(this.config, `/api/${this.config.tenant}/public/alfresco/versions/1`);\n        } else {\n            this.contentClient.setConfig(this.config, `/api/${this.config.tenant}/public/alfresco/versions/1`);\n        }\n\n        if (!this.authClient) {\n            this.authClient = new ContentClient(this.config, `/api/${this.config.tenant}/public/authentication/versions/1`);\n        } else {\n            this.authClient.setConfig(this.config, `/api/${this.config.tenant}/public/authentication/versions/1`);\n        }\n\n        if (!this.searchClient) {\n            this.searchClient = new ContentClient(this.config, `/api/${this.config.tenant}/public/search/versions/1`);\n        } else {\n            this.searchClient.setConfig(this.config, `/api/${this.config.tenant}/public/search/versions/1`);\n        }\n\n        if (!this.discoveryClient) {\n            this.discoveryClient = new ContentClient(this.config, `/api`);\n        } else {\n            this.discoveryClient.setConfig(this.config, `/api`);\n        }\n\n        if (!this.gsClient) {\n            this.gsClient = new ContentClient(this.config, `/api/${this.config.tenant}/public/gs/versions/1`);\n        } else {\n            this.gsClient.setConfig(this.config, `/api/${this.config.tenant}/public/gs/versions/1`);\n        }\n\n        if (!this.processClient) {\n            this.processClient = new ProcessClient(this.config);\n        } else {\n            this.processClient.setConfig(this.config);\n        }\n    }\n\n    errorListeners() {\n\n        this.contentClient.off('error', () => {\n        });\n\n        this.authClient.off('error', () => {\n        });\n\n        this.contentPrivateClient.off('error', () => {\n        });\n\n        this.processClient.off('error', () => {\n        });\n\n        this.searchClient.off('error', () => {\n        });\n\n        this.discoveryClient.off('error', () => {\n        });\n\n        this.gsClient.off('error', () => {\n        });\n\n        this.contentClient.on('error', (error: any) => {\n            this.errorHandler(error);\n        });\n\n        this.authClient.on('error', (error: any) => {\n            this.errorHandler(error);\n        });\n\n        this.contentPrivateClient.on('error', (error: any) => {\n            this.errorHandler(error);\n        });\n\n        this.processClient.on('error', (error: any) => {\n            this.errorHandler(error);\n        });\n\n        this.searchClient.on('error', (error: any) => {\n            this.errorHandler(error);\n        });\n\n        this.discoveryClient.on('error', (error: any) => {\n            this.errorHandler(error);\n        });\n\n        this.gsClient.on('error', (error: any) => {\n            this.errorHandler(error);\n        });\n    }\n\n    errorHandler(error: { status?: number }) {\n        if (error.status === 401) {\n            this.invalidateSession();\n        }\n\n        this.emitBuffer('error', error);\n    }\n\n    changeWithCredentialsConfig(withCredentials: boolean) {\n        this.config.withCredentials = withCredentials;\n    }\n\n    changeCsrfConfig(disableCsrf: boolean) {\n        this.config.disableCsrf = disableCsrf;\n        this.processAuth.changeCsrfConfig(disableCsrf);\n    }\n\n    changeEcmHost(hostEcm: string) {\n        this.config.hostEcm = hostEcm;\n        this.contentAuth.changeHost();\n        this.contentClient.changeHost();\n        this.authClient.changeHost();\n    }\n\n    changeBpmHost(hostBpm: string) {\n        this.config.hostBpm = hostBpm;\n        this.processAuth.changeHost();\n        this.processClient.changeHost();\n    }\n\n    /**\n     * login Alfresco API\n     * @param  username:   // Username to login\n     * @param  password:   // Password to login\n     *\n     * @returns {Promise} A promise that returns {new authentication ticket} if resolved and {error} if rejected.\n     * */\n    login(username: string, password: string): Promise<any> {\n\n        if (!this.isCredentialValid(username) || !this.isCredentialValid(password)) {\n            return Promise.reject('missing username or password');\n        }\n\n        if (username) {\n            username = username.trim();\n        }\n\n        this.username = username;\n\n        if (this.isOauthConfiguration()) {\n\n            let oauth2AuthPromise;\n\n            oauth2AuthPromise = this.oauth2Auth.login(username, password);\n\n            oauth2AuthPromise.then((accessToken) => {\n                this.config.accessToken = accessToken;\n            }, (e) => {\n                console.log('login OAUTH error', e);\n            });\n\n            return oauth2AuthPromise;\n\n        } else {\n\n            if (this.isBpmConfiguration()) {\n                const processPromise = this.processAuth.login(username, password);\n\n                processPromise.then((ticketBpm) => {\n                    this.config.ticketBpm = ticketBpm;\n                }, () => {\n                    console.log('login BPM error');\n                });\n\n                return processPromise;\n            } else if (this.isEcmConfiguration()) {\n                const contentPromise = this.contentAuth.login(username, password);\n\n                contentPromise.then((ticketEcm) => {\n                    this.setAuthenticationClientECMBPM(this.contentAuth.getAuthentication(), null);\n\n                    this.config.ticketEcm = ticketEcm;\n                }, () => {\n                    console.log('login ECM error');\n                });\n\n                return contentPromise;\n\n            } else if (this.isEcmBpmConfiguration()) {\n                const contentProcessPromise = this._loginBPMECM(username, password);\n\n                contentProcessPromise.then((data) => {\n                    this.config.ticketEcm = data[0];\n                    this.config.ticketBpm = data[1];\n                });\n\n                return contentProcessPromise;\n            } else {\n                return Promise.reject('Unknown configuration');\n            }\n        }\n    }\n\n    isCredentialValid(credential: string): boolean {\n        return credential !== undefined && credential !== null && credential !== '';\n    }\n\n    implicitLogin(): Promise<any> {\n        if (!this.isOauthConfiguration()) {\n            return Promise.reject('Missing the required oauth2 configuration');\n        }\n\n        return new Promise(() => {\n            this.oauth2Auth.implicitLogin();\n        });\n    }\n\n    setAuthenticationClientECMBPM(authECM: Authentication, authBPM: Authentication) {\n        this.contentClient.setAuthentications(authECM);\n        this.authClient.setAuthentications(authECM);\n        this.searchClient.setAuthentications(authECM);\n        this.contentPrivateClient.setAuthentications(authECM);\n        this.processClient.setAuthentications(authBPM);\n        this.searchClient.setAuthentications(authECM);\n        this.discoveryClient.setAuthentications(authECM);\n        this.gsClient.setAuthentications(authECM);\n    }\n\n    /**\n     * login Tickets\n     *\n     * @param   ticketEcm // alfresco ticket\n     * @param   ticketBpm // alfresco ticket\n     * */\n    loginTicket(ticketEcm: string, ticketBpm: string): Promise<any> {\n        this.config.ticketEcm = ticketEcm;\n        this.config.ticketBpm = ticketBpm;\n\n        return this.contentAuth.validateTicket();\n    }\n\n    _loginBPMECM(username: string, password: string): Promise<any> {\n        const contentPromise = this.contentAuth.login(username, password);\n        const processPromise = this.processAuth.login(username, password);\n\n        const promise: any = new Promise((resolve, reject) => {\n            Promise.all([contentPromise, processPromise]).then(\n                (data) => {\n                    promise.emit('success');\n                    resolve(data);\n                },\n                (error) => {\n                    this.contentAuth.invalidateSession();\n                    this.processAuth.invalidateSession();\n\n                    if (error.status === 401) {\n                        promise.emit('unauthorized');\n                    }\n                    promise.emit('error');\n                    reject(error);\n                });\n        });\n\n        ee(promise); // jshint ignore:line\n\n        return promise;\n    }\n\n    /**\n     * logout Alfresco API\n     * */\n    logout(): Promise<any> {\n        this.username = null;\n\n        if (this.isOauthConfiguration()) {\n            return this.oauth2Auth.logOut();\n        } else {\n            if (this.isBpmConfiguration()) {\n                return this.processAuth.logout();\n            } else if (this.isEcmConfiguration()) {\n                const contentPromise = this.contentAuth.logout();\n                contentPromise.then(\n                    () => this.config.ticket = undefined,\n                    () => {\n                    }\n                );\n                return contentPromise;\n            } else if (this.isEcmBpmConfiguration()) {\n                return this._logoutBPMECM();\n            }\n            return Promise.resolve();\n        }\n    }\n\n    _logoutBPMECM(): Promise<any> {\n        const contentPromise = this.contentAuth.logout();\n        const processPromise = this.processAuth.logout();\n\n        const promise: any = new Promise((resolve, reject) => {\n            Promise.all([contentPromise, processPromise]).then(\n                () => {\n                    this.config.ticket = undefined;\n                    promise.emit('logout');\n                    resolve('logout');\n                },\n                (error) => {\n                    if (error.status === 401) {\n                        promise.emit('unauthorized');\n                    }\n                    promise.emit('error');\n                    reject(error);\n                });\n        });\n\n        ee(promise); // jshint ignore:line\n\n        return promise;\n    }\n\n    /**\n     * If the client is logged in return true\n     */\n    isLoggedIn(): boolean {\n        if (this.isOauthConfiguration()) {\n            return this.oauth2Auth.isLoggedIn();\n        } else {\n            if (this.isBpmConfiguration()) {\n                return this.processAuth.isLoggedIn();\n            } else if (this.isEcmConfiguration()) {\n                return this.contentAuth.isLoggedIn();\n            } else if (this.isEcmBpmConfiguration()) {\n                return this.contentAuth.isLoggedIn() && this.processAuth.isLoggedIn();\n            } else {\n                return false;\n            }\n        }\n    }\n\n    isBpmLoggedIn(): boolean {\n        if (this.isBpmConfiguration() || this.isEcmBpmConfiguration()) {\n            if (this.isOauthConfiguration()) {\n                return this.oauth2Auth.isLoggedIn();\n            } else {\n                return this.processAuth.isLoggedIn();\n            }\n        }\n        return false;\n    }\n\n    isEcmLoggedIn(): boolean {\n        if (this.isEcmConfiguration() || this.isEcmBpmConfiguration()) {\n            if (this.isOauthConfiguration()) {\n                return this.oauth2Auth.isLoggedIn();\n            } else {\n                return this.contentAuth.isLoggedIn();\n            }\n        }\n        return false;\n    }\n\n    getBpmUsername(): string {\n        if (this.isOauthConfiguration()) {\n            return this.username || this.oauth2Auth.storage.getItem('USERNAME');\n        } else {\n            return this.username || this.processAuth.storage.getItem('APS_USERNAME');\n        }\n    }\n\n    getEcmUsername(): string {\n        if (this.isOauthConfiguration()) {\n            return this.username || this.oauth2Auth.storage.getItem('USERNAME');\n        } else {\n            return this.username || this.contentAuth.storage.getItem('ACS_USERNAME');\n        }\n    }\n\n    /**\n     * refresh token\n     * */\n    refreshToken(): Promise<string> {\n        if (!this.isOauthConfiguration()) {\n            return Promise.reject('Missing the required oauth2 configuration');\n        }\n\n        if (this.config.oauth2.implicitFlow) {\n            return Promise.reject('Manual refresh token not possible in implicit flow');\n        }\n\n        return this.oauth2Auth.refreshToken();\n    }\n\n    getTicketAuth(): string {\n        return this.oauth2Auth && this.oauth2Auth.getToken();\n    }\n\n    /**\n     * Set the current Ticket\n     *\n     * @param ticketEcm\n     * @param TicketBpm\n     * */\n    setTicket(ticketEcm: string, TicketBpm: string) {\n        if (this.contentAuth) {\n            this.contentAuth.setTicket(ticketEcm);\n        }\n        if (this.processAuth) {\n            this.processAuth.setTicket(TicketBpm);\n        }\n    }\n\n    /**\n     * invalidate the current session\n     * */\n    invalidateSession() {\n        if (this.oauth2Auth) {\n            this.oauth2Auth.invalidateSession();\n        } else {\n            this.contentAuth.invalidateSession();\n            this.processAuth.invalidateSession();\n        }\n    }\n\n    /**\n     * Get the current Ticket for the Bpm\n     * */\n    getTicketBpm(): string {\n        return this.processAuth && this.processAuth.getTicket();\n    }\n\n    /**\n     * Get the current Ticket for the Ecm\n     * */\n    getTicketEcm(): string {\n        return this.contentAuth && this.contentAuth.getTicket();\n    }\n\n    /**\n     * Get the current Ticket for the Ecm and BPM\n     * */\n    getTicket(): string[] {\n        return [this.contentAuth.getTicket(), this.processAuth.getTicket()];\n    }\n\n    isBpmConfiguration(): boolean {\n        return this.config.provider && this.config.provider.toUpperCase() === 'BPM';\n    }\n\n    isEcmConfiguration(): boolean {\n        return this.config.provider && this.config.provider.toUpperCase() === 'ECM';\n    }\n\n    isOauthConfiguration(): boolean {\n        return this.config.authType === 'OAUTH';\n    }\n\n    isPublicUrl(): boolean {\n        if (this.isOauthConfiguration()) {\n            return this.oauth2Auth.isPublicUrl();\n        }\n        return false;\n    }\n\n    isEcmBpmConfiguration(): boolean {\n        return this.config.provider && this.config.provider.toUpperCase() === 'ALL';\n    }\n\n    private emitBuffer(event: string, callback ?: any): void {\n        this.emit(event, callback);\n        this.bufferEvents.push(event);\n    }\n\n    reply(event: string, callback ?: any): void {\n        if (this.bufferEvents.indexOf(event) >= 0) {\n            Function.prototype.apply.call(callback, this, arguments);\n        } else {\n            this.on(event, callback);\n        }\n    }\n}\n"]}
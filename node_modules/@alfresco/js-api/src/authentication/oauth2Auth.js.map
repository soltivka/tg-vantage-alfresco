{"version":3,"file":"oauth2Auth.js","sourceRoot":"","sources":["oauth2Auth.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport ee from 'event-emitter';\nimport { AlfrescoApiClient } from '../alfrescoApiClient';\nimport { AlfrescoApiConfig } from '../alfrescoApiConfig';\nimport { Authentication } from './authentication';\nimport { AuthenticationApi } from '../api/auth-rest-api/api/authentication.api';\nimport { AlfrescoApi } from '../alfrescoApi';\nimport { Storage } from '../storage';\n\ndeclare const Buffer: any;\ndeclare const require: any;\n// tslint:disable-next-line\nconst minimatch = require('minimatch');\n\ndeclare let window: Window;\n\nexport class Oauth2Auth extends AlfrescoApiClient {\n\n    static readonly DEFAULT_AUTHORIZATION_URL = '/protocol/openid-connect/auth';\n    static readonly DEFAULT_TOKEN_URL = '/protocol/openid-connect/token';\n    static readonly DEFAULT_LOGOUT_URL = '/protocol/openid-connect/logout';\n\n    private refreshTokenIntervalPolling: any;\n    private refreshTokenTimeoutIframe: any;\n    private checkAccessToken = true;\n    storage: Storage;\n\n    hashFragmentParams: any;\n    token: string;\n    discovery: {\n        loginUrl?: string;\n        logoutUrl?: string;\n        tokenEndpoint?: string;\n    } = {};\n\n    authentications: Authentication = {\n        'oauth2': { accessToken: '' }, type: 'oauth2', 'basicAuth': {}\n    };\n\n    iFrameHashListener: any;\n\n    constructor(config: AlfrescoApiConfig, alfrescoApi: AlfrescoApi) {\n        super();\n        this.storage = new Storage();\n        this.storage.setDomainPrefix(config.domainPrefix);\n\n        this.className = 'Oauth2Auth';\n\n        if (config) {\n            this.setConfig(config, alfrescoApi);\n        }\n    }\n\n    setConfig(config: AlfrescoApiConfig, alfrescoApi: AlfrescoApi) {\n        this.config = config;\n\n        if (this.config.oauth2) {\n            if (this.config.oauth2.host === undefined || this.config.oauth2.host === null) {\n                throw 'Missing the required oauth2 host parameter';\n            }\n\n            if (this.config.oauth2.clientId === undefined || this.config.oauth2.clientId === null) {\n                throw 'Missing the required oauth2 clientId parameter';\n            }\n\n            if (this.config.oauth2.scope === undefined || this.config.oauth2.scope === null) {\n                throw 'Missing the required oauth2 scope parameter';\n            }\n\n            if (this.config.oauth2.secret === undefined || this.config.oauth2.secret === null) {\n                this.config.oauth2.secret = '';\n            }\n\n            if ((this.config.oauth2.redirectUri === undefined || this.config.oauth2.redirectUri === null) && this.config.oauth2.implicitFlow) {\n                throw 'Missing redirectUri required parameter';\n            }\n\n            if (!this.config.oauth2.refreshTokenTimeout) {\n                this.config.oauth2.refreshTokenTimeout = 300000;\n            }\n\n            if (!this.config.oauth2.redirectSilentIframeUri) {\n                let context = '';\n                if (typeof window !== 'undefined') {\n                    context = window.location.origin;\n                }\n                this.config.oauth2.redirectSilentIframeUri = context + '/assets/silent-refresh.html';\n            }\n\n            this.basePath = this.config.oauth2.host; //Auth Call\n\n            this.host = this.config.oauth2.host;\n\n            this.discoveryUrls();\n\n            if (this.hasContentProvider()) {\n                this.exchangeTicketListener(alfrescoApi);\n            }\n\n            this.initOauth();\n        }\n    }\n\n    initOauth() {\n        if (!this.config.oauth2.implicitFlow && this.isValidAccessToken()) {\n            const accessToken = this.storage.getItem('access_token');\n            this.setToken(accessToken, null);\n        }\n\n        if (this.config.oauth2.implicitFlow) {\n            this.checkFragment('nonce');\n        }\n    }\n\n    discoveryUrls() {\n        this.discovery.loginUrl = this.host + (this.config.oauth2.authorizationUrl || Oauth2Auth.DEFAULT_AUTHORIZATION_URL);\n        this.discovery.logoutUrl = this.host + (this.config.oauth2.logoutUrl || Oauth2Auth.DEFAULT_LOGOUT_URL);\n        this.discovery.tokenEndpoint = this.host + (this.config.oauth2.tokenUrl || Oauth2Auth.DEFAULT_TOKEN_URL);\n    }\n\n    hasContentProvider(): boolean {\n        return this.config.provider === 'ECM' || this.config.provider === 'ALL';\n    }\n\n    checkFragment(nonceKey?: string, externalHash?: any): any {// jshint ignore:line\n        this.hashFragmentParams = this.getHashFragmentParams(externalHash);\n\n        if (this.hashFragmentParams && this.hashFragmentParams.error === undefined) {\n            this.useFragmentTimeLogin(nonceKey);\n        } else {\n            this.refreshBrowserLogin();\n        }\n    }\n\n    private refreshBrowserLogin() {\n        if (this.config.oauth2.silentLogin && !this.isPublicUrl()) {\n            this.implicitLogin();\n        }\n\n        if (this.isValidToken() && this.isValidAccessToken()) {\n            let accessToken = this.storage.getItem('access_token');\n            this.setToken(accessToken, null);\n            this.silentRefresh();\n        }\n    }\n\n    private useFragmentTimeLogin(nonceKey: string) {\n        let accessToken = this.hashFragmentParams.access_token;\n        let idToken = this.hashFragmentParams.id_token;\n        let sessionState = this.hashFragmentParams.session_state;\n        let expiresIn = this.hashFragmentParams.expires_in;\n\n        if (!sessionState) {\n            throw('session state not present');\n        }\n\n        try {\n            const jwt = this.processJWTToken(idToken, nonceKey);\n            if (jwt) {\n                this.storeIdToken(idToken, jwt.payload.exp);\n                this.storeAccessToken(accessToken, expiresIn);\n                this.authentications.basicAuth.username = jwt.payload.preferred_username;\n                this.saveUsername(jwt.payload.preferred_username);\n                this.silentRefresh();\n                return accessToken;\n            }\n        } catch (error) {\n            throw('Validation JWT error' + error);\n        }\n    }\n\n    isPublicUrl(): boolean {\n        const publicUrls = this.config.oauth2.publicUrls || [];\n\n        if (Array.isArray(publicUrls)) {\n            return publicUrls.length > 0 &&\n                publicUrls.some((urlPattern: string) => minimatch(window.location.href, urlPattern));\n        }\n        return false;\n    }\n\n    padBase64(base64data: any) {\n        while (base64data.length % 4 !== 0) {\n            base64data += '=';\n        }\n        return base64data;\n    }\n\n    processJWTToken(jwt: any, nonceKey: string): any {\n        if (jwt) {\n            const jwtArray = jwt.split('.');\n            const headerBase64 = this.padBase64(jwtArray[0]);\n            const headerJson = this.b64DecodeUnicode(headerBase64);\n            const header = JSON.parse(headerJson);\n\n            const payloadBase64 = this.padBase64(jwtArray[1]);\n            const payloadJson = this.b64DecodeUnicode(payloadBase64);\n            const payload = JSON.parse(payloadJson);\n\n            const savedNonce = this.storage.getItem(nonceKey);\n\n            if (!payload.sub) {\n                throw('Missing sub in JWT');\n            }\n\n            if (payload.nonce !== savedNonce) {\n                console.log('Failing nonce JWT is not corresponding' + payload.nonce);\n                return;\n            }\n\n            return {\n                idToken: jwt,\n                payload: payload,\n                header: header\n            };\n        }\n    }\n\n    b64DecodeUnicode(b64string: string) {\n        const base64 = b64string.replace(/\\-/g, '+').replace(/\\_/g, '/');\n        return decodeURIComponent(\n            atob(base64)\n                .split('')\n                .map((c) => {\n                    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n                })\n                .join('')\n        );\n    }\n\n    storeIdToken(idToken: string, exp: number) {\n        this.storage.setItem('id_token', idToken);\n        this.storage.setItem('id_token_expires_at', Number(exp * 1000).toString());\n        this.storage.setItem('id_token_stored_at', Date.now().toString());\n    }\n\n    storeAccessToken(accessToken: string, expiresIn: number, refreshToken?: string) {\n        this.storage.setItem('access_token', accessToken);\n\n        const expiresInMilliSeconds = expiresIn * 1000;\n        const now = new Date();\n        const expiresAt = now.getTime() + expiresInMilliSeconds;\n\n        this.storage.setItem('access_token_expires_in', expiresAt);\n        this.storage.setItem('access_token_stored_at', Date.now().toString());\n        this.setToken(accessToken, refreshToken);\n    }\n\n    saveUsername(username: string) {\n        if (this.storage.supportsStorage()) {\n            this.storage.setItem('USERNAME', username);\n        }\n    }\n\n    implicitLogin() {\n        if (!this.isValidToken() || !this.isValidAccessToken()) {\n            this.redirectLogin();\n        }\n    }\n\n    isValidToken(): boolean {\n        let validToken = false;\n        if (this.getIdToken()) {\n            let expiresAt = this.storage.getItem('id_token_expires_at'),\n                now = new Date();\n            if (expiresAt && parseInt(expiresAt, 10) >= now.getTime()) {\n                validToken = true;\n            }\n        }\n\n        return validToken;\n    }\n\n    isValidAccessToken(): boolean {\n        let validAccessToken = false;\n\n        if (this.getAccessToken()) {\n            const expiresAt = this.storage.getItem('access_token_expires_in');\n            const now = new Date();\n            if (expiresAt && parseInt(expiresAt, 10) >= now.getTime()) {\n                validAccessToken = true;\n            }\n        }\n\n        return validAccessToken;\n    }\n\n    getIdToken(): string {\n        return this.storage.getItem('id_token');\n    }\n\n    getAccessToken(): string {\n        return this.storage.getItem('access_token');\n    }\n\n    redirectLogin(): void {\n        if (this.config.oauth2.implicitFlow && typeof window !== 'undefined') {\n            let href = this.composeImplicitLoginUrl();\n            window.location.href = href;\n            this.emit('implicit_redirect', href);\n        }\n    }\n\n    isRedirectionUrl() {\n        return window.location.hash && window.location.hash.split('&')[0].indexOf('session_state') === -1;\n    }\n\n    genNonce(): string {\n        let text = '';\n        const possible =\n            'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n        for (let i = 0; i < 40; i++) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n\n        return text;\n    }\n\n    composeImplicitLoginUrl(): string {\n        let nonce = this.genNonce();\n\n        this.storage.setItem('nonce', nonce);\n\n        const afterLoginUriSegment = this.isRedirectionUrl() ? window.location.hash : '';\n        if (afterLoginUriSegment && afterLoginUriSegment !== '/') {\n            this.storage.setItem('loginFragment', afterLoginUriSegment.replace('#', '').trim());\n        }\n\n        let separation = this.discovery.loginUrl.indexOf('?') > -1 ? '&' : '?';\n\n        return this.discovery.loginUrl +\n            separation +\n            'client_id=' +\n            encodeURIComponent(this.config.oauth2.clientId) +\n            '&redirect_uri=' +\n            encodeURIComponent(this.config.oauth2.redirectUri) +\n            '&scope=' +\n            encodeURIComponent(this.config.oauth2.scope) +\n            '&response_type=' +\n            encodeURIComponent('id_token token') +\n            '&nonce=' +\n            encodeURIComponent(nonce);\n\n    }\n\n    composeIframeLoginUrl(): string {\n        let nonce = this.genNonce();\n\n        this.storage.setItem('refresh_nonce', nonce);\n\n        let separation = this.discovery.loginUrl.indexOf('?') > -1 ? '&' : '?';\n\n        return this.discovery.loginUrl +\n            separation +\n            'client_id=' +\n            encodeURIComponent(this.config.oauth2.clientId) +\n            '&redirect_uri=' +\n            encodeURIComponent(this.config.oauth2.redirectSilentIframeUri) +\n            '&scope=' +\n            encodeURIComponent(this.config.oauth2.scope) +\n            '&response_type=' +\n            encodeURIComponent('id_token token') +\n            '&nonce=' +\n            encodeURIComponent(nonce) +\n            '&prompt=none';\n\n    }\n\n    hasHashCharacter(hash: string): boolean {\n        return hash.indexOf('#') === 0;\n    }\n\n    startWithHashRoute(hash: string) {\n        return hash.startsWith('#/');\n    }\n\n    getHashFragmentParams(externalHash: string): string {\n        let hashFragmentParams = null;\n\n        if (typeof window !== 'undefined') {\n            let hash;\n\n            if (!externalHash) {\n                hash = decodeURIComponent(window.location.hash);\n                if (!this.startWithHashRoute(hash)) {\n                    window.location.hash = '';\n                }\n            } else {\n                hash = decodeURIComponent(externalHash);\n                this.removeHashFromSilentIframe();\n                this.destroyIframe();\n            }\n\n            if (this.hasHashCharacter(hash) && !this.startWithHashRoute(hash)) {\n                const questionMarkPosition = hash.indexOf('?');\n\n                if (questionMarkPosition > -1) {\n                    hash = hash.substr(questionMarkPosition + 1);\n                } else {\n                    hash = hash.substr(1);\n                }\n                hashFragmentParams = this.parseQueryString(hash);\n            }\n        }\n        return hashFragmentParams;\n    }\n\n    parseQueryString(queryString: string): any {\n        const data: { [key: string]: any } = {};\n        let pairs, pair, separatorIndex, escapedKey, escapedValue, key, value;\n\n        if (queryString !== null) {\n            pairs = queryString.split('&');\n\n            for (let i = 0; i < pairs.length; i++) {\n                pair = pairs[i];\n                separatorIndex = pair.indexOf('=');\n\n                if (separatorIndex === -1) {\n                    escapedKey = pair;\n                    escapedValue = null;\n                } else {\n                    escapedKey = pair.substr(0, separatorIndex);\n                    escapedValue = pair.substr(separatorIndex + 1);\n                }\n\n                key = decodeURIComponent(escapedKey);\n                value = decodeURIComponent(escapedValue);\n\n                if (key.substr(0, 1) === '/') {\n                    key = key.substr(1);\n                }\n\n                data[key] = value;\n            }\n        }\n\n        return data;\n    }\n\n    silentRefresh(): void {\n        if (typeof document === 'undefined') {\n            this.pollingRefreshToken();\n            return;\n        }\n\n        if (this.checkAccessToken) {\n            this.destroyIframe();\n            this.createIframe();\n            this.checkAccessToken = false;\n            return;\n        }\n\n        this.refreshTokenTimeoutIframe = setTimeout(() => {\n            this.destroyIframe();\n            this.createIframe();\n        }, this.config.oauth2.refreshTokenTimeout);\n    }\n\n    removeHashFromSilentIframe() {\n        let iframe: any = document.getElementById('silent_refresh_token_iframe');\n        if (iframe && iframe.contentWindow.location.hash) {\n            iframe.contentWindow.location.hash = '';\n        }\n    }\n\n    createIframe() {\n        const iframe = document.createElement('iframe');\n        iframe.id = 'silent_refresh_token_iframe';\n        let loginUrl = this.composeIframeLoginUrl();\n        iframe.setAttribute('src', loginUrl);\n        iframe.style.display = 'none';\n        document.body.appendChild(iframe);\n\n        this.iFrameHashListener = () => {\n            let silentRefreshTokenIframe: any = document.getElementById('silent_refresh_token_iframe');\n            let hash = silentRefreshTokenIframe.contentWindow.location.hash;\n            try {\n                this.checkFragment('refresh_nonce', hash);\n            } catch (e) {\n                this.logOut();\n            }\n        };\n\n        iframe.addEventListener('load', this.iFrameHashListener);\n    }\n\n    destroyIframe() {\n        const iframe = document.getElementById('silent_refresh_token_iframe');\n\n        if (iframe) {\n            iframe.removeEventListener('load', this.iFrameHashListener);\n            document.body.removeChild(iframe);\n        }\n    }\n\n    /**\n     * login Alfresco API\n     * @returns {Promise} A promise that returns {new authentication token} if resolved and {error} if rejected.\n     * */\n    login(username: string, password: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.grantPasswordLogin(username, password, resolve, reject);\n        });\n    }\n\n    grantPasswordLogin(username: string, password: string, resolve: any, reject: any) {\n        this.invalidateSession();\n\n        let postBody = {}, pathParams = {}, queryParams = {};\n\n        let headerParams = {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        };\n\n        let formParams = {\n            username: username,\n            password: password,\n            grant_type: 'password',\n            client_id: this.config.oauth2.clientId\n        };\n\n        let contentTypes = ['application/x-www-form-urlencoded'];\n        let accepts = ['application/json'];\n\n        let promise = this.callCustomApi(\n            this.discovery.tokenEndpoint, 'POST',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts\n        ).then(\n            (data: any) => {\n                this.saveUsername(username);\n                this.silentRefresh();\n                this.storeAccessToken(data.access_token, data.expires_in, data.refresh_token);\n\n                resolve(data);\n            },\n            (error) => {\n                if (error.error && error.error.status === 401 || error.status === 401) {\n                    this.emit('unauthorized');\n                }\n                this.emit('error');\n                reject(error.error);\n            });\n\n        ee(promise); // jshint ignore:line\n    }\n\n    pollingRefreshToken() {\n        this.refreshTokenIntervalPolling = setInterval(async () => {\n            try {\n                await this.refreshToken();\n            } catch (e) {\n                /* continue regardless of error */\n            }\n        }, this.config.oauth2.refreshTokenTimeout);\n\n        this.refreshTokenIntervalPolling.unref();\n    }\n\n    /**\n     * Refresh the  Token\n     * */\n    refreshToken(): Promise<any> {\n        let postBody = {}, pathParams = {}, queryParams = {}, formParams = {};\n\n        let auth = 'Basic ' + this.universalBtoa(this.config.oauth2.clientId + ':' + this.config.oauth2.secret);\n\n        let headerParams = {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Cache-Control': 'no-cache',\n            'Authorization': auth\n        };\n\n        formParams = {\n            grant_type: 'refresh_token',\n            refresh_token: this.authentications.oauth2.refreshToken\n        };\n\n        let contentTypes = ['application/x-www-form-urlencoded'];\n        let accepts = ['application/json'];\n\n        let promise = new Promise((resolve, reject) => {\n            this.callCustomApi(\n                this.discovery.tokenEndpoint, 'POST',\n                pathParams, queryParams, headerParams, formParams, postBody,\n                contentTypes, accepts\n            ).then(\n                (data: any) => {\n                    this.setToken(data.access_token, data.refresh_token);\n                    resolve(data);\n                },\n                (error) => {\n                    if (error.error && error.error.status === 401) {\n                        this.emit('unauthorized');\n                    }\n                    this.emit('error');\n                    reject(error.error);\n                });\n        });\n\n        ee(promise); // jshint ignore:line\n\n        return promise;\n    }\n\n    universalBtoa(stringToConvert: string) {\n        try {\n            return btoa(stringToConvert);\n        } catch (err) {\n            return Buffer.from(stringToConvert).toString('base64');\n        }\n    }\n\n    /**\n     * Set the current Token\n     * */\n    setToken(token: string, refreshToken: string) {\n        this.authentications.oauth2.accessToken = token;\n        this.authentications.oauth2.refreshToken = refreshToken;\n        this.authentications.basicAuth.password = null;\n        this.token = token;\n\n        if (token) {\n            this.emit('token_issued');\n            this.emit('logged-in');\n        }\n    }\n\n    /**\n     * Get the current Token\n     *\n     * */\n    getToken(): string {\n        return this.token;\n    }\n\n    /**\n     * return the Authentication\n     *\n     * @returns {Object} authentications\n     * */\n    getAuthentication(): Authentication {\n        return this.authentications;\n    }\n\n    /**\n     * Change the Host\n     * */\n    changeHost(host: string) {\n        this.config.hostOauth2 = host;\n    }\n\n    /**\n     * If the client is logged in return true\n     *\n     * @returns {Boolean} is logged in\n     */\n    isLoggedIn(): boolean {\n        return !!this.authentications.oauth2.accessToken;\n    }\n\n    /**\n     * Logout\n     **/\n    async logOut() {\n        this.checkAccessToken = true;\n\n        const id_token = this.getIdToken();\n\n        this.invalidateSession();\n\n        this.setToken(null, null);\n\n        let separation = this.discovery.logoutUrl.indexOf('?') > -1 ? '&' : '?';\n\n        let redirectLogout = this.config.oauth2.redirectUriLogout || this.config.oauth2.redirectUri;\n\n        let logoutUrl = this.discovery.logoutUrl +\n            separation +\n            'post_logout_redirect_uri=' +\n            encodeURIComponent(redirectLogout) +\n            '&id_token_hint=' +\n            encodeURIComponent(id_token);\n\n        if (id_token != null && this.config.oauth2.implicitFlow && typeof window !== 'undefined') {\n            window.location.href = logoutUrl;\n        }\n\n    }\n\n    invalidateSession() {\n        clearTimeout(this.refreshTokenTimeoutIframe);\n        clearInterval(this.refreshTokenIntervalPolling);\n\n        this.storage.removeItem('access_token');\n        this.storage.removeItem('access_token_expires_in');\n        this.storage.removeItem('access_token_stored_at');\n\n        this.storage.removeItem('id_token');\n        this.storage.removeItem('id_token');\n        this.storage.removeItem('id_token_claims_obj');\n        this.storage.removeItem('id_token_expires_at');\n        this.storage.removeItem('id_token_stored_at');\n\n        this.storage.removeItem('nonce');\n    }\n\n    exchangeTicketListener(alfrescoApi: AlfrescoApi) {\n        this.on('token_issued', async () => {\n            const authContentApi: AuthenticationApi = new AuthenticationApi(alfrescoApi);\n            authContentApi.apiClient.authentications = this.authentications;\n            try {\n                const ticketEntry = await authContentApi.getTicket();\n                this.config.ticketEcm = ticketEntry.entry.id;\n                this.emit('ticket_exchanged');\n            } catch (e) {\n                // continue regardless of error\n            }\n        });\n    }\n}\n"]}
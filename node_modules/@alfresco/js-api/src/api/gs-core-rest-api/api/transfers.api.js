"use strict";
/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransfersApi = void 0;
const transferAssociationPaging_1 = require("../model/transferAssociationPaging");
const transferEntry_1 = require("../model/transferEntry");
const base_api_1 = require("./base.api");
const alfrescoApiClient_1 = require("../../../alfrescoApiClient");
const assert_1 = require("../../../assert");
class TransfersApi extends base_api_1.BaseApi {
    getTransfer(transferId, opts) {
        (0, assert_1.throwIfNotDefined)(transferId, 'transferId');
        opts = opts || {};
        let postBody = null;
        let pathParams = {
            'transferId': transferId
        };
        let queryParams = {
            'include': (0, alfrescoApiClient_1.buildCollectionParam)(opts['include'], 'csv'),
            'fields': (0, alfrescoApiClient_1.buildCollectionParam)(opts['fields'], 'csv')
        };
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/transfers/{transferId}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, transferEntry_1.TransferEntry);
    }
    listTransfersChildren(transferId, opts) {
        (0, assert_1.throwIfNotDefined)(transferId, 'transferId');
        opts = opts || {};
        let postBody = null;
        let pathParams = {
            'transferId': transferId
        };
        let queryParams = {
            'skipCount': opts['skipCount'],
            'maxItems': opts['maxItems'],
            'include': (0, alfrescoApiClient_1.buildCollectionParam)(opts['include'], 'csv'),
            'includeSource': opts['includeSource'],
            'fields': (0, alfrescoApiClient_1.buildCollectionParam)(opts['fields'], 'csv')
        };
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/transfers/{transferId}/children', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, transferAssociationPaging_1.TransferAssociationPaging);
    }
}
exports.TransfersApi = TransfersApi;
//# sourceMappingURL=../../../../../src/api/gs-core-rest-api/api/transfers.api.js.map
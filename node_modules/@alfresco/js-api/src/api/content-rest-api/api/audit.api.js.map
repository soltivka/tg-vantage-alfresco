{"version":3,"file":"audit.api.js","sourceRoot":"","sources":["audit.api.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { AuditApp } from '../model/auditApp';\nimport { AuditAppPaging } from '../model/auditAppPaging';\nimport { AuditBodyUpdate } from '../model/auditBodyUpdate';\nimport { AuditEntryEntry } from '../model/auditEntryEntry';\nimport { AuditEntryPaging } from '../model/auditEntryPaging';\nimport { BaseApi } from './base.api';\nimport { throwIfNotDefined } from '../../../assert';\nimport { buildCollectionParam } from '../../../alfrescoApiClient';\n\n/**\n* Audit service.\n* @module AuditApi\n*/\nexport class AuditApi extends BaseApi {\n    /**\n    * Permanently delete audit entries for an audit application\n    *\n    * **Note:** this endpoint is available in Alfresco 5.2.2 and newer versions.\n\nPermanently delete audit entries for an audit application **auditApplicationId**.\n\nThe **where** clause must be specified, either with an inclusive time period or for\nan inclusive range of ids. The delete is within the context of the given audit application.\n\nFor example:\n\n*   where=(createdAt BETWEEN ('2017-06-02T12:13:51.593+01:00' , '2017-06-04T10:05:16.536+01:00')\n*   where=(id BETWEEN ('1234', '4321')\n\nYou must have admin rights to delete audit information.\n\n    *\n    * @param auditApplicationId The identifier of an audit application.\n    * @param where Audit entries to permanently delete for an audit application, given an inclusive time period or range of ids. For example:\n\n*   where=(createdAt BETWEEN ('2017-06-02T12:13:51.593+01:00' , '2017-06-04T10:05:16.536+01:00')\n*   where=(id BETWEEN ('1234', '4321')\n\n    * @return Promise<{}>\n    */\n    deleteAuditEntriesForAuditApp(auditApplicationId: string, where: string): Promise<any> {\n\n        throwIfNotDefined(auditApplicationId, 'auditApplicationId');\n        throwIfNotDefined(where, 'where');\n\n        const postBody: null = null;\n\n        const pathParams = {\n            'auditApplicationId': auditApplicationId\n        };\n\n        const queryParams = {\n            'where': where\n        };\n\n        const headerParams = {\n\n        };\n        const formParams = {\n        };\n\n        const contentTypes = ['application/json'];\n        const accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/audit-applications/{auditApplicationId}/audit-entries', 'DELETE',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts );\n    }\n/**\n    * Permanently delete an audit entry\n    *\n    * **Note:** this endpoint is available in Alfresco 5.2.2 and newer versions.\n\nPermanently delete a single audit entry **auditEntryId**.\n\nYou must have admin rights to delete audit information.\n\n    *\n    * @param auditApplicationId The identifier of an audit application.\n    * @param auditEntryId The identifier of an audit entry.\n    * @return Promise<{}>\n    */\n    deleteAuditEntry(auditApplicationId: string, auditEntryId: string): Promise<any> {\n\n        throwIfNotDefined(auditApplicationId, 'auditApplicationId');\n        throwIfNotDefined(auditEntryId, 'auditEntryId');\n\n        const postBody: null = null;\n\n        const pathParams = {\n            'auditApplicationId': auditApplicationId,            'auditEntryId': auditEntryId\n        };\n\n        const queryParams = {\n        };\n\n        const headerParams = {\n\n        };\n        const formParams = {\n        };\n\n        const contentTypes = ['application/json'];\n        const accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/audit-applications/{auditApplicationId}/audit-entries/{auditEntryId}', 'DELETE',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts );\n    }\n/**\n    * Get audit application info\n    *\n    * **Note:** this endpoint is available in Alfresco 5.2.2 and newer versions.\n\nGet status of an audit application **auditApplicationId**.\n\nYou must have admin rights to retrieve audit information.\n\nYou can use the **include** parameter to return the minimum and/or maximum audit record id for the application.\n\n    *\n    * @param auditApplicationId The identifier of an audit application.\n    * @param opts Optional parameters\n    * @param opts.fields A list of field names.\n\nYou can use this parameter to restrict the fields\nreturned within a response if, for example, you want to save on overall bandwidth.\n\nThe list applies to a returned individual\nentity or entries within a collection.\n\nIf the API method also supports the **include**\nparameter, then the fields specified in the **include**\nparameter are returned in addition to those specified in the **fields** parameter.\n\n    * @param opts.include Also include the current minimum and/or maximum audit entry ids for the application. The following optional fields can be requested:\n* max\n* min\n\n    * @return Promise<AuditApp>\n    */\n    getAuditApp(auditApplicationId: string, opts?: any): Promise<AuditApp> {\n\n        throwIfNotDefined(auditApplicationId, 'auditApplicationId');\n\n        opts = opts || {};\n        const postBody: null = null;\n\n        const pathParams = {\n            'auditApplicationId': auditApplicationId\n        };\n\n        const queryParams = {\n            'fields': buildCollectionParam(opts['fields'], 'csv'),\n            'include': buildCollectionParam(opts['include'], 'csv')\n        };\n\n        const headerParams = {\n\n        };\n        const formParams = {\n        };\n\n        const contentTypes = ['application/json'];\n        const accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/audit-applications/{auditApplicationId}', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts , AuditApp);\n    }\n/**\n    * Get audit entry\n    *\n    * **Note:** this endpoint is available in Alfresco 5.2.2 and newer versions.\n\nGets audit entry **auditEntryId**.\n\nYou must have admin rights to access audit information.\n\n    *\n    * @param auditApplicationId The identifier of an audit application.\n    * @param auditEntryId The identifier of an audit entry.\n    * @param opts Optional parameters\n    * @param opts.fields A list of field names.\n\nYou can use this parameter to restrict the fields\nreturned within a response if, for example, you want to save on overall bandwidth.\n\nThe list applies to a returned individual\nentity or entries within a collection.\n\nIf the API method also supports the **include**\nparameter, then the fields specified in the **include**\nparameter are returned in addition to those specified in the **fields** parameter.\n\n    * @return Promise<AuditEntryEntry>\n    */\n    getAuditEntry(auditApplicationId: string, auditEntryId: string, opts?: any): Promise<AuditEntryEntry> {\n\n        throwIfNotDefined(auditApplicationId, 'auditApplicationId');\n        throwIfNotDefined(auditEntryId, 'auditEntryId');\n\n        opts = opts || {};\n        const postBody: null = null;\n\n        const pathParams = {\n            'auditApplicationId': auditApplicationId,            'auditEntryId': auditEntryId\n        };\n\n        const queryParams = {\n            'fields': buildCollectionParam(opts['fields'], 'csv')\n        };\n\n        const headerParams = {\n\n        };\n        const formParams = {\n        };\n\n        const contentTypes = ['application/json'];\n        const accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/audit-applications/{auditApplicationId}/audit-entries/{auditEntryId}', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts , AuditEntryEntry);\n    }\n/**\n    * List audit applications\n    *\n    * **Note:** this endpoint is available in Alfresco 5.2.2 and newer versions.\n\nGets a list of audit applications in this repository.\n\nThis list may include pre-configured audit applications, if enabled, such as:\n\n* alfresco-access\n* CMISChangeLog\n* Alfresco Tagging Service\n* Alfresco Sync Service (used by Enterprise Cloud Sync)\n\nYou must have admin rights to retrieve audit information.\n\n    *\n    * @param opts Optional parameters\n    * @param opts.skipCount The number of entities that exist in the collection before those included in this list.\nIf not supplied then the default value is 0.\n (default to 0)\n    * @param opts.maxItems The maximum number of items to return in the list.\nIf not supplied then the default value is 100.\n (default to 100)\n    * @param opts.fields A list of field names.\n\nYou can use this parameter to restrict the fields\nreturned within a response if, for example, you want to save on overall bandwidth.\n\nThe list applies to a returned individual\nentity or entries within a collection.\n\nIf the API method also supports the **include**\nparameter, then the fields specified in the **include**\nparameter are returned in addition to those specified in the **fields** parameter.\n\n    * @return Promise<AuditAppPaging>\n    */\n    listAuditApps(opts?: any): Promise<AuditAppPaging> {\n\n        opts = opts || {};\n        const postBody: null = null;\n\n        const pathParams = {\n\n        };\n\n        const queryParams = {\n            'skipCount': opts['skipCount'],\n            'maxItems': opts['maxItems'],\n            'fields': buildCollectionParam(opts['fields'], 'csv')\n        };\n\n        const headerParams = {\n\n        };\n        const formParams = {\n        };\n\n        const contentTypes = ['application/json'];\n        const accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/audit-applications', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts , AuditAppPaging);\n    }\n/**\n    * List audit entries for an audit application\n    *\n    * **Note:** this endpoint is available in Alfresco 5.2.2 and newer versions.\n\nGets a list of audit entries for audit application **auditApplicationId**.\n\nYou can use the **include** parameter to return additional **values** information.\n\nThe list can be filtered by one or more of:\n* **createdByUser** person id\n* **createdAt** inclusive time period\n* **id** inclusive range of ids\n* **valuesKey** audit entry values contains the exact matching key\n* **valuesValue** audit entry values contains the exact matching value\n\nThe default sort order is **createdAt** ascending, but you can use an optional **ASC** or **DESC**\nmodifier to specify an ascending or descending sort order.\n\nFor example, specifying orderBy=createdAt DESC returns audit entries in descending **createdAt** order.\n\nYou must have admin rights to retrieve audit information.\n\n    *\n    * @param auditApplicationId The identifier of an audit application.\n    * @param opts Optional parameters\n    * @param opts.skipCount The number of entities that exist in the collection before those included in this list.\nIf not supplied then the default value is 0.\n (default to 0)\n    * @param opts.orderBy A string to control the order of the entities returned in a list. You can use the **orderBy** parameter to\nsort the list by one or more fields.\n\nEach field has a default sort order, which is normally ascending order. Read the API method implementation notes\nabove to check if any fields used in this method have a descending default search order.\n\nTo sort the entities in a specific order, you can use the **ASC** and **DESC** keywords for any field.\n\n    * @param opts.maxItems The maximum number of items to return in the list.\nIf not supplied then the default value is 100.\n (default to 100)\n    * @param opts.where Optionally filter the list. Here are some examples:\n\n*   where=(createdByUser='jbloggs')\n\n*   where=(id BETWEEN ('1234', '4321')\n\n*   where=(createdAt BETWEEN ('2017-06-02T12:13:51.593+01:00' , '2017-06-04T10:05:16.536+01:00')\n\n*   where=(createdByUser='jbloggs' and createdAt BETWEEN ('2017-06-02T12:13:51.593+01:00' , '2017-06-04T10:05:16.536+01:00')\n\n*   where=(valuesKey='/alfresco-access/login/user')\n\n*   where=(valuesKey='/alfresco-access/transaction/action' and valuesValue='DELETE')\n\n    * @param opts.include Returns additional information about the audit entry. The following optional fields can be requested:\n* values\n\n    * @param opts.fields A list of field names.\n\nYou can use this parameter to restrict the fields\nreturned within a response if, for example, you want to save on overall bandwidth.\n\nThe list applies to a returned individual\nentity or entries within a collection.\n\nIf the API method also supports the **include**\nparameter, then the fields specified in the **include**\nparameter are returned in addition to those specified in the **fields** parameter.\n\n    * @return Promise<AuditEntryPaging>\n    */\n    listAuditEntriesForAuditApp(auditApplicationId: string, opts?: any): Promise<AuditEntryPaging> {\n\n        throwIfNotDefined(auditApplicationId, 'auditApplicationId');\n\n        opts = opts || {};\n        const postBody: null = null;\n\n        const pathParams = {\n            'auditApplicationId': auditApplicationId\n        };\n\n        const queryParams = {\n            'skipCount': opts['skipCount'],\n            'orderBy': buildCollectionParam(opts['orderBy'], 'csv'),\n            'maxItems': opts['maxItems'],\n            'where': opts['where'],\n            'include': buildCollectionParam(opts['include'], 'csv'),\n            'fields': buildCollectionParam(opts['fields'], 'csv')\n        };\n\n        const headerParams = {\n\n        };\n        const formParams = {\n        };\n\n        const contentTypes = ['application/json'];\n        const accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/audit-applications/{auditApplicationId}/audit-entries', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts , AuditEntryPaging);\n    }\n/**\n    * List audit entries for a node\n    *\n    * **Note:** this endpoint is available in Alfresco 5.2.2 and newer versions.\n\nGets a list of audit entries for node **nodeId**.\n\nThe list can be filtered by **createdByUser** and for a given inclusive time period.\n\nThe default sort order is **createdAt** ascending, but you can use an optional **ASC** or **DESC**\nmodifier to specify an ascending or descending sort order.\n\nFor example, specifying orderBy=createdAt DESC returns audit entries in descending **createdAt** order.\n\nThis relies on the pre-configured 'alfresco-access' audit application.\n\n    *\n    * @param nodeId The identifier of a node.\n    * @param opts Optional parameters\n    * @param opts.skipCount The number of entities that exist in the collection before those included in this list.\nIf not supplied then the default value is 0.\n (default to 0)\n    * @param opts.orderBy A string to control the order of the entities returned in a list. You can use the **orderBy** parameter to\nsort the list by one or more fields.\n\nEach field has a default sort order, which is normally ascending order. Read the API method implementation notes\nabove to check if any fields used in this method have a descending default search order.\n\nTo sort the entities in a specific order, you can use the **ASC** and **DESC** keywords for any field.\n\n    * @param opts.maxItems The maximum number of items to return in the list.\nIf not supplied then the default value is 100.\n (default to 100)\n    * @param opts.where Optionally filter the list. Here are some examples:\n\n*   where=(createdByUser='-me-')\n\n*   where=(createdAt BETWEEN ('2017-06-02T12:13:51.593+01:00' , '2017-06-04T10:05:16.536+01:00')\n\n*   where=(createdByUser='jbloggs' and createdAt BETWEEN ('2017-06-02T12:13:51.593+01:00' , '2017-06-04T10:05:16.536+01:00')\n\n    * @param opts.include Returns additional information about the audit entry. The following optional fields can be requested:\n* values\n\n    * @param opts.fields A list of field names.\n\nYou can use this parameter to restrict the fields\nreturned within a response if, for example, you want to save on overall bandwidth.\n\nThe list applies to a returned individual\nentity or entries within a collection.\n\nIf the API method also supports the **include**\nparameter, then the fields specified in the **include**\nparameter are returned in addition to those specified in the **fields** parameter.\n\n    * @return Promise<AuditEntryPaging>\n    */\n    listAuditEntriesForNode(nodeId: string, opts?: any): Promise<AuditEntryPaging> {\n\n        throwIfNotDefined(nodeId, 'nodeId');\n\n        opts = opts || {};\n        const postBody: null = null;\n\n        const pathParams = {\n            'nodeId': nodeId\n        };\n\n        const queryParams = {\n            'skipCount': opts['skipCount'],\n            'orderBy': buildCollectionParam(opts['orderBy'], 'csv'),\n            'maxItems': opts['maxItems'],\n            'where': opts['where'],\n            'include': buildCollectionParam(opts['include'], 'csv'),\n            'fields': buildCollectionParam(opts['fields'], 'csv')\n        };\n\n        const headerParams = {\n\n        };\n        const formParams = {\n        };\n\n        const contentTypes = ['application/json'];\n        const accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/nodes/{nodeId}/audit-entries', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts , AuditEntryPaging);\n    }\n/**\n    * Update audit application info\n    *\n    * **Note:** this endpoint is available in Alfresco 5.2.2 and newer versions.\n\nDisable or re-enable the audit application **auditApplicationId**.\n\nNew audit entries will not be created for a disabled audit application until\nit is re-enabled (and system-wide auditing is also enabled).\n\nNote, it is still possible to query &/or delete any existing audit entries even\nif auditing is disabled for the audit application.\n\nYou must have admin rights to update audit application.\n\n    *\n    * @param auditApplicationId The identifier of an audit application.\n    * @param auditAppBodyUpdate The audit application to update.\n    * @param opts Optional parameters\n    * @param opts.fields A list of field names.\n\nYou can use this parameter to restrict the fields\nreturned within a response if, for example, you want to save on overall bandwidth.\n\nThe list applies to a returned individual\nentity or entries within a collection.\n\nIf the API method also supports the **include**\nparameter, then the fields specified in the **include**\nparameter are returned in addition to those specified in the **fields** parameter.\n\n    * @return Promise<AuditApp>\n    */\n    updateAuditApp(auditApplicationId: string, auditAppBodyUpdate: AuditBodyUpdate, opts?: any): Promise<AuditApp> {\n\n        throwIfNotDefined(auditApplicationId, 'auditApplicationId');\n        throwIfNotDefined(auditAppBodyUpdate, 'auditAppBodyUpdate');\n\n        opts = opts || {};\n        const postBody = auditAppBodyUpdate;\n\n        const pathParams = {\n            'auditApplicationId': auditApplicationId\n        };\n\n        const queryParams = {\n            'fields': buildCollectionParam(opts['fields'], 'csv')\n        };\n\n        const headerParams = {\n\n        };\n        const formParams = {\n        };\n\n        const contentTypes = ['application/json'];\n        const accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/audit-applications/{auditApplicationId}', 'PUT',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts , AuditApp);\n    }\n\n}\n"]}
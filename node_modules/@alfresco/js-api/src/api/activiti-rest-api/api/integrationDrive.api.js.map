{"version":3,"file":"integrationDrive.api.js","sourceRoot":"","sources":["integrationDrive.api.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;EAeE;;;AAEF,4HAAyH;AACzH,yCAAqC;AAMrC,MAAa,mBAAoB,SAAQ,kBAAO;IAQ5C,oBAAoB;QAEhB,IAAI,QAAQ,GAAG,IAAI,CAAC;QAEpB,IAAI,UAAU,GAAG,EAEhB,CAAC;QAEF,IAAI,WAAW,GAAG,EACjB,CAAC;QAEF,IAAI,YAAY,GAAG,EAElB,CAAC;QACF,IAAI,UAAU,GAAG,EAChB,CAAC;QAEF,IAAI,YAAY,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,CAAC,WAAW,CAAC,CAAC;QAE5B,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,+DAA+D,EAAE,KAAK,EACtE,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAC3D,YAAY,EAAE,OAAO,CAAC,CAAC;IAC/B,CAAC;IAYD,QAAQ,CAAC,IAAU;QACf,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAClB,IAAI,QAAQ,GAAG,IAAI,CAAC;QAEpB,IAAI,UAAU,GAAG,EAEhB,CAAC;QAEF,IAAI,WAAW,GAAG;YACd,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC;YACxB,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC;YACxB,mBAAmB,EAAE,IAAI,CAAC,mBAAmB,CAAC;SACjD,CAAC;QAEF,IAAI,YAAY,GAAG,EAElB,CAAC;QACF,IAAI,UAAU,GAAG,EAChB,CAAC;QAEF,IAAI,YAAY,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAEnC,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,gDAAgD,EAAE,KAAK,EACvD,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAC3D,YAAY,EAAE,OAAO,EAAE,+FAA8C,CAAC,CAAC;IAC/E,CAAC;CAEJ;AAzED,kDAyEC","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { ResultListDataRepresentationGoogleDriveContent } from '../model/resultListDataRepresentationGoogleDriveContent';\nimport { BaseApi } from './base.api';\n\n/**\n* Integrationdrive service.\n* @module IntegrationdriveApi\n*/\nexport class IntegrationDriveApi extends BaseApi {\n    /**\n    * Drive Authorization\n    *\n    * Returns Drive OAuth HTML Page\n    *\n    * @return Promise<{}>\n    */\n    confirmAuthorisation(): Promise<any> {\n\n        let postBody = null;\n\n        let pathParams = {\n\n        };\n\n        let queryParams = {\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['text/html'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/integration/google-drive/confirm-auth-request', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts);\n    }\n    /**\n        * List files and folders\n        *\n        *\n        *\n        * @param opts Optional parameters\n        * @param opts.filter filter\n        * @param opts.parent parent\n        * @param opts.currentFolderOnly currentFolderOnly\n        * @return Promise<ResultListDataRepresentationGoogleDriveContent>\n        */\n    getFiles(opts?: any): Promise<ResultListDataRepresentationGoogleDriveContent> {\n        opts = opts || {};\n        let postBody = null;\n\n        let pathParams = {\n\n        };\n\n        let queryParams = {\n            'filter': opts['filter'],\n            'parent': opts['parent'],\n            'currentFolderOnly': opts['currentFolderOnly']\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/integration/google-drive/files', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, ResultListDataRepresentationGoogleDriveContent);\n    }\n\n}\n"]}
{"version":3,"file":"appDefinitions.api.js","sourceRoot":"","sources":["appDefinitions.api.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { AppDefinitionPublishRepresentation } from '../model/appDefinitionPublishRepresentation';\nimport { AppDefinitionRepresentation } from '../model/appDefinitionRepresentation';\nimport { AppDefinitionSaveRepresentation } from '../model/appDefinitionSaveRepresentation';\nimport { AppDefinitionUpdateResultRepresentation } from '../model/appDefinitionUpdateResultRepresentation';\nimport { BaseApi } from './base.api';\nimport { throwIfNotDefined } from '../../../assert';\n\n/**\n * Appdefinitions service.\n * @module AppdefinitionsApi\n */\nexport class AppDefinitionsApi extends BaseApi {\n    /**\n     * deleteAppDefinition\n     *\n     *\n     *\n     * @param appDefinitionId appDefinitionId\n     * @return Promise<{}>\n     */\n    deleteAppDefinition(appDefinitionId: number): Promise<any> {\n        throwIfNotDefined(appDefinitionId, 'appDefinitionId');\n\n        let postBody = null;\n\n        let pathParams = {\n            'appDefinitionId': appDefinitionId\n        };\n\n        let queryParams = {};\n\n        let headerParams = {};\n        let formParams = {};\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/app-definitions/{appDefinitionId}', 'DELETE',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts);\n    }\n\n    /**\n     * Export an app definition\n     *\n     * This will return a zip file containing the app definition model and all related models (process definitions and forms).\n     *\n     * @param modelId modelId from a runtime app or the id of an app definition model\n     * @return Promise<{}>\n     */\n    exportAppDefinition(modelId: number): Promise<any> {\n        throwIfNotDefined(modelId, 'modelId');\n\n        let postBody = null;\n\n        let pathParams = {\n            'modelId': modelId\n        };\n\n        let queryParams = {};\n\n        let headerParams = {};\n        let formParams = {};\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json', 'application/zip'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/app-definitions/{modelId}/export', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts);\n    }\n\n    /**\n     * Get an app definition\n     *\n     *\n     *\n     * @param modelId Application definition ID\n     * @return Promise<AppDefinitionRepresentation>\n     */\n    getAppDefinition(modelId: number): Promise<AppDefinitionRepresentation> {\n        throwIfNotDefined(modelId, 'modelId');\n\n        let postBody = null;\n\n        let pathParams = {\n            'modelId': modelId\n        };\n\n        let queryParams = {};\n\n        let headerParams = {};\n        let formParams = {};\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/app-definitions/{modelId}', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, AppDefinitionRepresentation);\n    }\n\n    /**\n     * importAndPublishApp\n     *\n     *\n     *\n     * @param file file\n     * @return Promise<AppDefinitionUpdateResultRepresentation>\n     */\n    importAndPublishApp(file: any, opts?: any): Promise<AppDefinitionUpdateResultRepresentation> {\n        throwIfNotDefined(file, 'file');\n\n        opts = opts || {};\n        let postBody = null;\n        let pathParams = {};\n        let queryParams = {\n            'renewIdmEntries': opts['renewIdmEntries']\n        };\n        let headerParams = {};\n        let formParams = {\n            'file': file\n        };\n\n        let contentTypes = ['multipart/form-data'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/app-definitions/publish-app', 'POST',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, AppDefinitionUpdateResultRepresentation);\n    }\n\n    /**\n     * Import a new app definition\n     *\n     * Allows a zip file to be uploaded containing an app definition and any number of included models.<p>This is useful to bootstrap an environment (for users or continuous integration).<p>Before using any processes included in the import the app must be published and deployed.\n     *\n     * @param file file\n     * @param opts Optional parameters\n     * @param opts.renewIdmEntries Whether to renew user and group identifiers (default to false)\n     * @return Promise<AppDefinitionRepresentation>\n     */\n    importAppDefinition(file: any, opts?: any): Promise<AppDefinitionRepresentation> {\n        throwIfNotDefined(file, 'file');\n\n        opts = opts || {};\n        let postBody = null;\n\n        let pathParams = {};\n\n        let queryParams = {\n            'renewIdmEntries': opts['renewIdmEntries']\n        };\n\n        let headerParams = {};\n        let formParams = {\n            'file': file\n        };\n\n        let contentTypes = ['multipart/form-data'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/app-definitions/import', 'POST',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, AppDefinitionRepresentation);\n    }\n\n    /**\n     * Publish an app definition\n     *\n     * Publishing an app definition makes it available for use. The application must not have any validation errors or an error will be returned.<p>Before an app definition can be used by other users, it must also be deployed for their use\n     *\n     * @param modelId modelId\n     * @param publishModel publishModel\n     * @return Promise<AppDefinitionUpdateResultRepresentation>\n     */\n    publishAppDefinition(modelId: number, publishModel: AppDefinitionPublishRepresentation): Promise<AppDefinitionUpdateResultRepresentation> {\n        throwIfNotDefined(modelId, 'modelId');\n        throwIfNotDefined(publishModel, 'publishModel');\n\n        let postBody = publishModel;\n\n        let pathParams = {\n            'modelId': modelId\n        };\n\n        let queryParams = {};\n\n        let headerParams = {};\n        let formParams = {};\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/app-definitions/{modelId}/publish', 'POST',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, AppDefinitionUpdateResultRepresentation);\n    }\n\n    /**\n     * Update an app definition\n     *\n     *\n     *\n     * @param modelId Application definition ID\n     * @param updatedModel updatedModel |\n     * @return Promise<AppDefinitionUpdateResultRepresentation>\n     */\n    updateAppDefinition(modelId: number, updatedModel: AppDefinitionSaveRepresentation | any): Promise<any> {\n        throwIfNotDefined(modelId, 'modelId');\n        throwIfNotDefined(updatedModel, 'updatedModel');\n\n        let postBody = updatedModel;\n\n        let pathParams = {\n            'modelId': modelId\n        };\n\n        let queryParams = {};\n\n        let headerParams = {};\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        if (!updatedModel['appDefinition']) {\n            contentTypes = ['multipart/form-data'];\n\n            let formParams = {\n                'file': updatedModel\n            };\n\n            return this.apiClient.callApi(\n                '/api/enterprise/app-definitions/{modelId}/import', 'POST',\n                pathParams, queryParams, headerParams, formParams, postBody,\n                contentTypes, accepts);\n        } else {\n            let formParams = {};\n\n            return this.apiClient.callApi(\n                '/api/enterprise/app-definitions/{modelId}', 'PUT',\n                pathParams, queryParams, headerParams, formParams, postBody,\n                contentTypes, accepts);\n        }\n\n    }\n}\n"]}
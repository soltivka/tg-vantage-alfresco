"use strict";
/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubmittedFormsApi = void 0;
const resultListDataRepresentationSubmittedFormRepresentation_1 = require("../model/resultListDataRepresentationSubmittedFormRepresentation");
const submittedFormRepresentation_1 = require("../model/submittedFormRepresentation");
const base_api_1 = require("./base.api");
const assert_1 = require("../../../assert");
class SubmittedFormsApi extends base_api_1.BaseApi {
    getFormSubmittedForms(formId, opts) {
        (0, assert_1.throwIfNotDefined)(formId, 'formId');
        opts = opts || {};
        let postBody = null;
        let pathParams = {
            'formId': formId
        };
        let queryParams = {
            'submittedBy': opts['submittedBy'],
            'start': opts['start'],
            'size': opts['size']
        };
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/form-submitted-forms/{formId}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, resultListDataRepresentationSubmittedFormRepresentation_1.ResultListDataRepresentationSubmittedFormRepresentation);
    }
    getProcessSubmittedForms(processId) {
        (0, assert_1.throwIfNotDefined)(processId, 'processId');
        let postBody = null;
        let pathParams = {
            'processId': processId
        };
        let queryParams = {};
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/process-submitted-forms/{processId}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, resultListDataRepresentationSubmittedFormRepresentation_1.ResultListDataRepresentationSubmittedFormRepresentation);
    }
    getSubmittedFrom(submittedFormId) {
        (0, assert_1.throwIfNotDefined)(submittedFormId, 'submittedFormId');
        let postBody = null;
        let pathParams = {
            'submittedFormId': submittedFormId
        };
        let queryParams = {};
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/submitted-forms/{submittedFormId}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, submittedFormRepresentation_1.SubmittedFormRepresentation);
    }
    getTaskSubmittedForms(taskId) {
        (0, assert_1.throwIfNotDefined)(taskId, 'taskId');
        let postBody = null;
        let pathParams = {
            'taskId': taskId
        };
        let queryParams = {};
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/task-submitted-form/{taskId}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, submittedFormRepresentation_1.SubmittedFormRepresentation);
    }
}
exports.SubmittedFormsApi = SubmittedFormsApi;
//# sourceMappingURL=../../../../../src/api/activiti-rest-api/api/submittedForms.api.js.map
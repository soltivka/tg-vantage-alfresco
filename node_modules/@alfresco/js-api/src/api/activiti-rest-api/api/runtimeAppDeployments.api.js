"use strict";
/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.RuntimeAppDeploymentsApi = void 0;
const appDeploymentRepresentation_1 = require("../model/appDeploymentRepresentation");
const resultListDataRepresentationAppDeploymentRepresentation_1 = require("../model/resultListDataRepresentationAppDeploymentRepresentation");
const base_api_1 = require("./base.api");
const assert_1 = require("../../../assert");
class RuntimeAppDeploymentsApi extends base_api_1.BaseApi {
    deleteAppDeployment(appDeploymentId) {
        (0, assert_1.throwIfNotDefined)(appDeploymentId, 'appDeploymentId');
        let postBody = null;
        let pathParams = {
            'appDeploymentId': appDeploymentId
        };
        let queryParams = {};
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/runtime-app-deployments/{appDeploymentId}', 'DELETE', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    }
    exportAppDefinition(deploymentId) {
        (0, assert_1.throwIfNotDefined)(deploymentId, 'deploymentId');
        let postBody = null;
        let pathParams = {
            'deploymentId': deploymentId
        };
        let queryParams = {};
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/zip'];
        return this.apiClient.callApi('/api/enterprise/export-app-deployment/{deploymentId}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    }
    getAppDefinitions(opts) {
        opts = opts || {};
        let postBody = null;
        let pathParams = {};
        let queryParams = {
            'nameLike': opts['nameLike'],
            'tenantId': opts['tenantId'],
            'latest': opts['latest'],
            'start': opts['start'],
            'sort': opts['sort'],
            'order': opts['order'],
            'size': opts['size']
        };
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/runtime-app-deployments', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, resultListDataRepresentationAppDeploymentRepresentation_1.ResultListDataRepresentationAppDeploymentRepresentation);
    }
    getAppDeployment(appDeploymentId) {
        (0, assert_1.throwIfNotDefined)(appDeploymentId, 'appDeploymentId');
        let postBody = null;
        let pathParams = {
            'appDeploymentId': appDeploymentId
        };
        let queryParams = {};
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/runtime-app-deployments/{appDeploymentId}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, appDeploymentRepresentation_1.AppDeploymentRepresentation);
    }
    getRuntimeAppDeploymentByDeployment(opts) {
        opts = opts || {};
        let postBody = null;
        let pathParams = {};
        let queryParams = {
            'deploymentId': opts['deploymentId'],
            'dmnDeploymentId': opts['dmnDeploymentId']
        };
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/runtime-app-deployment', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, appDeploymentRepresentation_1.AppDeploymentRepresentation);
    }
}
exports.RuntimeAppDeploymentsApi = RuntimeAppDeploymentsApi;
//# sourceMappingURL=../../../../../src/api/activiti-rest-api/api/runtimeAppDeployments.api.js.map
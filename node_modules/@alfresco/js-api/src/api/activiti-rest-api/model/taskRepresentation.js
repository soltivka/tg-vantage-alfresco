"use strict";
/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.TaskRepresentation = void 0;
const dateAlfresco_1 = require("../../content-custom-api/model/dateAlfresco");
const lightGroupRepresentation_1 = require("./lightGroupRepresentation");
const lightUserRepresentation_1 = require("./lightUserRepresentation");
const restVariable_1 = require("./restVariable");
class TaskRepresentation {
    constructor(input) {
        if (input) {
            Object.assign(this, input);
            this.assignee = input.assignee ? new lightUserRepresentation_1.LightUserRepresentation(input.assignee) : undefined;
            this.created = input.created ? dateAlfresco_1.DateAlfresco.parseDate(input.created) : undefined;
            this.dueDate = input.dueDate ? dateAlfresco_1.DateAlfresco.parseDate(input.dueDate) : undefined;
            this.endDate = input.endDate ? dateAlfresco_1.DateAlfresco.parseDate(input.endDate) : undefined;
            if (input.involvedGroups) {
                this.involvedGroups = input.involvedGroups.map((item) => {
                    return new lightGroupRepresentation_1.LightGroupRepresentation(item);
                });
            }
            if (input.involvedPeople) {
                this.involvedPeople = input.involvedPeople.map((item) => {
                    return new lightUserRepresentation_1.LightUserRepresentation(item);
                });
            }
            if (input.variables) {
                this.variables = input.variables.map((item) => {
                    return new restVariable_1.RestVariable(item);
                });
            }
        }
    }
    getFullName() {
        let fullName = '';
        if (this.assignee) {
            let firstName = this.assignee.firstName ? this.assignee.firstName : '';
            let lastName = this.assignee.lastName ? this.assignee.lastName : '';
            fullName = `${firstName} ${lastName}`;
        }
        return fullName.trim();
    }
    isCompleted() {
        return !!this.endDate;
    }
}
exports.TaskRepresentation = TaskRepresentation;
//# sourceMappingURL=../../../../../src/api/activiti-rest-api/model/taskRepresentation.js.map
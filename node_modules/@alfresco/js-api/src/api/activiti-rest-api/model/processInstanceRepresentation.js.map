{"version":3,"file":"processInstanceRepresentation.js","sourceRoot":"","sources":["processInstanceRepresentation.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;EAeE;;;AAEF,8EAA2E;AAC3E,uEAAoE;AACpE,iDAA8C;AAE9C,MAAa,6BAA6B;IAoBtC,YAAY,KAAW;QAEnB,IAAI,KAAK,EAAE;YACP,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,2BAAY,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAC3E,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,2BAAY,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACjF,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,iDAAuB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAC5F,IAAI,KAAK,CAAC,SAAS,EAAE;gBACjB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE;oBAC/C,OAAO,IAAI,2BAAY,CAAC,IAAI,CAAC,CAAC;gBAClC,CAAC,CAAC,CAAC;aACN;SACJ;IACL,CAAC;CAEJ;AAnCD,sEAmCC","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { DateAlfresco } from '../../content-custom-api/model/dateAlfresco';\nimport { LightUserRepresentation } from './lightUserRepresentation';\nimport { RestVariable } from './restVariable';\n\nexport class ProcessInstanceRepresentation {\n    businessKey?: string;\n    ended?: Date;\n    graphicalNotationDefined?: boolean;\n    id?: string;\n    name?: string;\n    processDefinitionCategory?: string;\n    processDefinitionDeploymentId?: string;\n    processDefinitionDescription?: string;\n    processDefinitionId?: string;\n    processDefinitionKey?: string;\n    processDefinitionName?: string;\n    processDefinitionVersion?: number;\n    startFormDefined?: boolean;\n    started?: Date;\n    startedBy?: LightUserRepresentation;\n    suspended?: boolean;\n    tenantId?: string;\n    variables?: RestVariable[];\n\n    constructor(input?: any) {\n\n        if (input) {\n            Object.assign(this, input);\n            this.ended = input.ended ? DateAlfresco.parseDate(input.ended) : undefined;\n            this.started = input.started ? DateAlfresco.parseDate(input.started) : undefined;\n            this.startedBy = input.startedBy ? new LightUserRepresentation(input.startedBy) : undefined;\n            if (input.variables) {\n                this.variables = input.variables.map((item: any) => {\n                    return new RestVariable(item);\n                });\n            }\n        }\n    }\n\n}\n"]}
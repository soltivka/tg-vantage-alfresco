{"version":3,"file":"classes.api.js","sourceRoot":"","sources":["classes.api.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;EAeE;;;AAEF,gEAA6D;AAC7D,yCAAqC;AAerC,MAAa,UAAW,SAAQ,kBAAO;IAAvC;;QAEY,SAAI,GAAW,cAAc,CAAC;IAmE1C,CAAC;IAnDG,QAAQ,CAAC,SAAiB,EAAE,IAAU;QAClC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAGlB,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;YAC/C,MAAM,uCAAuC,CAAC;SACjD;QAED,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,IAAI,UAAU,GAAG;YACb,WAAW,EAAE,SAAS;SACzB,CAAC;QACF,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,UAAU,GAAG,EAAE,CAAC;QAEpB,IAAI,YAAY,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAEnC,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAChC,IAAI,CAAC,IAAI,GAAG,cAAc,EAAE,KAAK,EACjC,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAC3D,YAAY,EAAE,OAAO,EAAE,mCAAgB,EAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAC3F,CAAC;IACN,CAAC;IAED,aAAa,CAAC,SAAiB,EAAE,IAAU;QACvC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAGlB,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;YAC/C,MAAM,2BAA2B,CAAC;SACrC;QAED,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,IAAI,UAAU,GAAG;YACb,WAAW,EAAE,SAAS;SACzB,CAAC;QACF,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,UAAU,GAAG,EAAE,CAAC;QAEpB,IAAI,YAAY,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAEnC,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAChC,GAAG,IAAI,CAAC,IAAI,yBAAyB,EAAE,KAAK,EAC5C,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAC3D,YAAY,EAAE,OAAO,EAAE,mCAAgB,EAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAC3F,CAAC;IACN,CAAC;CACJ;AArED,gCAqEC","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { ClassDescription } from '../model/classDescription';\nimport { BaseApi } from './base.api';\n\n/**\n * Classes service.\n * @module api/ClassesApi\n * @version 1.4.0\n */\n\n/**\n * Constructs a new ClassesApi.\n * @alias module:api/ClassesApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nexport class ClassesApi extends BaseApi {\n\n    private path: string = '/api/classes';\n\n    /**\n     * Function to receive the result of the getClass operation.\n     * @param {String} error Error message, if any.\n     * @param {module:model/ClassDescription} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Gets the class information for the specified className.\n     * @param {String} className The identifier of the class.\n     * @param {Object} opts Optional parameters\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ClassDescription}\n     * data is of type: {module:model/ClassDescription}\n     */\n    getClass(className: string, opts?: any): Promise<ClassDescription> {\n        opts = opts || {};\n\n        // verify the required parameter 'className' is set\n        if (className === undefined || className === null) {\n            throw \"Missing param 'className' in getClass\";\n        }\n\n        let postBody = null;\n        let pathParams = {\n            'className': className\n        };\n        let queryParams = {};\n        let headerParams = {};\n        let formParams = {};\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClientPrivate.callApi(\n            this.path + '/{className}', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, ClassDescription, this.apiClientPrivate.config.contextRoot + '/s'\n        );\n    }\n\n    getSubclasses(className: string, opts?: any): Promise<ClassDescription[]> {\n        opts = opts || {};\n\n        // verify the required parameter 'className' is set\n        if (className === undefined || className === null) {\n            throw \"Missing param 'className'\";\n        }\n\n        let postBody = null;\n        let pathParams = {\n            'className': className\n        };\n        let queryParams = {};\n        let headerParams = {};\n        let formParams = {};\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClientPrivate.callApi(\n            `${this.path}/{className}/subclasses`, 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, ClassDescription, this.apiClientPrivate.config.contextRoot + '/s'\n        );\n    }\n}\n"]}
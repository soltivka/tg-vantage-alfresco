{"version":3,"file":"requestHighlight.js","sourceRoot":"","sources":["requestHighlight.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;AAEF,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;AAOlE;IAkCI,0BAAY,KAAW;QAEnB,IAAI,KAAK,EAAE;YACP,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC3B,IAAI,KAAK,CAAC,MAAM,EAAE;gBACd,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,IAAS;oBACrC,OAAO,IAAI,sBAAsB,CAAC,IAAI,CAAC,CAAC;gBAC5C,CAAC,CAAC,CAAC;aACN;SACJ;IACL,CAAC;IAEL,uBAAC;AAAD,CAAC,AA9CD,IA8CC","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { RequestHighlightFields } from './requestHighlightFields';\n\n/**\n * Request that highlight fragments to be added to result set rows\nThe properties reflect SOLR highlighting parameters.\n\n */\nexport class RequestHighlight {\n    /**\n     * The string used to mark the start of a highlight in a fragment.\n     */\n    prefix?: string;\n    /**\n     * The string used to mark the end of a highlight in a fragment.\n     */\n    postfix?: string;\n    /**\n     * The maximum number of distinct highlight snippets to return for each highlight field.\n     */\n    snippetCount?: number;\n    /**\n     * The character length of each snippet.\n     */\n    fragmentSize?: number;\n    /**\n     * The number of characters to be considered for highlighting. Matches after this count will not be shown.\n     */\n    maxAnalyzedChars?: number;\n    /**\n     * If fragments over lap they can be  merged into one larger fragment\n     */\n    mergeContiguous?: boolean;\n    /**\n     * Should phrases be identified.\n     */\n    usePhraseHighlighter?: boolean;\n    /**\n     * The fields to highlight and field specific configuration properties for each field\n     */\n    fields?: RequestHighlightFields[];\n\n    constructor(input?: any) {\n\n        if (input) {\n            Object.assign(this, input);\n            if (input.fields) {\n                this.fields = input.fields.map((item: any) => {\n                    return new RequestHighlightFields(item);\n                });\n            }\n        }\n    }\n\n}\n"]}
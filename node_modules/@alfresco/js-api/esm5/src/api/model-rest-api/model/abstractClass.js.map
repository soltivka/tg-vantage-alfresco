{"version":3,"file":"abstractClass.js","sourceRoot":"","sources":["abstractClass.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;AAEF,OAAO,EAAE,QAAQ,EAAE,MAAM,uCAAuC,CAAC;AACjE,OAAO,EAAE,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;AACtE,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAEhC;IAaI,uBAAY,KAAW;QACnB,IAAI,KAAK,EAAE;YACP,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC3B,IAAI,KAAK,CAAC,UAAU,EAAE;gBAClB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,UAAC,IAAS;oBAC7C,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC;aACN;YACD,IAAI,KAAK,CAAC,YAAY,EAAE;gBACpB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,UAAC,IAAS;oBACjD,OAAO,IAAI,wBAAwB,CAAC,IAAI,CAAC,CAAC;gBAC9C,CAAC,CAAC,CAAC;aACN;YACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;SACjE;IACL,CAAC;IACL,oBAAC;AAAD,CAAC,AA7BD,IA6BC","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { Property } from '../../content-rest-api/model/property';\nimport { AbstractClassAssociation } from './abstractClassAssociation';\nimport { Model } from './model';\n\nexport class AbstractClass {\n    id: string;\n    title: string;\n    description?: string;\n    parentId?: string;\n    properties?: Property[];\n    isContainer?: boolean;\n    isArchive?: boolean;\n    includedInSupertypeQuery?: boolean;\n    mandatoryAspects?: string[];\n    associations?: AbstractClassAssociation[];\n    model?: Model;\n\n    constructor(input?: any) {\n        if (input) {\n            Object.assign(this, input);\n            if (input.properties) {\n                this.properties = input.properties.map((item: any) => {\n                    return new Property(item);\n                });\n            }\n            if (input.associations) {\n                this.associations = input.associations.map((item: any) => {\n                    return new AbstractClassAssociation(item);\n                });\n            }\n            this.model = input.model ? new Model(input.model) : undefined;\n        }\n    }\n}\n"]}
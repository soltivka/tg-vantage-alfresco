{"version":3,"file":"temporary.api.js","sourceRoot":"","sources":["temporary.api.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/*!\n    * @license\n    * Copyright 2018 Alfresco Software, Ltd.\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *     http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n\nimport { BaseApi } from './base.api';\n\nexport class TemporaryApi extends BaseApi {\n\n    /**\n     * Temporary service.\n     * @module api/TemporaryApi\n     * @version 1.4.0\n     */\n\n    /**\n     * Function to receive the result of the completeTasks operation.\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * completeTasks\n     * @param {Integer} userId userId\n     * @param {String} processDefinitionKey processDefinitionKey\n     */\n    completeTasks(userId: number, processDefinitionKey: string) {\n        let postBody = null;\n\n        // verify the required parameter 'userId' is set\n        if (userId === undefined || userId === null) {\n            throw \"Missing param 'userId' in completeTasks\";\n        }\n\n        // verify the required parameter 'processDefinitionKey' is set\n        if (processDefinitionKey === undefined || processDefinitionKey === null) {\n            throw \"Missing param 'processDefinitionKey' in completeTasks\";\n        }\n\n        let pathParams = {};\n        let queryParams = {\n            'userId': userId,\n            'processDefinitionKey': processDefinitionKey\n        };\n        let headerParams = {};\n        let formParams = {};\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/temporary/generate-report-data/complete-tasks', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts\n        );\n    }\n\n    /**\n     * Function to receive the result of the generateData operation.\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * generateData\n     * @param {Integer} userId userId\n     * @param {String} processDefinitionKey processDefinitionKey\n     */\n    generateData(userId: number, processDefinitionKey: string) {\n        let postBody = null;\n\n        // verify the required parameter 'userId' is set\n        if (userId === undefined || userId === null) {\n            throw \"Missing param 'userId' in generateData\";\n        }\n\n        // verify the required parameter 'processDefinitionKey' is set\n        if (processDefinitionKey === undefined || processDefinitionKey === null) {\n            throw \"Missing param 'processDefinitionKey' in generateData\";\n        }\n\n        let pathParams = {};\n        let queryParams = {\n            'userId': userId,\n            'processDefinitionKey': processDefinitionKey\n        };\n        let headerParams = {};\n        let formParams = {};\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/temporary/generate-report-data/start-process', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts\n        );\n    }\n\n    /**\n     * Function to receive the result of the getHeaders operation.\n     * @param {String} error Error message, if any.\n     * @param {module:model/ArrayNode} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * getHeaders\n     */\n    getHeaders() {\n        let postBody = null;\n\n        let pathParams = {};\n        let queryParams = {};\n        let headerParams = {};\n        let formParams = {};\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/temporary/example-headers', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts\n        );\n    }\n\n    /**\n     * Function to receive the result of the getOptions operation.\n     * @param {String} error Error message, if any.\n     * @param {module:model/ArrayNode} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * getOptions\n     */\n    getOptions() {\n        let postBody = null;\n\n        let pathParams = {};\n        let queryParams = {};\n        let headerParams = {};\n        let formParams = {};\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/temporary/example-options', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts\n        );\n    }\n}\n"]}
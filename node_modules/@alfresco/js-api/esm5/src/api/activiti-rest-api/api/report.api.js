/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
import { __extends } from "tslib";
import { BaseApi } from './base.api';
var ReportApi = (function (_super) {
    __extends(ReportApi, _super);
    function ReportApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ReportApi.prototype.createDefaultReports = function () {
        var postBody = null;
        var pathParams = {};
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/app/rest/reporting/default-reports', 'POST', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    ReportApi.prototype.getTasksByProcessDefinitionId = function (reportId, processDefinitionId) {
        var postBody = null;
        if (reportId === undefined || reportId === null) {
            throw "Missing param 'reportId' in getTasksByProcessDefinitionId";
        }
        if (processDefinitionId === undefined || processDefinitionId === null) {
            throw "Missing param 'processDefinitionId' in getTasksByProcessDefinitionId";
        }
        var pathParams = {
            'reportId': reportId
        };
        var queryParams = {
            'processDefinitionId': processDefinitionId
        };
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/app/rest/reporting/report-params/{reportId}/tasks', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    ReportApi.prototype.getReportsByParams = function (reportId, paramsQuery) {
        var postBody = paramsQuery;
        if (reportId === undefined || reportId === null) {
            throw "Missing param 'reportId' in getReportsByParams";
        }
        var pathParams = {
            'reportId': reportId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/app/rest/reporting/report-params/{reportId}', 'POST', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    ReportApi.prototype.getProcessDefinitions = function () {
        var postBody = null;
        var pathParams = {};
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/app/rest/reporting/process-definitions', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    ReportApi.prototype.getReportParams = function (reportId) {
        var postBody = null;
        if (reportId === undefined || reportId === null) {
            throw "Missing param 'reportId' in getReportParams";
        }
        var pathParams = {
            'reportId': reportId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/app/rest/reporting/report-params/{reportId}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    ReportApi.prototype.getReportList = function () {
        var postBody = null;
        var pathParams = {};
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/app/rest/reporting/reports', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    ReportApi.prototype.updateReport = function (reportId, name) {
        var postBody = {
            'name': name
        };
        if (reportId === undefined || reportId === null) {
            throw "Missing param 'reportId' in updateReport";
        }
        var pathParams = {
            'reportId': reportId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/app/rest/reporting/reports/{reportId}', 'PUT', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    ReportApi.prototype.exportToCsv = function (reportId, queryParams) {
        var postBody = queryParams;
        if (reportId === undefined || reportId === null) {
            throw "Missing param 'reportId' in exportToCsv";
        }
        if (queryParams === undefined || queryParams === null) {
            throw "Missing param 'queryParams' in exportToCsv";
        }
        if (queryParams.reportName === undefined || queryParams.reportName === null) {
            throw "Missing param 'reportName' in exportToCsv";
        }
        var pathParams = {
            'reportId': reportId
        };
        var headerParams = {};
        var formParams = {};
        queryParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/app/rest/reporting/reports/{reportId}/export-to-csv', 'POST', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    ReportApi.prototype.saveReport = function (reportId, queryParams) {
        var postBody = queryParams;
        if (reportId === undefined || reportId === null) {
            throw "Missing param 'reportId' in saveReport";
        }
        if (queryParams === undefined || queryParams === null) {
            throw "Missing param 'queryParams' in queryParams";
        }
        if (queryParams.reportName === undefined || queryParams.reportName === null) {
            throw "Missing param 'reportName' in exportToCsv";
        }
        queryParams.__reportName = queryParams.reportName;
        var pathParams = {
            'reportId': reportId
        };
        var headerParams = {};
        var formParams = {};
        queryParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/app/rest/reporting/reports/{reportId}', 'POST', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    ReportApi.prototype.deleteReport = function (reportId) {
        var postBody = null;
        if (reportId === undefined || reportId === null) {
            throw "Missing param 'reportId' in delete";
        }
        var pathParams = {
            'reportId': reportId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/app/rest/reporting/reports/{reportId}', 'DELETE', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    return ReportApi;
}(BaseApi));
export { ReportApi };
//# sourceMappingURL=../../../../../../src/api/activiti-rest-api/api/report.api.js.map
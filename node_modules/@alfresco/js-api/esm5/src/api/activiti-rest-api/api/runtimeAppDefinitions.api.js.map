{"version":3,"file":"runtimeAppDefinitions.api.js","sourceRoot":"","sources":["runtimeAppDefinitions.api.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;AAEF,OAAO,EAAE,2BAA2B,EAAE,MAAM,sCAAsC,CAAC;AACnF,OAAO,EAAE,uDAAuD,EAAE,MAAM,kEAAkE,CAAC;AAE3I,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AACrC,OAAO,EAAE,iBAAiB,EAAE,MAAM,iBAAiB,CAAC;AAMpD;IAA8C,4CAAO;IAArD;;IAsGA,CAAC;IA7FG,uDAAoB,GAApB,UAAqB,UAAkD;QACnE,iBAAiB,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QAE5C,IAAI,QAAQ,GAAG,UAAU,CAAC;QAE1B,IAAI,UAAU,GAAG,EAEhB,CAAC;QAEF,IAAI,WAAW,GAAG,EACjB,CAAC;QAEF,IAAI,YAAY,GAAG,EAElB,CAAC;QACF,IAAI,UAAU,GAAG,EAChB,CAAC;QAEF,IAAI,YAAY,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAEnC,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,yCAAyC,EAAE,MAAM,EACjD,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAC3D,YAAY,EAAE,OAAO,CAAC,CAAC;IAC/B,CAAC;IASD,mDAAgB,GAAhB,UAAiB,eAAuB;QACpC,iBAAiB,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;QAEtD,IAAI,QAAQ,GAAG,IAAI,CAAC;QAEpB,IAAI,UAAU,GAAG;YACb,iBAAiB,EAAE,eAAe;SACrC,CAAC;QAEF,IAAI,WAAW,GAAG,EACjB,CAAC;QAEF,IAAI,YAAY,GAAG,EAElB,CAAC;QACF,IAAI,UAAU,GAAG,EAChB,CAAC;QAEF,IAAI,YAAY,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAEnC,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,2DAA2D,EAAE,KAAK,EAClE,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAC3D,YAAY,EAAE,OAAO,EAAE,2BAA2B,CAAC,CAAC;IAC5D,CAAC;IAQD,oDAAiB,GAAjB;QAEI,IAAI,QAAQ,GAAG,IAAI,CAAC;QAEpB,IAAI,UAAU,GAAG,EAEhB,CAAC;QAEF,IAAI,WAAW,GAAG,EACjB,CAAC;QAEF,IAAI,YAAY,GAAG,EAElB,CAAC;QACF,IAAI,UAAU,GAAG,EAChB,CAAC;QAEF,IAAI,YAAY,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAEnC,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,yCAAyC,EAAE,KAAK,EAChD,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAC3D,YAAY,EAAE,OAAO,EAAE,uDAAuD,CAAC,CAAC;IACxF,CAAC;IAEL,+BAAC;AAAD,CAAC,AAtGD,CAA8C,OAAO,GAsGpD","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { AppDefinitionRepresentation } from '../model/appDefinitionRepresentation';\nimport { ResultListDataRepresentationAppDefinitionRepresentation } from '../model/resultListDataRepresentationAppDefinitionRepresentation';\nimport { RuntimeAppDefinitionSaveRepresentation } from '../model/runtimeAppDefinitionSaveRepresentation';\nimport { BaseApi } from './base.api';\nimport { throwIfNotDefined } from '../../../assert';\n\n/**\n* Runtimeappdefinitions service.\n* @module RuntimeappdefinitionsApi\n*/\nexport class RuntimeAppDefinitionsApi extends BaseApi {\n    /**\n    * Deploy a published app\n    *\n    * Deploying an app allows the user to see it on his/her landing page. Apps must be published before they can be deployed.\n    *\n    * @param saveObject saveObject\n    * @return Promise<{}>\n    */\n    deployAppDefinitions(saveObject: RuntimeAppDefinitionSaveRepresentation): Promise<any> {\n        throwIfNotDefined(saveObject, 'saveObject');\n\n        let postBody = saveObject;\n\n        let pathParams = {\n\n        };\n\n        let queryParams = {\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/runtime-app-definitions', 'POST',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts);\n    }\n    /**\n        * Get a runtime app\n        *\n        *\n        *\n        * @param appDefinitionId appDefinitionId\n        * @return Promise<AppDefinitionRepresentation>\n        */\n    getAppDefinition(appDefinitionId: number): Promise<AppDefinitionRepresentation> {\n        throwIfNotDefined(appDefinitionId, 'appDefinitionId');\n\n        let postBody = null;\n\n        let pathParams = {\n            'appDefinitionId': appDefinitionId\n        };\n\n        let queryParams = {\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/runtime-app-definitions/{appDefinitionId}', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, AppDefinitionRepresentation);\n    }\n    /**\n        * List runtime apps\n        *\n        * When a user logs in into Alfresco Process Services Suite, a landing page is displayed containing all the apps that the user is allowed to see and use. These are referred to as runtime apps.\n        *\n        * @return Promise<ResultListDataRepresentationAppDefinitionRepresentation>\n        */\n    getAppDefinitions(): Promise<ResultListDataRepresentationAppDefinitionRepresentation> {\n\n        let postBody = null;\n\n        let pathParams = {\n\n        };\n\n        let queryParams = {\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/runtime-app-definitions', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, ResultListDataRepresentationAppDefinitionRepresentation);\n    }\n\n}\n"]}
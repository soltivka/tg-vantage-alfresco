{"version":3,"file":"modelJsonBpmn.api.js","sourceRoot":"","sources":["modelJsonBpmn.api.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { BaseApi } from './base.api';\n\nexport class ModelJsonBpmnApi extends BaseApi {\n\n    /**\n     * Function to receive the result of the getHistoricEditorDisplayJsonClient operation.\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Export a previous process definition model to a JSON\n     * @param {Integer} processModelId processModelId\n     * @param {Integer} processModelHistoryId processModelHistoryId\n     */\n    getHistoricEditorDisplayJsonClient(processModelId: number, processModelHistoryId: number) {\n        let postBody = null;\n\n        // verify the required parameter 'processModelId' is set\n        if (processModelId === undefined || processModelId === null) {\n            throw \"Missing param 'processModelId' in getHistoricEditorDisplayJsonClient\";\n        }\n\n        // verify the required parameter 'processModelHistoryId' is set\n        if (processModelHistoryId === undefined || processModelHistoryId === null) {\n            throw \"Missing param 'processModelHistoryId' in getHistoricEditorDisplayJsonClient\";\n        }\n\n        let pathParams = {\n            'processModelId': processModelId,\n            'processModelHistoryId': processModelHistoryId\n        };\n        let queryParams = {};\n        let headerParams = {};\n        let formParams = {};\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/app/rest/models/{processModelId}/history/{processModelHistoryId}/model-json', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts\n        );\n    }\n\n    /**\n     * Function to receive the result of the getEditorDisplayJsonClient operation.\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Export a process definition model to a JSON\n     * @param {Integer} processModelId processModelId\n     */\n    getEditorDisplayJsonClient(processModelId: number) {\n        let postBody = null;\n\n        // verify the required parameter 'processModelId' is set\n        if (processModelId === undefined || processModelId === null) {\n            throw \"Missing param 'processModelId' in getEditorDisplayJsonClient\";\n        }\n\n        let pathParams = {\n            'processModelId': processModelId\n        };\n        let queryParams = {};\n        let headerParams = {};\n        let formParams = {};\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/app/rest/models/{processModelId}/model-json', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts\n        );\n    }\n\n    /**\n     * Function to receive the result of the getModelJSONForProcessDefinition operation.\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} processDefinitionId processDefinitionId\n     */\n    getModelJSON(processDefinitionId: string) {\n        let postBody = null;\n\n        if (processDefinitionId === undefined || processDefinitionId === null) {\n            throw \"Missing param 'processDefinitionId' in getProcessDefinitionModel\";\n        }\n\n        let pathParams = {\n            'processDefinitionId': processDefinitionId\n        };\n        let queryParams = {};\n        let headerParams = {};\n        let formParams = {};\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/app/rest/process-definitions/{processDefinitionId}/model-json', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts\n        );\n    }\n\n    /**\n     * Function to receive the result of the getModelHistoryJSON operation.\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} processInstanceId processInstanceId\n     */\n    getModelJSONForProcessDefinition(processInstanceId: string) {\n        let postBody = null;\n\n        if (processInstanceId === undefined || processInstanceId === null) {\n            throw \"Missing param 'processInstanceId' in getProcessInstancesModel\";\n        }\n\n        let pathParams = {\n            'processInstanceId': processInstanceId\n        };\n        let queryParams = {};\n        let headerParams = {};\n        let formParams = {};\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/app/rest/process-instances/{processInstanceId}/model-json', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts\n        );\n    }\n}\n"]}
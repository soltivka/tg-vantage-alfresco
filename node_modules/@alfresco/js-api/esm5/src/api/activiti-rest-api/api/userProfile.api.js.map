{"version":3,"file":"userProfile.api.js","sourceRoot":"","sources":["userProfile.api.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { ChangePasswordRepresentation } from '../model/changePasswordRepresentation';\nimport { ImageUploadRepresentation } from '../model/imageUploadRepresentation';\nimport { UserRepresentation } from '../model/userRepresentation';\nimport { BaseApi } from './base.api';\nimport { throwIfNotDefined } from '../../../assert';\n\n/**\n* Userprofile service.\n* @module UserprofileApi\n*/\nexport class UserProfileApi extends BaseApi {\n    /**\n    * Change user password\n    *\n    *\n    *\n    * @param changePasswordRepresentation changePasswordRepresentation\n    * @return Promise<{}>\n    */\n    changePassword(changePasswordRepresentation: ChangePasswordRepresentation): Promise<any> {\n        throwIfNotDefined(changePasswordRepresentation, 'changePasswordRepresentation');\n\n        let postBody = changePasswordRepresentation;\n\n        let pathParams = {\n\n        };\n\n        let queryParams = {\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/profile-password', 'POST',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts);\n    }\n    /**\n        * Retrieve user profile picture\n        *\n        * Generally returns an image file\n        *\n        * @return Promise<Blob>\n        */\n    getProfilePicture(): Promise<any> {\n\n        let postBody = null;\n\n        let pathParams = {\n\n        };\n\n        let queryParams = {\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json', '*/*'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/profile-picture', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts);\n    }\n\n    /**\n     * Retrieve user URL profile picture\n     * Generally returns an image file\n     */\n    getProfilePictureUrl() {\n        return this.apiClient.basePath + '/app/rest/admin/profile-picture';\n    }\n\n    /**\n        * Get user profile\n        *\n        * This operation returns account information for the current user. This is useful to get the name, email, the groups that the user is part of, the user picture, etc.\n        *\n        * @return Promise<UserRepresentation>\n        */\n    getProfile(): Promise<UserRepresentation> {\n\n        let postBody = null;\n\n        let pathParams = {\n\n        };\n\n        let queryParams = {\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/profile', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, UserRepresentation);\n    }\n    /**\n        * Update user profile\n        *\n        * Only a first name, last name, email and company can be updated\n        *\n        * @param userRepresentation userRepresentation\n        * @return Promise<UserRepresentation>\n        */\n    updateProfile(userRepresentation: UserRepresentation): Promise<UserRepresentation> {\n        throwIfNotDefined(userRepresentation, 'userRepresentation');\n\n        let postBody = userRepresentation;\n\n        let pathParams = {\n\n        };\n\n        let queryParams = {\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/profile', 'POST',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, UserRepresentation);\n    }\n    /**\n        * Change user profile picture\n        *\n        *\n        *\n        * @param file file\n        * @return Promise<ImageUploadRepresentation>\n        */\n    uploadProfilePicture(file: any): Promise<ImageUploadRepresentation> {\n        throwIfNotDefined(file, 'file');\n\n        let postBody = null;\n\n        let pathParams = {\n\n        };\n\n        let queryParams = {\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n            'file': file\n        };\n\n        let contentTypes = ['multipart/form-data'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/profile-picture', 'POST',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, ImageUploadRepresentation);\n    }\n\n}\n"]}
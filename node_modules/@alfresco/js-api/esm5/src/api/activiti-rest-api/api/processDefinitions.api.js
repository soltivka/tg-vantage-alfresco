/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
import { __extends } from "tslib";
import { FormDefinitionRepresentation } from '../model/formDefinitionRepresentation';
import { FormValueRepresentation } from '../model/formValueRepresentation';
import { IdentityLinkRepresentation } from '../model/identityLinkRepresentation';
import { ResultListDataRepresentationProcessDefinitionRepresentation } from '../model/resultListDataRepresentationProcessDefinitionRepresentation';
import { ResultListDataRepresentationRuntimeDecisionTableRepresentation } from '../model/resultListDataRepresentationRuntimeDecisionTableRepresentation';
import { ResultListDataRepresentationRuntimeFormRepresentation } from '../model/resultListDataRepresentationRuntimeFormRepresentation';
import { BaseApi } from './base.api';
import { throwIfNotDefined } from '../../../assert';
var ProcessDefinitionsApi = (function (_super) {
    __extends(ProcessDefinitionsApi, _super);
    function ProcessDefinitionsApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ProcessDefinitionsApi.prototype.createIdentityLink = function (processDefinitionId, identityLinkRepresentation) {
        throwIfNotDefined(processDefinitionId, 'processDefinitionId');
        throwIfNotDefined(identityLinkRepresentation, 'identityLinkRepresentation');
        var postBody = identityLinkRepresentation;
        var pathParams = {
            'processDefinitionId': processDefinitionId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/process-definitions/{processDefinitionId}/identitylinks', 'POST', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, IdentityLinkRepresentation);
    };
    ProcessDefinitionsApi.prototype.deleteIdentityLink = function (processDefinitionId, family, identityId) {
        throwIfNotDefined(processDefinitionId, 'processDefinitionId');
        throwIfNotDefined(family, 'family');
        throwIfNotDefined(identityId, 'identityId');
        var postBody = null;
        var pathParams = {
            'processDefinitionId': processDefinitionId, 'family': family, 'identityId': identityId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/process-definitions/{processDefinitionId}/identitylinks/{family}/{identityId}', 'DELETE', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    ProcessDefinitionsApi.prototype.getIdentityLinkType = function (processDefinitionId, family, identityId) {
        throwIfNotDefined(processDefinitionId, 'processDefinitionId');
        throwIfNotDefined(family, 'family');
        throwIfNotDefined(identityId, 'identityId');
        var postBody = null;
        var pathParams = {
            'processDefinitionId': processDefinitionId, 'family': family, 'identityId': identityId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/process-definitions/{processDefinitionId}/identitylinks/{family}/{identityId}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, IdentityLinkRepresentation);
    };
    ProcessDefinitionsApi.prototype.getIdentityLinksForFamily = function (processDefinitionId, family) {
        throwIfNotDefined(processDefinitionId, 'processDefinitionId');
        throwIfNotDefined(family, 'family');
        var postBody = null;
        var pathParams = {
            'processDefinitionId': processDefinitionId, 'family': family
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/process-definitions/{processDefinitionId}/identitylinks/{family}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, IdentityLinkRepresentation);
    };
    ProcessDefinitionsApi.prototype.getIdentityLinks = function (processDefinitionId) {
        throwIfNotDefined(processDefinitionId, 'processDefinitionId');
        var postBody = null;
        var pathParams = {
            'processDefinitionId': processDefinitionId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/process-definitions/{processDefinitionId}/identitylinks', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, IdentityLinkRepresentation);
    };
    ProcessDefinitionsApi.prototype.getProcessDefinitionDecisionTables = function (processDefinitionId) {
        throwIfNotDefined(processDefinitionId, 'processDefinitionId');
        var postBody = null;
        var pathParams = {
            'processDefinitionId': processDefinitionId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/process-definitions/{processDefinitionId}/decision-tables', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, ResultListDataRepresentationRuntimeDecisionTableRepresentation);
    };
    ProcessDefinitionsApi.prototype.getProcessDefinitionForms = function (processDefinitionId) {
        throwIfNotDefined(processDefinitionId, 'processDefinitionId');
        var postBody = null;
        var pathParams = {
            'processDefinitionId': processDefinitionId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/process-definitions/{processDefinitionId}/forms', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, ResultListDataRepresentationRuntimeFormRepresentation);
    };
    ProcessDefinitionsApi.prototype.getProcessDefinitionStartForm = function (processDefinitionId) {
        var postBody = null;
        var pathParams = {
            'processDefinitionId': processDefinitionId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/process-definitions/{processDefinitionId}/start-form', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, FormDefinitionRepresentation);
    };
    ProcessDefinitionsApi.prototype.getProcessDefinitions = function (opts) {
        opts = opts || {};
        var postBody = null;
        var pathParams = {};
        var queryParams = {
            'latest': opts['latest'],
            'appDefinitionId': opts['appDefinitionId'],
            'deploymentId': opts['deploymentId']
        };
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/process-definitions', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, ResultListDataRepresentationProcessDefinitionRepresentation);
    };
    ProcessDefinitionsApi.prototype.getRestFieldValues = function (processDefinitionId, field) {
        var postBody = null;
        var pathParams = {
            'processDefinitionId': processDefinitionId,
            'field': field
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/process-definitions/{processDefinitionId}/start-form-values/{field}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, FormValueRepresentation);
    };
    ProcessDefinitionsApi.prototype.getRestTableFieldValues = function (processDefinitionId, field, column) {
        var postBody = null;
        var pathParams = {
            'processDefinitionId': processDefinitionId,
            'field': field,
            'column': column
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/process-definitions/{processDefinitionId}/start-form-values/{field}/{column}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, FormValueRepresentation);
    };
    return ProcessDefinitionsApi;
}(BaseApi));
export { ProcessDefinitionsApi };
//# sourceMappingURL=../../../../../../src/api/activiti-rest-api/api/processDefinitions.api.js.map
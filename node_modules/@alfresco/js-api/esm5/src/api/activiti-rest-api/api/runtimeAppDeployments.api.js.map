{"version":3,"file":"runtimeAppDeployments.api.js","sourceRoot":"","sources":["runtimeAppDeployments.api.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;AAEF,OAAO,EAAE,2BAA2B,EAAE,MAAM,sCAAsC,CAAC;AACnF,OAAO,EAAE,uDAAuD,EAAE,MAAM,kEAAkE,CAAC;AAC3I,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AACrC,OAAO,EAAE,iBAAiB,EAAE,MAAM,iBAAiB,CAAC;AAMpD;IAA8C,4CAAO;IAArD;;IA4LA,CAAC;IAnLG,sDAAmB,GAAnB,UAAoB,eAAuB;QACvC,iBAAiB,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;QAEtD,IAAI,QAAQ,GAAG,IAAI,CAAC;QAEpB,IAAI,UAAU,GAAG;YACb,iBAAiB,EAAE,eAAe;SACrC,CAAC;QAEF,IAAI,WAAW,GAAG,EACjB,CAAC;QAEF,IAAI,YAAY,GAAG,EAElB,CAAC;QACF,IAAI,UAAU,GAAG,EAChB,CAAC;QAEF,IAAI,YAAY,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAEnC,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,2DAA2D,EAAE,QAAQ,EACrE,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAC3D,YAAY,EAAE,OAAO,CAAC,CAAC;IAC/B,CAAC;IASD,sDAAmB,GAAnB,UAAoB,YAAoB;QACpC,iBAAiB,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;QAEhD,IAAI,QAAQ,GAAG,IAAI,CAAC;QAEpB,IAAI,UAAU,GAAG;YACb,cAAc,EAAE,YAAY;SAC/B,CAAC;QAEF,IAAI,WAAW,GAAG,EACjB,CAAC;QAEF,IAAI,YAAY,GAAG,EAElB,CAAC;QACF,IAAI,UAAU,GAAG,EAChB,CAAC;QAEF,IAAI,YAAY,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAElC,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,sDAAsD,EAAE,KAAK,EAC7D,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAC3D,YAAY,EAAE,OAAO,CAAC,CAAC;IAC/B,CAAC;IAgBD,oDAAiB,GAAjB,UAAkB,IAAU;QACxB,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAClB,IAAI,QAAQ,GAAG,IAAI,CAAC;QAEpB,IAAI,UAAU,GAAG,EAEhB,CAAC;QAEF,IAAI,WAAW,GAAG;YACd,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC;YAC5B,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC;YAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC;YACxB,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC;YACtB,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC;YACpB,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC;YACtB,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC;SACvB,CAAC;QAEF,IAAI,YAAY,GAAG,EAElB,CAAC;QACF,IAAI,UAAU,GAAG,EAChB,CAAC;QAEF,IAAI,YAAY,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAEnC,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,yCAAyC,EAAE,KAAK,EAChD,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAC3D,YAAY,EAAE,OAAO,EAAE,uDAAuD,CAAC,CAAC;IACxF,CAAC;IASD,mDAAgB,GAAhB,UAAiB,eAAuB;QACpC,iBAAiB,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;QAEtD,IAAI,QAAQ,GAAG,IAAI,CAAC;QAEpB,IAAI,UAAU,GAAG;YACb,iBAAiB,EAAE,eAAe;SACrC,CAAC;QAEF,IAAI,WAAW,GAAG,EACjB,CAAC;QAEF,IAAI,YAAY,GAAG,EAElB,CAAC;QACF,IAAI,UAAU,GAAG,EAChB,CAAC;QAEF,IAAI,YAAY,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAEnC,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,2DAA2D,EAAE,KAAK,EAClE,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAC3D,YAAY,EAAE,OAAO,EAAE,2BAA2B,CAAC,CAAC;IAC5D,CAAC;IAWD,sEAAmC,GAAnC,UAAoC,IAAU;QAC1C,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAClB,IAAI,QAAQ,GAAG,IAAI,CAAC;QAEpB,IAAI,UAAU,GAAG,EAEhB,CAAC;QAEF,IAAI,WAAW,GAAG;YACd,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC;YACpC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC;SAC7C,CAAC;QAEF,IAAI,YAAY,GAAG,EAElB,CAAC;QACF,IAAI,UAAU,GAAG,EAChB,CAAC;QAEF,IAAI,YAAY,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAEnC,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,wCAAwC,EAAE,KAAK,EAC/C,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAC3D,YAAY,EAAE,OAAO,EAAE,2BAA2B,CAAC,CAAC;IAC5D,CAAC;IAEL,+BAAC;AAAD,CAAC,AA5LD,CAA8C,OAAO,GA4LpD","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { AppDeploymentRepresentation } from '../model/appDeploymentRepresentation';\nimport { ResultListDataRepresentationAppDeploymentRepresentation } from '../model/resultListDataRepresentationAppDeploymentRepresentation';\nimport { BaseApi } from './base.api';\nimport { throwIfNotDefined } from '../../../assert';\n\n/**\n* Runtimeappdeployments service.\n* @module RuntimeappdeploymentsApi\n*/\nexport class RuntimeAppDeploymentsApi extends BaseApi {\n    /**\n    * Remove an app deployment\n    *\n    *\n    *\n    * @param appDeploymentId appDeploymentId\n    * @return Promise<{}>\n    */\n    deleteAppDeployment(appDeploymentId: number): Promise<any> {\n        throwIfNotDefined(appDeploymentId, 'appDeploymentId');\n\n        let postBody = null;\n\n        let pathParams = {\n            'appDeploymentId': appDeploymentId\n        };\n\n        let queryParams = {\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/runtime-app-deployments/{appDeploymentId}', 'DELETE',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts);\n    }\n    /**\n        * Export the app archive for a deployment\n        *\n        *\n        *\n        * @param deploymentId deploymentId\n        * @return Promise<{}>\n        */\n    exportAppDefinition(deploymentId: string): Promise<any> {\n        throwIfNotDefined(deploymentId, 'deploymentId');\n\n        let postBody = null;\n\n        let pathParams = {\n            'deploymentId': deploymentId\n        };\n\n        let queryParams = {\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/zip'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/export-app-deployment/{deploymentId}', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts);\n    }\n    /**\n        * Query app deployments\n        *\n        *\n        *\n        * @param opts Optional parameters\n        * @param opts.nameLike nameLike\n        * @param opts.tenantId tenantId\n        * @param opts.latest latest\n        * @param opts.start start\n        * @param opts.sort sort\n        * @param opts.order order\n        * @param opts.size size\n        * @return Promise<ResultListDataRepresentationAppDeploymentRepresentation>\n        */\n    getAppDefinitions(opts?: any): Promise<ResultListDataRepresentationAppDeploymentRepresentation> {\n        opts = opts || {};\n        let postBody = null;\n\n        let pathParams = {\n\n        };\n\n        let queryParams = {\n            'nameLike': opts['nameLike'],\n            'tenantId': opts['tenantId'],\n            'latest': opts['latest'],\n            'start': opts['start'],\n            'sort': opts['sort'],\n            'order': opts['order'],\n            'size': opts['size']\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/runtime-app-deployments', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, ResultListDataRepresentationAppDeploymentRepresentation);\n    }\n    /**\n        * Get an app deployment\n        *\n        *\n        *\n        * @param appDeploymentId appDeploymentId\n        * @return Promise<AppDeploymentRepresentation>\n        */\n    getAppDeployment(appDeploymentId: number): Promise<AppDeploymentRepresentation> {\n        throwIfNotDefined(appDeploymentId, 'appDeploymentId');\n\n        let postBody = null;\n\n        let pathParams = {\n            'appDeploymentId': appDeploymentId\n        };\n\n        let queryParams = {\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/runtime-app-deployments/{appDeploymentId}', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, AppDeploymentRepresentation);\n    }\n    /**\n        * Get an app by deployment ID or DMN deployment ID\n        *\n        * Either a deploymentId or a dmnDeploymentId must be provided\n        *\n        * @param opts Optional parameters\n        * @param opts.deploymentId deploymentId\n        * @param opts.dmnDeploymentId dmnDeploymentId\n        * @return Promise<AppDeploymentRepresentation>\n        */\n    getRuntimeAppDeploymentByDeployment(opts?: any): Promise<AppDeploymentRepresentation> {\n        opts = opts || {};\n        let postBody = null;\n\n        let pathParams = {\n\n        };\n\n        let queryParams = {\n            'deploymentId': opts['deploymentId'],\n            'dmnDeploymentId': opts['dmnDeploymentId']\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/runtime-app-deployment', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, AppDeploymentRepresentation);\n    }\n\n}\n"]}
{"version":3,"file":"modelsBpmn.api.js","sourceRoot":"","sources":["modelsBpmn.api.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;AAEF,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AACrC,OAAO,EAAE,iBAAiB,EAAE,MAAM,iBAAiB,CAAC;AAMpD;IAAmC,iCAAO;IAA1C;;IAuEA,CAAC;IA7DG,wDAAgC,GAAhC,UAAiC,cAAsB,EAAE,qBAA6B;QAClF,iBAAiB,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC;QACpD,iBAAiB,CAAC,qBAAqB,EAAE,uBAAuB,CAAC,CAAC;QAElE,IAAI,QAAQ,GAAG,IAAI,CAAC;QAEpB,IAAI,UAAU,GAAG;YACb,gBAAgB,EAAE,cAAc,EAAE,uBAAuB,EAAE,qBAAqB;SACnF,CAAC;QAEF,IAAI,WAAW,GAAG,EACjB,CAAC;QAEF,IAAI,YAAY,GAAG,EAElB,CAAC;QACF,IAAI,UAAU,GAAG,EAChB,CAAC;QAEF,IAAI,YAAY,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAElC,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,gFAAgF,EAAE,KAAK,EACvF,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAC3D,YAAY,EAAE,OAAO,CAAC,CAAC;IAC/B,CAAC;IASD,gDAAwB,GAAxB,UAAyB,cAAsB;QAC3C,iBAAiB,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC;QACpD,IAAI,QAAQ,GAAG,IAAI,CAAC;QAEpB,IAAI,UAAU,GAAG;YACb,gBAAgB,EAAE,cAAc;SACnC,CAAC;QAEF,IAAI,WAAW,GAAG,EACjB,CAAC;QAEF,IAAI,YAAY,GAAG,EAElB,CAAC;QACF,IAAI,UAAU,GAAG,EAChB,CAAC;QAEF,IAAI,YAAY,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAElC,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,gDAAgD,EAAE,KAAK,EACvD,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAC3D,YAAY,EAAE,OAAO,CAAC,CAAC;IAC/B,CAAC;IAEL,oBAAC;AAAD,CAAC,AAvED,CAAmC,OAAO,GAuEzC","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { BaseApi } from './base.api';\nimport { throwIfNotDefined } from '../../../assert';\n\n/**\n* Modelsbpmn service.\n* @module ModelsbpmnApi\n*/\nexport class ModelsBpmnApi extends BaseApi {\n    /**\n    * Export a historic version of a process definition as BPMN 2.0 XML\n    *\n    *\n    *\n    * @param processModelId processModelId\n    * @param processModelHistoryId processModelHistoryId\n    * @return Promise<{}>\n    */\n    getHistoricProcessModelBpmn20Xml(processModelId: number, processModelHistoryId: number): Promise<any> {\n        throwIfNotDefined(processModelId, 'processModelId');\n        throwIfNotDefined(processModelHistoryId, 'processModelHistoryId');\n\n        let postBody = null;\n\n        let pathParams = {\n            'processModelId': processModelId, 'processModelHistoryId': processModelHistoryId\n        };\n\n        let queryParams = {\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/xml'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/models/{processModelId}/history/{processModelHistoryId}/bpmn20', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts);\n    }\n    /**\n        * Export a process definition as BPMN 2.0 XML\n        *\n        *\n        *\n        * @param processModelId processModelId\n        * @return Promise<{}>\n        */\n    getProcessModelBpmn20Xml(processModelId: number): Promise<any> {\n        throwIfNotDefined(processModelId, 'processModelId');\n        let postBody = null;\n\n        let pathParams = {\n            'processModelId': processModelId\n        };\n\n        let queryParams = {\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/xml'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/models/{processModelId}/bpmn20', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts);\n    }\n\n}\n"]}
/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
import { __extends } from "tslib";
import { BaseApi } from './base.api';
var ModelJsonBpmnApi = (function (_super) {
    __extends(ModelJsonBpmnApi, _super);
    function ModelJsonBpmnApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ModelJsonBpmnApi.prototype.getHistoricEditorDisplayJsonClient = function (processModelId, processModelHistoryId) {
        var postBody = null;
        if (processModelId === undefined || processModelId === null) {
            throw "Missing param 'processModelId' in getHistoricEditorDisplayJsonClient";
        }
        if (processModelHistoryId === undefined || processModelHistoryId === null) {
            throw "Missing param 'processModelHistoryId' in getHistoricEditorDisplayJsonClient";
        }
        var pathParams = {
            'processModelId': processModelId,
            'processModelHistoryId': processModelHistoryId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/app/rest/models/{processModelId}/history/{processModelHistoryId}/model-json', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    ModelJsonBpmnApi.prototype.getEditorDisplayJsonClient = function (processModelId) {
        var postBody = null;
        if (processModelId === undefined || processModelId === null) {
            throw "Missing param 'processModelId' in getEditorDisplayJsonClient";
        }
        var pathParams = {
            'processModelId': processModelId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/app/rest/models/{processModelId}/model-json', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    ModelJsonBpmnApi.prototype.getModelJSON = function (processDefinitionId) {
        var postBody = null;
        if (processDefinitionId === undefined || processDefinitionId === null) {
            throw "Missing param 'processDefinitionId' in getProcessDefinitionModel";
        }
        var pathParams = {
            'processDefinitionId': processDefinitionId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/app/rest/process-definitions/{processDefinitionId}/model-json', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    ModelJsonBpmnApi.prototype.getModelJSONForProcessDefinition = function (processInstanceId) {
        var postBody = null;
        if (processInstanceId === undefined || processInstanceId === null) {
            throw "Missing param 'processInstanceId' in getProcessInstancesModel";
        }
        var pathParams = {
            'processInstanceId': processInstanceId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/app/rest/process-instances/{processInstanceId}/model-json', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    return ModelJsonBpmnApi;
}(BaseApi));
export { ModelJsonBpmnApi };
//# sourceMappingURL=../../../../../../src/api/activiti-rest-api/api/modelJsonBpmn.api.js.map
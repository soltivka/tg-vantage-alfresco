{"version":3,"file":"decisionAudits.api.js","sourceRoot":"","sources":["decisionAudits.api.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;AAEF,OAAO,EAAE,2BAA2B,EAAE,MAAM,sCAAsC,CAAC;AACnF,OAAO,EAAE,uDAAuD,EAAE,MAAM,kEAAkE,CAAC;AAC3I,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AACrC,OAAO,EAAE,iBAAiB,EAAE,MAAM,iBAAiB,CAAC;AAMpD;IAAuC,qCAAO;IAA9C;;IA0EA,CAAC;IAjEG,yCAAa,GAAb,UAAc,YAAoB;QAC9B,iBAAiB,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;QAE1C,IAAI,QAAQ,GAAG,IAAI,CAAC;QAEpB,IAAI,UAAU,GAAG;YACb,cAAc,EAAE,YAAY;SAC/B,CAAC;QAEF,IAAI,WAAW,GAAG,EACjB,CAAC;QAEF,IAAI,YAAY,GAAG,EAElB,CAAC;QACF,IAAI,UAAU,GAAG,EAChB,CAAC;QAEF,IAAI,YAAY,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAEnC,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,iDAAiD,EAAE,KAAK,EACxD,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAC3D,YAAY,EAAE,OAAO,EAAE,2BAA2B,CAAC,CAAC;IAC5D,CAAC;IAUD,0CAAc,GAAd,UAAe,WAAmB,EAAE,eAAuB;QACvD,iBAAiB,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;QAC9C,iBAAiB,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;QAEtD,IAAI,QAAQ,GAAG,IAAI,CAAC;QAEpB,IAAI,UAAU,GAAG,EAEhB,CAAC;QAEF,IAAI,WAAW,GAAG;YACd,aAAa,EAAE,WAAW;YAC1B,iBAAiB,EAAE,eAAe;SACrC,CAAC;QAEF,IAAI,YAAY,GAAG,EAElB,CAAC;QACF,IAAI,UAAU,GAAG,EAChB,CAAC;QAEF,IAAI,YAAY,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAEnC,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,kCAAkC,EAAE,KAAK,EACzC,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAC3D,YAAY,EAAE,OAAO,EAAE,uDAAuD,CAAC,CAAC;IACxF,CAAC;IAEL,wBAAC;AAAD,CAAC,AA1ED,CAAuC,OAAO,GA0E7C","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { DecisionAuditRepresentation } from '../model/decisionAuditRepresentation';\nimport { ResultListDataRepresentationDecisionAuditRepresentation } from '../model/resultListDataRepresentationDecisionAuditRepresentation';\nimport { BaseApi } from './base.api';\nimport { throwIfNotDefined } from '../../../assert';\n\n/**\n* Decisionaudits service.\n* @module DecisionauditsApi\n*/\nexport class DecisionAuditsApi extends BaseApi {\n    /**\n    * Get an audit trail\n    *\n    *\n    *\n    * @param auditTrailId auditTrailId\n    * @return Promise<DecisionAuditRepresentation>\n    */\n    getAuditTrail(auditTrailId: number): Promise<DecisionAuditRepresentation> {\n        throwIfNotDefined(auditTrailId, 'taskId');\n\n        let postBody = null;\n\n        let pathParams = {\n            'auditTrailId': auditTrailId\n        };\n\n        let queryParams = {\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/decisions/audits/{auditTrailId}', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, DecisionAuditRepresentation);\n    }\n    /**\n        * Query decision table audit trails\n        *\n        *\n        *\n        * @param decisionKey decisionKey\n        * @param dmnDeploymentId dmnDeploymentId\n        * @return Promise<ResultListDataRepresentationDecisionAuditRepresentation>\n        */\n    getAuditTrails(decisionKey: string, dmnDeploymentId: number): Promise<ResultListDataRepresentationDecisionAuditRepresentation> {\n        throwIfNotDefined(decisionKey, 'decisionKey');\n        throwIfNotDefined(dmnDeploymentId, 'dmnDeploymentId');\n\n        let postBody = null;\n\n        let pathParams = {\n\n        };\n\n        let queryParams = {\n            'decisionKey': decisionKey,\n            'dmnDeploymentId': dmnDeploymentId\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/api/enterprise/decisions/audits', 'GET',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, ResultListDataRepresentationDecisionAuditRepresentation);\n    }\n\n}\n"]}
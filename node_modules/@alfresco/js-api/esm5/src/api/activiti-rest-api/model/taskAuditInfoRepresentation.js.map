{"version":3,"file":"taskAuditInfoRepresentation.js","sourceRoot":"","sources":["taskAuditInfoRepresentation.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;AAEF,OAAO,EAAE,8BAA8B,EAAE,MAAM,kCAAkC,CAAC;AAClF,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AAEtD;IAaI,qCAAY,KAAW;QAEnB,IAAI,KAAK,EAAE;YACP,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC3B,IAAI,KAAK,CAAC,QAAQ,EAAE;gBAChB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,IAAS;oBACzC,OAAO,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBACtC,CAAC,CAAC,CAAC;aACN;YACD,IAAI,KAAK,CAAC,QAAQ,EAAE;gBAChB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,IAAS;oBACzC,OAAO,IAAI,8BAA8B,CAAC,IAAI,CAAC,CAAC;gBACpD,CAAC,CAAC,CAAC;aACN;SACJ;IACL,CAAC;IAEL,kCAAC;AAAD,CAAC,AA9BD,IA8BC","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { AuditLogFormDataRepresentation } from './auditLogFormDataRepresentation';\nimport { CommentAuditInfo } from './commentAuditInfo';\n\nexport class TaskAuditInfoRepresentation {\n    assignee?: string;\n    comments?: CommentAuditInfo[];\n    endTime?: string;\n    formData?: AuditLogFormDataRepresentation[];\n    processDefinitionName?: string;\n    processDefinitionVersion?: number;\n    processInstanceId?: string;\n    selectedOutcome?: string;\n    startTime?: string;\n    taskId?: string;\n    taskName?: string;\n\n    constructor(input?: any) {\n\n        if (input) {\n            Object.assign(this, input);\n            if (input.comments) {\n                this.comments = input.comments.map((item: any) => {\n                    return new CommentAuditInfo(item);\n                });\n            }\n            if (input.formData) {\n                this.formData = input.formData.map((item: any) => {\n                    return new AuditLogFormDataRepresentation(item);\n                });\n            }\n        }\n    }\n\n}\n"]}
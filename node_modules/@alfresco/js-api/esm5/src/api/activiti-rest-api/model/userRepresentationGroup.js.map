{"version":3,"file":"userRepresentationGroup.js","sourceRoot":"","sources":["userRepresentationGroup.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;AAEF,OAAO,EAAE,YAAY,EAAE,MAAM,6CAA6C,CAAC;AAC3E,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;AAElE;IAuBI,iCAAY,KAAW;QAEnB,IAAI,KAAK,EAAE;YACP,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC3B,IAAI,KAAK,CAAC,IAAI,EAAE;gBACZ,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,UAAC,IAAS;oBACjC,OAAO,IAAI,sBAAsB,CAAC,IAAI,CAAC,CAAC;gBAC5C,CAAC,CAAC,CAAC;aACN;YACD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACjF,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAC1F,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;SACxH;IACL,CAAC;IAEL,8BAAC;AAAD,CAAC,AAtCD,IAsCC","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { DateAlfresco } from '../../content-custom-api/model/dateAlfresco';\nimport { LightAppRepresentation } from './lightAppRepresentation';\n\nexport class UserRepresentationGroup {\n    apps?: LightAppRepresentation[];\n    capabilities?: string[];\n    company?: string;\n    created?: Date;\n    email?: string;\n    externalId?: string;\n    firstName?: string;\n    fullname?: string;\n    groups?: any[];\n    id?: number;\n    lastName?: string;\n    lastUpdate?: Date;\n    latestSyncTimeStamp?: Date;\n    password?: string;\n    pictureId?: number;\n    primaryGroup?: any;\n    status?: string;\n    tenantId?: number;\n    tenantName?: string;\n    tenantPictureId?: number;\n    type?: string;\n\n    constructor(input?: any) {\n\n        if (input) {\n            Object.assign(this, input);\n            if (input.apps) {\n                this.apps = input.apps.map((item: any) => {\n                    return new LightAppRepresentation(item);\n                });\n            }\n            this.created = input.created ? DateAlfresco.parseDate(input.created) : undefined;\n            this.lastUpdate = input.lastUpdate ? DateAlfresco.parseDate(input.lastUpdate) : undefined;\n            this.latestSyncTimeStamp = input.latestSyncTimeStamp ? DateAlfresco.parseDate(input.latestSyncTimeStamp) : undefined;\n        }\n    }\n\n}\n"]}
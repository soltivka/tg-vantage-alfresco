{"version":3,"file":"formSaveRepresentation.js","sourceRoot":"","sources":["formSaveRepresentation.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;AAEF,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAC1D,OAAO,EAAE,oCAAoC,EAAE,MAAM,wCAAwC,CAAC;AAE9F;IAQI,gCAAY,KAAW;QAEnB,IAAI,KAAK,EAAE;YACP,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC3B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,kBAAkB,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAClH,IAAI,KAAK,CAAC,uBAAuB,EAAE;gBAC/B,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC,uBAAuB,CAAC,GAAG,CAAC,UAAC,IAAS;oBACvE,OAAO,IAAI,oCAAoC,CAAC,IAAI,CAAC,CAAC;gBAC1D,CAAC,CAAC,CAAC;aACN;SACJ;IACL,CAAC;IAEL,6BAAC;AAAD,CAAC,AArBD,IAqBC","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { FormRepresentation } from './formRepresentation';\nimport { ProcessScopeIdentifierRepresentation } from './processScopeIdentifierRepresentation';\n\nexport class FormSaveRepresentation {\n    comment?: string;\n    formImageBase64?: string;\n    formRepresentation?: FormRepresentation;\n    newVersion?: boolean;\n    processScopeIdentifiers?: ProcessScopeIdentifierRepresentation[];\n    reusable?: boolean;\n\n    constructor(input?: any) {\n\n        if (input) {\n            Object.assign(this, input);\n            this.formRepresentation = input.formRepresentation ? new FormRepresentation(input.formRepresentation) : undefined;\n            if (input.processScopeIdentifiers) {\n                this.processScopeIdentifiers = input.processScopeIdentifiers.map((item: any) => {\n                    return new ProcessScopeIdentifierRepresentation(item);\n                });\n            }\n        }\n    }\n\n}\n"]}
{"version":3,"file":"processInstanceAuditInfoRepresentation.js","sourceRoot":"","sources":["processInstanceAuditInfoRepresentation.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;AAEF,OAAO,EAAE,+BAA+B,EAAE,MAAM,mCAAmC,CAAC;AACpF,OAAO,EAAE,2BAA2B,EAAE,MAAM,+BAA+B,CAAC;AAE5E;IAYI,gDAAY,KAAW;QAEnB,IAAI,KAAK,EAAE;YACP,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,+BAA+B,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAC7G,IAAI,KAAK,CAAC,OAAO,EAAE;gBACf,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,IAAS;oBACvC,OAAO,IAAI,2BAA2B,CAAC,IAAI,CAAC,CAAC;gBACjD,CAAC,CAAC,CAAC;aACN;SACJ;IACL,CAAC;IAEL,6CAAC;AAAD,CAAC,AAzBD,IAyBC","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { AuditDecisionInfoRepresentation } from './auditDecisionInfoRepresentation';\nimport { AuditLogEntryRepresentation } from './auditLogEntryRepresentation';\n\nexport class ProcessInstanceAuditInfoRepresentation {\n    decisionInfo?: AuditDecisionInfoRepresentation;\n    entries?: AuditLogEntryRepresentation[];\n    processDefinitionName?: string;\n    processDefinitionVersion?: string;\n    processInstanceDurationInMillis?: number;\n    processInstanceEndTime?: string;\n    processInstanceId?: string;\n    processInstanceInitiator?: string;\n    processInstanceName?: string;\n    processInstanceStartTime?: string;\n\n    constructor(input?: any) {\n\n        if (input) {\n            Object.assign(this, input);\n            this.decisionInfo = input.decisionInfo ? new AuditDecisionInfoRepresentation(input.decisionInfo) : undefined;\n            if (input.entries) {\n                this.entries = input.entries.map((item: any) => {\n                    return new AuditLogEntryRepresentation(item);\n                });\n            }\n        }\n    }\n\n}\n"]}
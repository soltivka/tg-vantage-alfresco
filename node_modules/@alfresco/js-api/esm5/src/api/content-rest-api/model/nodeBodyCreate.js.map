{"version":3,"file":"nodeBodyCreate.js","sourceRoot":"","sources":["nodeBodyCreate.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;AAEF,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,oBAAoB,EAAE,MAAM,wBAAwB,CAAC;AAC9D,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAC1C,OAAO,EAAE,yBAAyB,EAAE,MAAM,6BAA6B,CAAC;AACxE,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AAEpD;IAiBI,wBAAY,KAAW;QACnB,IAAI,KAAK,EAAE;YACP,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC3B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAC1F,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAClF,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,yBAAyB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACpG,IAAI,KAAK,CAAC,iBAAiB,EAAE;gBACzB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,iBAAiB,CAAC,GAAG,CAAC,UAAC,IAAS;oBAC3D,OAAO,IAAI,oBAAoB,CAAC,IAAI,CAAC,CAAC;gBAC1C,CAAC,CAAC,CAAC;aACN;YACD,IAAI,KAAK,CAAC,OAAO,EAAE;gBACf,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,IAAS;oBACvC,OAAO,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;gBACrC,CAAC,CAAC,CAAC;aACN;SACJ;IACL,CAAC;IAEL,qBAAC;AAAD,CAAC,AApCD,IAoCC","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { AssociationBody } from './associationBody';\nimport { ChildAssociationBody } from './childAssociationBody';\nimport { Definition } from './definition';\nimport { NodeBodyCreateAssociation } from './nodeBodyCreateAssociation';\nimport { PermissionsBody } from './permissionsBody';\n\nexport class NodeBodyCreate {\n    /**\n     * The name must not contain spaces or the following special characters: * \\\" < > \\\\ / ? : and |.\nThe character . must not be used at the end of the name.\n\n     */\n    name: string;\n    nodeType: string;\n    aspectNames?: string[];\n    properties?: any;\n    permissions?: PermissionsBody;\n    definition?: Definition;\n    relativePath?: string;\n    association?: NodeBodyCreateAssociation;\n    secondaryChildren?: ChildAssociationBody[];\n    targets?: AssociationBody[];\n\n    constructor(input?: any) {\n        if (input) {\n            Object.assign(this, input);\n            this.permissions = input.permissions ? new PermissionsBody(input.permissions) : undefined;\n            this.definition = input.definition ? new Definition(input.definition) : undefined;\n            this.association = input.association ? new NodeBodyCreateAssociation(input.association) : undefined;\n            if (input.secondaryChildren) {\n                this.secondaryChildren = input.secondaryChildren.map((item: any) => {\n                    return new ChildAssociationBody(item);\n                });\n            }\n            if (input.targets) {\n                this.targets = input.targets.map((item: any) => {\n                    return new AssociationBody(item);\n                });\n            }\n        }\n    }\n\n}\n"]}
{"version":3,"file":"base.api.js","sourceRoot":"","sources":["base.api.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;AAKF;IAWI,iBAAY,WAAyB;QACjC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;IATD,sBAAI,qCAAgB;aAApB;YACI,OAAO,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC;QACjD,CAAC;;;OAAA;IACD,sBAAI,8BAAS;aAAb;YACI,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;QAC1C,CAAC;;;OAAA;IAMD,sBAAI,GAAJ,UAAc,OAAuB;QACjC,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAI,OAAO,CAAC,CAAC;IAClD,CAAC;IAED,qBAAG,GAAH,UAAa,OAAuB;QAChC,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAI,OAAO,CAAC,CAAC;IACjD,CAAC;IAED,qBAAG,GAAH,UAAa,OAAuB;QAChC,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAI,OAAO,CAAC,CAAC;IACjD,CAAC;IAED,wBAAM,GAAN,UAAiB,OAAuB;QACpC,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACjD,CAAC;IAED,8BAAY,GAAZ,UAAa,KAAa,EAAE,UAAkB;QAC1C,OAAO,wBAAiB,KAAK,iBAAO,UAAU,CAAE,CAAC;IACrD,CAAC;IACL,cAAC;AAAD,CAAC,AAlCD,IAkCC","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { AlfrescoApi } from '../../../alfrescoApi';\nimport { AlfrescoApiClient, RequestOptions } from '../../../alfrescoApiClient';\n\nexport class BaseApi {\n\n    protected alfrescoApi: AlfrescoApi;\n\n    get apiClientPrivate(): AlfrescoApiClient {\n        return this.alfrescoApi.contentPrivateClient;\n    }\n    get apiClient(): AlfrescoApiClient {\n        return this.alfrescoApi.contentClient;\n    }\n\n    constructor(alfrescoApi?: AlfrescoApi) {\n        this.alfrescoApi = alfrescoApi;\n    }\n\n    post<T = any>(options: RequestOptions): Promise<T> {\n        return this.apiClientPrivate.post<T>(options);\n    }\n\n    put<T = any>(options: RequestOptions): Promise<T> {\n        return this.apiClientPrivate.put<T>(options);\n    }\n\n    get<T = any>(options: RequestOptions): Promise<T> {\n        return this.apiClientPrivate.get<T>(options);\n    }\n\n    delete<T = void>(options: RequestOptions): Promise<T> {\n        return this.apiClientPrivate.delete(options);\n    }\n\n    errorMessage(param: string, methodName: string) {\n        return `Missing param ${param} in ${methodName}`;\n    }\n}\n"]}
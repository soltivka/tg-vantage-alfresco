{"version":3,"file":"files.api.js","sourceRoot":"","sources":["files.api.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;AAEF,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AACnD,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AACrC,OAAO,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AAClE,OAAO,EAAE,iBAAiB,EAAE,MAAM,iBAAiB,CAAC;AAMpD;IAA8B,4BAAO;IAArC;;IA4DA,CAAC;IA/BG,gCAAa,GAAb,UAAc,MAAc,EAAE,IAAU;QACpC,iBAAiB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAEpC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAClB,IAAI,QAAQ,GAAG,IAAI,CAAC;QAEpB,IAAI,UAAU,GAAG;YACb,QAAQ,EAAE,MAAM;SACnB,CAAC;QAEF,IAAI,WAAW,GAAG;YACd,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC;YAChC,SAAS,EAAE,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,CAAC;YACvD,QAAQ,EAAE,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC;SACxD,CAAC;QAEF,IAAI,YAAY,GAAG,EAElB,CAAC;QACF,IAAI,UAAU,GAAG,EAChB,CAAC;QAEF,IAAI,YAAY,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAEnC,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,yBAAyB,EAAE,MAAM,EACjC,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAC3D,YAAY,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;IAC5C,CAAC;IAEL,eAAC;AAAD,CAAC,AA5DD,CAA8B,OAAO,GA4DpC","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { RecordEntry } from '../model/recordEntry';\nimport { BaseApi } from './base.api';\nimport { buildCollectionParam } from '../../../alfrescoApiClient';\nimport { throwIfNotDefined } from '../../../assert';\n\n/**\n* Files service.\n* @module FilesApi\n*/\nexport class FilesApi extends BaseApi {\n    /**\n    * Declare as record\n    *\n    * Declares the file **fileId** in the unfiled records container. The original file is moved to the Records Management site and a secondary parent association is created in the file's original site.\n    *\n    * @param fileId The identifier of a non-record file.\n    * @param opts Optional parameters\n    * @param opts.hideRecord Flag to indicate whether the record should be hidden from the current parent folder. (default to false)\n    * @param opts.include Returns additional information about the record. Any optional field from the response model can be requested. For example:\n* allowableOperations\n* content\n* isCompleted\n* path\n\n    * @param opts.fields A list of field names.\n\nYou can use this parameter to restrict the fields\nreturned within a response if, for example, you want to save on overall bandwidth.\n\nThe list applies to a returned individual\nentity or entries within a collection.\n\nIf the API method also supports the **include**\nparameter, then the fields specified in the **include**\nparameter are returned in addition to those specified in the **fields** parameter.\n\n    * @return Promise<RecordEntry>\n    */\n    declareRecord(fileId: string, opts?: any): Promise<RecordEntry> {\n        throwIfNotDefined(fileId, 'fileId');\n\n        opts = opts || {};\n        let postBody = null;\n\n        let pathParams = {\n            'fileId': fileId\n        };\n\n        let queryParams = {\n            'hideRecord': opts['hideRecord'],\n            'include': buildCollectionParam(opts['include'], 'csv'),\n            'fields': buildCollectionParam(opts['fields'], 'csv')\n        };\n\n        let headerParams = {\n\n        };\n        let formParams = {\n        };\n\n        let contentTypes = ['application/json'];\n        let accepts = ['application/json'];\n\n        return this.apiClient.callApi(\n            '/files/{fileId}/declare', 'POST',\n            pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, RecordEntry);\n    }\n\n}\n"]}
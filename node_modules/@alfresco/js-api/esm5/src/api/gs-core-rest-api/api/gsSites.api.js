/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
import { __extends } from "tslib";
import { RMSiteEntry } from '../model/rMSiteEntry';
import { BaseApi } from './base.api';
import { buildCollectionParam } from '../../../alfrescoApiClient';
import { throwIfNotDefined } from '../../../assert';
var GsSitesApi = (function (_super) {
    __extends(GsSitesApi, _super);
    function GsSitesApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GsSitesApi.prototype.createRMSite = function (siteBodyCreate, opts) {
        throwIfNotDefined(siteBodyCreate, 'siteBodyCreate');
        opts = opts || {};
        var postBody = siteBodyCreate;
        var pathParams = {};
        var queryParams = {
            'skipAddToFavorites': opts['skipAddToFavorites']
        };
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/gs-sites', 'POST', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, RMSiteEntry);
    };
    GsSitesApi.prototype.deleteRMSite = function () {
        var postBody = null;
        var pathParams = {};
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/gs-sites/rm', 'DELETE', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    GsSitesApi.prototype.getRMSite = function (opts) {
        opts = opts || {};
        var postBody = null;
        var pathParams = {};
        var queryParams = {
            'fields': buildCollectionParam(opts['fields'], 'csv')
        };
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/gs-sites/rm', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, RMSiteEntry);
    };
    GsSitesApi.prototype.updateRMSite = function (siteBodyUpdate, opts) {
        throwIfNotDefined(siteBodyUpdate, 'siteBodyUpdate');
        opts = opts || {};
        var postBody = siteBodyUpdate;
        var pathParams = {};
        var queryParams = {
            'fields': buildCollectionParam(opts['fields'], 'csv')
        };
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/gs-sites/rm', 'PUT', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, RMSiteEntry);
    };
    return GsSitesApi;
}(BaseApi));
export { GsSitesApi };
//# sourceMappingURL=../../../../../../src/api/gs-core-rest-api/api/gsSites.api.js.map
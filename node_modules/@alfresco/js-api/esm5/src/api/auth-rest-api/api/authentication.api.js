/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
import { __extends } from "tslib";
import { TicketEntry } from '../model/ticketEntry';
import { ValidTicketEntry } from '../model/validTicketEntry';
import { BaseApi } from './base.api';
import { throwIfNotDefined } from '../../../assert';
var AuthenticationApi = (function (_super) {
    __extends(AuthenticationApi, _super);
    function AuthenticationApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AuthenticationApi.prototype.createTicket = function (ticketBodyCreate) {
        throwIfNotDefined(ticketBodyCreate, 'ticketBodyCreate');
        var postBody = ticketBodyCreate;
        var pathParams = {};
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/tickets', 'POST', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, TicketEntry);
    };
    AuthenticationApi.prototype.getTicket = function () {
        var postBody = null;
        var pathParams = {};
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/tickets/-me-', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, TicketEntry);
    };
    AuthenticationApi.prototype.deleteTicket = function () {
        var postBody = null;
        var pathParams = {};
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/tickets/-me-', 'DELETE', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    AuthenticationApi.prototype.validateTicket = function () {
        var postBody = null;
        var pathParams = {};
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/tickets/-me-', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, ValidTicketEntry);
    };
    return AuthenticationApi;
}(BaseApi));
export { AuthenticationApi };
//# sourceMappingURL=../../../../../../src/api/auth-rest-api/api/authentication.api.js.map
/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
import { SitesApi as NewSitesApi } from '../../../../api/content-rest-api/api/sites.api';
var SitesApi = (function () {
    function SitesApi() {
    }
    SitesApi.prototype.init = function (alfrescoApi) {
        this.sitesApi = new NewSitesApi(alfrescoApi);
    };
    SitesApi.prototype.addSiteMember = function (siteId, siteMemberBody) {
        return this.sitesApi.createSiteMembership(siteId, siteMemberBody);
    };
    SitesApi.prototype.createSite = function (siteBody, opts) {
        return this.sitesApi.createSite(siteBody, opts);
    };
    SitesApi.prototype.updateSite = function (siteId, siteBody, opts) {
        return this.sitesApi.updateSite(siteId, siteBody, opts);
    };
    SitesApi.prototype.deleteSite = function (siteId, opts) {
        return this.sitesApi.deleteSite(siteId, opts);
    };
    SitesApi.prototype.getSite = function (siteId, opts) {
        return this.sitesApi.getSite(siteId, opts);
    };
    SitesApi.prototype.getSiteContainer = function (siteId, containerId, opts) {
        return this.sitesApi.getSiteContainer(siteId, containerId, opts);
    };
    SitesApi.prototype.getSiteContainers = function (siteId, opts) {
        return this.sitesApi.listSiteContainers(siteId, opts);
    };
    SitesApi.prototype.getSiteMember = function (siteId, personId, opts) {
        return this.sitesApi.getSiteMembership(siteId, personId, opts);
    };
    SitesApi.prototype.getSiteMembers = function (siteId, opts) {
        return this.sitesApi.listSiteMemberships(siteId, opts);
    };
    SitesApi.prototype.getSites = function (opts) {
        return this.sitesApi.listSites(opts);
    };
    SitesApi.prototype.removeSiteMember = function (siteId, personId) {
        return this.sitesApi.deleteSiteMembership(siteId, personId);
    };
    SitesApi.prototype.updateSiteMember = function (siteId, personId, siteMemberRoleBody) {
        return this.sitesApi.updateSiteMembership(siteId, personId, siteMemberRoleBody);
    };
    return SitesApi;
}());
export { SitesApi };
//# sourceMappingURL=../../../../../../../src/api-legacy/content-rest-api/src/api/sitesApi.js.map
/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
import { __extends } from "tslib";
import { AlfrescoApi } from './alfrescoApi';
import { CONTENT_LEGACY_APIS } from './api-legacy/content-rest-api/src';
import { APS_LEGACY_APIS } from './api-legacy/activiti-rest-api/src';
import { DISCOVERY_APIS } from './api/discovery-rest-api/api';
import { GS_CLASSIFICATION_APIS } from './api/gs-classification-rest-api/api';
import { GS_CORE_APIS } from './api/gs-core-rest-api/api';
import { SEARCH_APIS } from './api/search-rest-api/api';
import { AUTH_APIS } from './api/auth-rest-api/api';
import { ContentApi } from './api/content-custom-api/api/content.api';
import { AlfrescoUpload } from './api-legacy/alfrescoUpload';
var AlfrescoApiCompatibility = (function (_super) {
    __extends(AlfrescoApiCompatibility, _super);
    function AlfrescoApiCompatibility(config) {
        var _this = _super.call(this, config) || this;
        _this.core = {};
        _this.activiti = {};
        _this.auth = {};
        _this.search = {};
        _this.gsCore = {};
        _this.gsClassification = {};
        _this.discovery = {};
        _this.initObjects();
        return _this;
    }
    AlfrescoApiCompatibility.prototype.configureJsApi = function (config) {
        this.setConfig(config);
    };
    AlfrescoApiCompatibility.prototype.initObjects = function () {
        this._instantiateOldObjects(CONTENT_LEGACY_APIS, this.core);
        this._instantiateOldObjects(APS_LEGACY_APIS, this.activiti);
        this._instantiateNewObjects(AUTH_APIS, this.auth);
        this._instantiateNewObjects(SEARCH_APIS, this.search);
        this._instantiateNewObjects(DISCOVERY_APIS, this.discovery);
        this._instantiateNewObjects(GS_CORE_APIS, this.gsCore);
        this._instantiateNewObjects(GS_CLASSIFICATION_APIS, this.gsClassification);
        this.nodes = this.node = this.core.nodesApi;
        this.content = new ContentApi(this);
        this.upload = new AlfrescoUpload(this);
        this.webScript = this.core.webscriptApi;
        this.bpmClient = this.processClient;
        this.ecmClient = this.contentClient;
    };
    AlfrescoApiCompatibility.prototype._instantiateOldObjects = function (module, moduleCopy) {
        var _this = this;
        var classArray = Object.keys(module);
        classArray.forEach(function (currentClass) {
            moduleCopy[currentClass] = module[currentClass];
            var obj = _this._stringToObject(currentClass, module);
            var nameObj = _this._lowerFirst(currentClass);
            obj === null || obj === void 0 ? void 0 : obj.init(_this);
            moduleCopy[nameObj] = obj;
        });
    };
    AlfrescoApiCompatibility.prototype._stringToObject = function (nameClass, module) {
        try {
            if (typeof module[nameClass] === 'function') {
                return new module[nameClass]();
            }
        }
        catch (error) {
            console.log(nameClass + '  ' + error);
        }
    };
    AlfrescoApiCompatibility.prototype._instantiateNewObjects = function (module, moduleCopy) {
        var _this = this;
        var classArray = Object.keys(module);
        classArray.forEach(function (currentClass) {
            moduleCopy[currentClass] = module[currentClass];
            var nameObj = _this._lowerFirst(currentClass);
            moduleCopy[nameObj] = new module[currentClass](_this);
        });
    };
    AlfrescoApiCompatibility.prototype._lowerFirst = function (text) {
        return text.charAt(0).toLowerCase() + text.slice(1);
    };
    return AlfrescoApiCompatibility;
}(AlfrescoApi));
export { AlfrescoApiCompatibility };
//# sourceMappingURL=../../../src/alfrescoApiCompatibility.js.map
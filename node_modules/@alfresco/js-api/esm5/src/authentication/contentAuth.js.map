{"version":3,"file":"contentAuth.js","sourceRoot":"","sources":["contentAuth.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n* @license\n* Copyright 2018 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport ee from 'event-emitter';\nimport { AuthenticationApi } from '../api/auth-rest-api/api/authentication.api';\nimport { AlfrescoApiClient } from '../alfrescoApiClient';\nimport { AlfrescoApiConfig } from '../alfrescoApiConfig';\nimport { AlfrescoApi } from '../alfrescoApi';\nimport { Authentication } from './authentication';\nimport { Storage } from '../storage';\n\nexport class ContentAuth extends AlfrescoApiClient {\n\n    ticketStorageLabel: string;\n    ticket: string;\n    storage: Storage;\n\n    authApi: AuthenticationApi;\n\n    constructor(config: AlfrescoApiConfig, alfrescoApi: AlfrescoApi) {\n        super();\n        this.className = 'ContentAuth';\n        this.storage = new Storage();\n        this.storage.setDomainPrefix(config.domainPrefix);\n\n        this.setConfig(config);\n\n        this.authApi = new AuthenticationApi(alfrescoApi);\n    }\n\n    setConfig(config: AlfrescoApiConfig) {\n        this.config = config;\n\n        this.basePath = this.config.hostEcm + '/' + this.config.contextRoot + '/api/-default-/public/authentication/versions/1'; //Auth Call\n\n        this.ticketStorageLabel = 'ticket-ECM';\n\n        if (this.config.ticketEcm) {\n            this.setTicket(config.ticketEcm);\n        } else if (this.storage.getItem(this.ticketStorageLabel)) {\n            this.setTicket(this.storage.getItem(this.ticketStorageLabel));\n        }\n\n    }\n\n    changeHost() {\n        this.basePath = this.config.hostEcm + '/' + this.config.contextRoot + '/api/-default-/public/authentication/versions/1'; //Auth Call\n        this.ticket = undefined;\n    }\n\n    saveUsername(username: string) {\n        if (this.storage.supportsStorage()) {\n            this.storage.setItem('ACS_USERNAME', username);\n        }\n    }\n\n    /**\n     * login Alfresco API\n     * @param  username:   // Username to login\n     * @param   password:   // Password to login\n     *\n     * @returns A promise that returns {new authentication ticket} if resolved and {error} if rejected.\n     * */\n    login(username: string, password: string): Promise<any> {\n        this.authentications.basicAuth.username = username;\n        this.authentications.basicAuth.password = password;\n\n        let loginRequest: any = {};\n\n        loginRequest.userId = this.authentications.basicAuth.username;\n        loginRequest.password = this.authentications.basicAuth.password;\n\n        let promise: any = new Promise((resolve, reject) => {\n            this.authApi.createTicket(loginRequest)\n                .then((data: any) => {\n                    this.saveUsername(username);\n                    this.setTicket(data.entry.id);\n                    promise.emit('success');\n                    this.emit('logged-in');\n                    resolve(data.entry.id);\n                })\n                .catch((error) => {\n                    this.saveUsername('');\n                    if (error.status === 401) {\n                        promise.emit('unauthorized');\n                    } else if (error.status === 403) {\n                        promise.emit('forbidden');\n                    } else {\n                        promise.emit('error');\n                    }\n                    reject(error);\n                });\n        });\n\n        ee(promise); // jshint ignore:line\n        return promise;\n    }\n\n    /**\n     * validate the ticket present in this.config.ticket against the server\n     *\n     * @returns A promise that returns  if resolved and {error} if rejected.\n     * */\n    validateTicket(): Promise<any> {\n        this.setTicket(this.config.ticketEcm);\n\n        let promise: any = new Promise((resolve, reject) => {\n            this.authApi.validateTicket().then((data: any) => {\n                    this.setTicket(data.entry.id);\n                    promise.emit('success');\n                    this.emit('logged-in');\n                    resolve(data.entry.id);\n                },\n                                               (error) => {\n                    if (error.status === 401) {\n                        promise.emit('unauthorized');\n                    }\n                    promise.emit('error');\n                    reject(error);\n                });\n        });\n\n        ee(promise); // jshint ignore:line\n        return promise;\n    }\n\n    /**\n     * logout Alfresco API\n     *\n     * @returns {Promise} A promise that returns { authentication ticket} if resolved and {error} if rejected.\n     * */\n    logout(): Promise<any> {\n        this.saveUsername('');\n        let promise: any = new Promise((resolve, reject) => {\n            this.authApi.deleteTicket().then(\n                () => {\n                    promise.emit('logout');\n                    this.invalidateSession();\n                    resolve('logout');\n                },\n                (error) => {\n                    if (error.status === 401) {\n                        promise.emit('unauthorized');\n                    }\n                    promise.emit('error');\n                    reject(error);\n                });\n        });\n\n        ee(promise); // jshint ignore:line\n        return promise;\n    }\n\n    /**\n     * Set the current Ticket\n     * */\n    setTicket(ticket: string) {\n        this.authentications.basicAuth.username = 'ROLE_TICKET';\n        this.authentications.basicAuth.password = ticket;\n        this.config.ticketEcm = ticket;\n        this.storage.setItem(this.ticketStorageLabel, ticket);\n        this.ticket = ticket;\n    }\n\n    /**\n     * Get the current Ticket\n     * */\n    getTicket(): string {\n        return this.ticket;\n    }\n\n    invalidateSession() {\n        this.storage.removeItem(this.ticketStorageLabel);\n        this.authentications.basicAuth.username = null;\n        this.authentications.basicAuth.password = null;\n        this.config.ticketEcm = null;\n        this.ticket = null;\n    }\n\n    /**\n     * If the client is logged in return true\n     */\n    isLoggedIn(): boolean {\n        return !!this.ticket;\n    }\n\n    /**\n     * return the Authentication\n     * */\n    getAuthentication(): Authentication {\n        return this.authentications;\n    }\n\n}\n"]}